{ "extends": [
    "eslint-config-airbnb",
    "prettier"
  ],
  "parser": "babel-eslint",
  "env": {
    "browser": true,
    "node": true,
    "jest": true
  },
  "rules": {

    //////////////// NEW /////////////////

    "prefer-destructuring": ["error", {
      "array": false,
      "object": false
    }, {
      "enforceForRenamedProperties": false
    }],

    "react/jsx-curly-newline": 0,
    "react/static-property-placement": 0,
    "react/jsx-props-no-spreading": 0,
    "react/destructuring-assignment": 0,
    "react/button-has-type": 0,
    "react/default-props-match-prop-types": 0,
    "react/prop-types": 0,
    "react/sort-comp": 0,
    "react/no-access-state-in-setstate": 0,
    "react/jsx-one-expression-per-line": 0,
    "react/jsx-curly-brace-presence": 0,
    "react/no-unused-state": 0,

    "import/order": 0,
    "no-restricted-globals": 0,
    "getter-return": 0,
    "prefer-promise-reject-errors": 0,
    "no-else-return": 0,

    "jsx-a11y/label-has-associated-control": 0,
    "jsx-a11y/control-has-associated-label": 0,

    ///////// END NEW //////////////////

    "camelcase": ['error', {
      "properties": "never",
      "ignoreDestructuring": false,
      "allow": [
        "UNSAFE_componentDidMount",
        "UNSAFE_componentWillMount"
      ]
    }],

    "prettier/prettier": "error",

    // Developer should choose whether concatenation or string templates make more sense.
    "prefer-template": 0,

    // We routinely import named modules in lodash, for example
    "import/prefer-default-export": 0,

    // Our imports aren't always resolved correctly by the linter
    "import/default": 0,
    "import/no-duplicates": 0,
    "import/named": 0,
    "import/namespace": 0,
    "import/no-unresolved": 0,
    "import/no-extraneous-dependencies": 0,
    "import/first": 0,
    "import/no-absolute-path": 0,

    // We're not including the .js extensions on imports.
    "import/extensions": [2, { "js": "never", "jpg": "always" }],

    // Sometimes braces are added so the arrow function can wrap
    "arrow-body-style": 0,

    // Underscores are a useful way to indicate that a property should be treated as private.
    "no-underscore-dangle": 0,

    // Style rules we can disable because prettier will fix them
    "react/jsx-indent": 0,

    // Unused vars are bad.
    "no-unused-vars": [1, {"args": "after-used", "ignoreRestSiblings": true, "varsIgnorePattern": "PropTypes|React", "argsIgnorePattern": "[iI]gnored"}],

    // Unused expressions are OK if ternary
    "no-unused-expressions": [1, {"allowTernary": true }],

    "no-return-assign": [2, "except-parens"],

    // We don't need a jsx extension.
    "react/jsx-filename-extension": 0,

    // Sometimes it's required.
    "react/no-danger": 0,

    // We should refactor and enable this rule.
    "react/style-prop-object": 0,

    // Prettier does it differently.
    "react/jsx-closing-bracket-location": 0,
    "react/jsx-indent-props": 0,
    "react/jsx-wrap-multilines": 0,

    // Consistency is more important.
    "react/prefer-stateless-function": 0,

    // Too many false positives from this rule.
    "react/no-unused-prop-types": 0,

    // This appears to be generally accepted as OK
    "react/no-did-mount-set-state": 0,
    "react/no-did-update-set-state": 0,

    // Rules we may not want to fix
    "no-plusplus": 0,
    "no-bitwise": 0,
    "no-prototype-builtins": 0,
    "react/forbid-prop-types": 0,
    "consistent-return": 0,
    "class-methods-use-this": 0,

    // Rules we should eventually enable.
    "react/require-default-props": 0,
    "react/jsx-no-bind": 0,

    // Hooks rules
    "react-hooks/rules-of-hooks": 2,
    "react-hooks/exhaustive-deps": 1,

    // Rules for WCAG we naturally follow
    "jsx-a11y/html-has-lang": 2,
    "jsx-a11y/iframe-has-title": 2,
    "jsx-a11y/lang": 2,

    // Rules for WCAG related to general ARIA implementation
    "jsx-a11y/aria-props": 2,
    "jsx-a11y/aria-proptypes": 2,
    "jsx-a11y/aria-role": 2,
    "jsx-a11y/aria-unsupported-elements": 2,
    "jsx-a11y/no-redundant-roles": 2,
    "jsx-a11y/role-has-required-aria-props": 2,
    "jsx-a11y/role-supports-aria-props": 2,
    "jsx-a11y/tabindex-no-positive": 2,

    // Rules for WCAG related to images
    "jsx-a11y/accessible-emoji": 2,
    "jsx-a11y/alt-text": 2,
    "jsx-a11y/img-redundant-alt": 2,

    // Rules for WCAG related to interactive/non-interactive/static element roles
    "jsx-a11y/no-interactive-element-to-noninteractive-role": 2,
    "jsx-a11y/no-noninteractive-element-interactions": 2,
    "jsx-a11y/no-noninteractive-element-to-interactive-role": 2,
    "jsx-a11y/no-static-element-interactions": 2,
    "jsx-a11y/href-no-hash": 0,
    "jsx-a11y/anchor-has-content": 2,
    "jsx-a11y/anchor-is-valid": 2,

    // Rules for WCAG related to form labels
    "jsx-a11y/label-has-for": [
      2,
      {
        "components": [ "Label" ],
        "required": {
          "some": [ "nesting", "id" ]
        },
        "allowChildren": false
      }
    ],

    // Rules for WCAG we should eventually enable
    "jsx-a11y/aria-activedescendant-has-tabindex": 0,
    "jsx-a11y/no-noninteractive-tabindex": 2,
    "jsx-a11y/interactive-supports-focus": 0,
    "jsx-a11y/click-events-have-key-events": 0,
    "jsx-a11y/mouse-events-have-key-events": 0,
    "jsx-a11y/no-access-key": 0,
    "jsx-a11y/no-onchange": 0,
    "jsx-a11y/media-has-caption": 0,
    "jsx-a11y/heading-has-content": 0,
    "jsx-a11y/no-autofocus": 0,
    "jsx-a11y/no-distracting-elements": 0,
    "jsx-a11y/scope": 0,
  },
  "plugins": [
    "react", "react-hooks", "import", "prettier", "jsx-a11y"
  ],
  "settings": {
    "import/parser": "babel-eslint",
    "import/resolve": {
      "moduleDirectory": ["node_modules", "src"]
    }
  },
  "globals": {
    "__DEVELOPMENT__": true,
    "__BROWSER__": true,
    "__SERVER__": false,
    "__DISABLE_SSR__": true,
    "__DEVTOOLS__": true,
    "__API_URL__": true,
    "__CABLE_URL__": true,
    "socket": true,
    "def": "readonly"
  },
  "overrides": [
    {
      "files": [ "*.stories.js" ],
      "rules": {
        "no-console": 0
      }
    }
  ]
}
