{"version":3,"file":"build/chunk-168-df4fa1f86024d92ca119.js","mappings":"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","sources":["webpack://manifold-client/./src/frontend/components/resource-player/Audio/styles.js","webpack://manifold-client/./src/frontend/components/resource-player/Audio/LoadableWaveform.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport IconComposer from \"global/components/utility/IconComposer\";\nimport { transientOptions } from \"helpers/emotionHelpers\";\nimport {\n  utilityPrimary,\n  setFocusStyle,\n  respond,\n  fluidScale,\n  transparentize\n} from \"theme/styles/mixins\";\n\nexport const Player = styled.div`\n  --hover-color: var(--color-interaction-light);\n  --focus-color: var(--color-interaction-light);\n\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Cover = styled(\"div\", transientOptions)`\n  ${setFocusStyle()}\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 50;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  background: ${transparentize(\"neutralBlack\", 0.5)};\n\n  ${({ $isError }) =>\n    $isError &&\n    `\n      pointer-events: none;\n      cursor: default;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n  `}\n`;\n\nexport const ErrorMessage = styled.div`\n  ${utilityPrimary}\n  padding: 0 10px;\n  margin-top: 1.25em;\n  font-size: 14px;\n  color: var(--color-base-neutral-white);\n  text-align: center;\n`;\n\nexport const Indicator = styled(\"div\", transientOptions)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 70px;\n  height: 70px;\n  padding: 1px 7px 2px;\n  color: var(--color-base-neutral-white);\n  text-align: center;\n  background-color: var(--color-accent-primary);\n  border: 0;\n  border-radius: 50%;\n\n  ${({ $absoluteCenter }) =>\n    $absoluteCenter &&\n    `\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    `}\n`;\n\nexport const WaveForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n`;\n\nexport const ControlBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 ${fluidScale(\"25px\", \"15px\")} ${fluidScale(\"19px\", \"10px\")};\n\n  button {\n    padding: 0;\n    background-color: transparent;\n    border: 0;\n    outline: none;\n\n    &:hover,\n    &:focus-visible {\n      --Icon-color: var(--hover-color);\n    }\n  }\n`;\n\nexport const Progress = styled.div`\n  --Slider-flex-grow: 1;\n  --Slider-margin: 0 15px;\n  --RangeInput-width: 100%;\n  --RangeInput-box-shadow: -1024px 0 0 1024px var(--color-base-neutral-white);\n\n  display: none;\n  flex-grow: 1;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px;\n  font-variant-numeric: tabular-nums;\n\n  ${respond(`display: flex;`, 40)}\n`;\n\nexport const Slider = styled.div`\n  position: relative;\n  display: inline-block;\n  flex-grow: var(--Slider-flex-grow, 0);\n  margin: var(--Slider-margin, 0);\n`;\n\nexport const Time = styled.div`\n  ${utilityPrimary}\n  font-size: 14px;\n  color: var(--color-base-neutral-white);\n\n  ${respond(`font-size: 19px;`, 60)}\n\n  &.duration {\n    color: var(--color-base-neutral80);\n  }\n`;\n\nexport const Volume = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: left;\n`;\n\nexport const Mute = styled.button`\n  display: inline-block;\n  width: 35px;\n  text-align: left;\n\n  ${respond(`margin-right: 7px;`, 60)}\n`;\n\nexport const ThumbInput = styled.div`\n  position: absolute;\n  inset-block-start: 50%;\n  inset-inline-start: 0;\n  width: 20px;\n  height: 20px;\n  pointer-events: none;\n  background: var(--color-accent-primary);\n  border: 3px solid var(--color-base-neutral-black);\n  border-radius: 50%;\n  transform: translate(-50%, -40%);\n`;\n\nexport const RangeInput = styled.input`\n  width: var(--RangeInput-width, 70px);\n  height: 0;\n  padding: 5px 0 0;\n  margin-top: 1px;\n  overflow: hidden;\n  vertical-align: middle;\n  background: var(--color-base-neutral80);\n  border-radius: 0;\n  outline: 0;\n  appearance: none;\n  cursor: pointer;\n\n  &::-webkit-slider-runnable-track {\n    height: 3px;\n    appearance: none;\n  }\n\n  &::-webkit-slider-thumb {\n    width: 1px;\n    height: 1px;\n    margin-top: -9px;\n    background: transparent;\n    box-shadow: var(\n      --RangeInput-box-shadow,\n      -70px 0 0 70px var(--color-base-neutral-white)\n    );\n    appearance: none;\n  }\n\n  &::-moz-range-progress {\n    color: var(--color-base-neutral80);\n  }\n`;\n\nconst iconStyles = `\n  position: relative;\n  color: var(--Icon-color, var(--color-base-neutral-white));\n  transition: color var(--transition-duration-fast)\n    var(--transition-timing-function);\n`;\n\nexport const PlayPauseIcon = styled(IconComposer)`\n  ${iconStyles}\n  top: 1px;\n\n  ${respond(\n    `width: 32px;\n        height: 32px;`,\n    60\n  )}\n`;\n\nexport const MuteIcon = styled(IconComposer)`\n  ${iconStyles}\n\n  ${respond(\n    `top: 1px;\n        width: 27.429px;\n        height: 27.429px;`,\n    60\n  )}\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useWavesurfer } from \"@wavesurfer/react\";\nimport { UIDConsumer } from \"react-uid\";\nimport { useTranslation } from \"react-i18next\";\nimport IconComposer from \"global/components/utility/IconComposer\";\nimport * as Styled from \"./styles\";\n\nfunction formatDuration(time) {\n  const min = Math.floor(time / 60);\n  let sec = Math.round(time - min * 60);\n  if (sec < 10) sec = `0${sec}`;\n  return `${min}:${sec}`;\n}\n\nexport default function LoadableWaveform({ resource }) {\n  const { t } = useTranslation();\n\n  const [isStarted, setStarted] = useState(false);\n  const [isErrored, setIsErrored] = useState(false);\n\n  const waveformRef = useRef(null);\n\n  const { wavesurfer, isReady, isPlaying, currentTime } = useWavesurfer({\n    container: waveformRef,\n    url: resource.attributes.attachmentStyles.original,\n    height: 275,\n    waveColor: \"#555\", // $neutral80\n    progressColor: getComputedStyle(document.body).getPropertyValue(\n      \"--color-accent-primary\"\n    ),\n    barWidth: 5,\n    barHeight: 1,\n    cursorWidth: 0\n  });\n\n  useEffect(() => {\n    if (wavesurfer) {\n      wavesurfer.on(\"error\", error => {\n        console.error(error);\n        setIsErrored(true);\n      });\n    }\n  }, [wavesurfer]);\n\n  const duration = wavesurfer?.getDuration();\n  const formattedDuration = formatDuration(duration);\n  const progress = !isNaN(currentTime / duration) ? currentTime / duration : 0;\n  const volume = !isNaN(wavesurfer?.getVolume()) ? wavesurfer?.getVolume() : 1;\n  const muted = wavesurfer?.getMuted();\n\n  function startPlayback() {\n    if (!isReady || !wavesurfer) return null;\n    setStarted(true);\n    wavesurfer.playPause();\n  }\n\n  function togglePlayback() {\n    if (wavesurfer) {\n      wavesurfer.playPause();\n    }\n  }\n\n  function handleProgressClick(event) {\n    const current = (event.target.value / 100) * duration;\n    const updatedProgress = current / duration;\n    if (wavesurfer) {\n      wavesurfer.seekTo(updatedProgress);\n    }\n  }\n\n  function toggleMute() {\n    if (wavesurfer) {\n      wavesurfer.setMuted(!muted);\n    }\n  }\n\n  function setVolume(event) {\n    if (wavesurfer) {\n      const newVolume = parseInt(event.target.value, 10);\n      wavesurfer.setMuted(false);\n      wavesurfer.setVolume(newVolume / 100);\n    }\n  }\n\n  if (isErrored) {\n    return (\n      <Styled.Player>\n        <Styled.Cover $isError>\n          <Styled.Indicator>\n            <IconComposer icon=\"stopSign64\" size={56.615} />\n          </Styled.Indicator>\n          <Styled.ErrorMessage\n            dangerouslySetInnerHTML={{ __html: t(\"errors.audio_playback\") }}\n          />\n        </Styled.Cover>\n      </Styled.Player>\n    );\n  }\n\n  return (\n    <Styled.Player>\n      {!isStarted && (\n        <Styled.Cover onClick={startPlayback} role=\"button\" tabIndex=\"0\">\n          <span className=\"screen-reader-text\">\n            {t(\"actions.start_playback\")}\n          </span>\n          <Styled.Indicator $absoluteCenter>\n            <IconComposer icon=\"playSolid24\" size={42.667} />\n          </Styled.Indicator>\n        </Styled.Cover>\n      )}\n      <Styled.WaveForm ref={waveformRef} />\n      <Styled.ControlBar>\n        <button onClick={togglePlayback}>\n          <span className=\"screen-reader-text\">\n            {isPlaying\n              ? t(\"actions.pause_playback\")\n              : t(\"actions.start_playback\")}\n          </span>\n          <Styled.PlayPauseIcon\n            icon={isPlaying ? \"pauseSolid24\" : \"playSolid24\"}\n            size={19.2}\n          />\n        </button>\n        <Styled.Progress>\n          <Styled.Time>{formatDuration(currentTime)}</Styled.Time>\n          <Styled.Slider>\n            <Styled.ThumbInput\n              style={{\n                insetInlineStart: `calc(${progress * 100}%)`\n              }}\n            />\n            <UIDConsumer name={id => `progress-bar-${id}`}>\n              {id => (\n                <>\n                  <label htmlFor={id} className=\"screen-reader-text\">\n                    {t(\"glossary.progress_bar\")}\n                  </label>\n                  <Styled.RangeInput\n                    id={id}\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={progress * 100}\n                    onChange={handleProgressClick}\n                  />\n                </>\n              )}\n            </UIDConsumer>\n          </Styled.Slider>\n          <Styled.Time>{formattedDuration}</Styled.Time>\n        </Styled.Progress>\n        <Styled.Volume>\n          <Styled.Mute onClick={toggleMute}>\n            <span className=\"screen-reader-text\">\n              {muted ? t(\"actions.unmute\") : t(\"actions.mute\")}\n            </span>\n            <Styled.MuteIcon\n              icon={muted ? \"speakerMuted24\" : \"speaker24\"}\n              size={21.333}\n            />\n          </Styled.Mute>\n          <Styled.Slider>\n            <Styled.ThumbInput\n              style={{\n                insetInlineStart: `${volume * 70}px`\n              }}\n            />\n            <UIDConsumer name={id => `volume-bar-${id}`}>\n              {id => (\n                <>\n                  <label htmlFor={id} className=\"screen-reader-text\">\n                    {t(\"actions.adjust_volume\")}\n                  </label>\n                  <Styled.RangeInput\n                    id={id}\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={volume * 100}\n                    onChange={setVolume}\n                  />\n                </>\n              )}\n            </UIDConsumer>\n          </Styled.Slider>\n        </Styled.Volume>\n      </Styled.ControlBar>\n    </Styled.Player>\n  );\n}\n\nLoadableWaveform.propTypes = {\n  resource: PropTypes.object\n};\n"],"names":["Player","_styled","target","name","styles","Cover","_extends","transientOptions","setFocusStyle","transparentize","_ref","$isError","ErrorMessage","utilityPrimary","Indicator","_ref2","$absoluteCenter","WaveForm","ControlBar","fluidScale","Progress","respond","Slider","Time","Volume","Mute","ThumbInput","RangeInput","iconStyles","PlayPauseIcon","IconComposer","MuteIcon","formatDuration","time","min","Math","floor","sec","round","LoadableWaveform","resource","t","useTranslation","isStarted","setStarted","useState","isErrored","setIsErrored","waveformRef","useRef","wavesurfer","isReady","isPlaying","currentTime","useWavesurfer","container","url","attributes","attachmentStyles","original","height","waveColor","progressColor","getComputedStyle","document","body","getPropertyValue","barWidth","barHeight","cursorWidth","useEffect","on","error","console","duration","getDuration","formattedDuration","progress","isNaN","volume","getVolume","muted","getMuted","handleProgressClick","event","updatedProgress","value","seekTo","setVolume","newVolume","parseInt","setMuted","_jsx","Styled","children","_jsxs","icon","size","dangerouslySetInnerHTML","__html","onClick","playPause","role","tabIndex","className","ref","style","insetInlineStart","UIDConsumer","id","_Fragment","htmlFor","type","max","onChange","propTypes","PropTypes"],"sourceRoot":""}