{"version":3,"file":"build/chunk-363-46098ba4355710223b12.js","mappings":"sSAQe,SAASA,EAAQC,GAY5B,IAZ6B,MAC/BC,EAAK,MACLC,EAAK,SACLC,EAAQ,eACRC,EAAc,gBACdC,EAAe,WACfC,EAAU,aACVC,EAAY,OACZC,EAAM,SACNC,EAAQ,WACRC,EAAU,SACVC,GACDX,EACC,MAAM,EAAEY,IAAMC,EAAAA,EAAAA,MAERC,EAAUC,EAAAA,EAAGC,KAAK,0BAA2BR,EAAQP,EAAMgB,IAE3DC,EAAwBjB,EAAMkB,WAAaT,EAAaC,EACxDS,EAAOnB,EAAMkB,WAAa,iBAAmB,mBAEnD,OACEE,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAACC,IAAKpB,KAAcC,EAAcoB,UAC5CC,EAAAA,EAAAA,MAACH,EAAAA,GAAY,CACXI,YAAapB,EACbqB,OAAQzB,EACR0B,UAAWrB,EAAaiB,SAAA,EAExBC,EAAAA,EAAAA,MAACH,EAAAA,GAAkB,CAAAE,SAAA,EACjBH,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CACZO,QAASA,IAAMpB,EAASR,EAAMgB,IAC9B,aAAYL,EAAE,kBAAkBY,UAEhCH,EAAAA,EAAAA,KAACS,EAAAA,EAAQC,aAAY,CAACC,KAAM,GAAIZ,KAAK,gBAEvCC,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAACW,GAAIC,EAAAA,GAAMC,GAAIrB,EAAS,aAAYF,EAAE,gBAAgBY,UAClEH,EAAAA,EAAAA,KAACS,EAAAA,EAAQC,aAAY,CAACC,KAAM,GAAIZ,KAAK,kBAEvCC,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAChB,mBAAiB,kCACbjB,EAAemB,UAEnBH,EAAAA,EAAAA,KAACS,EAAAA,EAAQC,aAAY,CAACC,KAAM,GAAIZ,KAAK,oBAGzCK,EAAAA,EAAAA,MAACH,EAAAA,GAAmB,CAAAE,SAAA,CACjBvB,EAAMmC,cACLf,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CACZO,QAASX,EACT,aAAYN,EAAE,gBACdyB,MAAO,CAAEC,iBAAkB,OAAQd,UAEnCH,EAAAA,EAAAA,KAACS,EAAAA,EAAQC,aAAY,CAACC,KAAM,GAAIZ,KAAMA,OAG1CC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAE,SAAEvB,EAAMsC,KAAOtC,EAAMsC,KAAKC,MAAQ,OAC5CtC,IAASmB,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACF,KAAK,qBAK7C,CAEArB,EAAS0C,YAAc,sBAEvB1C,EAAS2C,UAAY,CACnBzC,MAAO0C,IAAAA,OAAiBC,WACxB1C,MAAOyC,IAAAA,OAAiBC,WACxBzC,SAAUwC,IAAAA,KACVvC,eAAgBuC,IAAAA,OAChBtC,gBAAiBsC,IAAAA,OACjBrC,WAAYqC,IAAAA,KACZE,WAAYF,IAAAA,KACZG,QAASH,IAAAA,OACTnC,OAAQmC,IAAAA,OACRlC,SAAUkC,IAAAA,KACVI,QAASJ,IAAAA,KACTK,WAAYL,IAAAA,M,oCCjEC,SAASM,EAAOjD,GAA8C,IAA7C,KAAEkD,EAAI,QAAEC,EAAO,OAAE3C,EAAM,MAAE4C,EAAK,SAAEC,GAAUrD,EACxE,MAAM,EAAEY,IAAMC,EAAAA,EAAAA,OAEPyC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAC5CG,OAAOC,KAAKV,EAAKW,OAAOC,OAAS,IAE5BC,EAAeC,IAAoBR,EAAAA,EAAAA,UACxCG,OAAOC,KAAKV,EAAKW,OAAOC,OAAS,GAG7BG,GAAaC,EAAAA,EAAAA,IAAeC,EAAAA,GAASC,QASrC3D,EAAW4D,UACfhB,EAAS,MACT,MAAMiB,EAAW,CAACC,MAAYC,EAAAA,EAAAA,IAAsBD,EAASrB,EAAKW,QAC5DO,GAASK,EAAAA,EAAAA,IAAWH,EAAUpB,EAAKW,OACnCa,GAASC,EAAAA,EAAAA,IAAc,IAAKzB,EAAMW,MAAOO,IAEzCQ,QAAYX,EAAWzD,EAAQ,CAAEqE,WAAY,CAAEC,IAAKJ,KAC1D,GAAIE,SAAAA,EAAKG,OAAQ,OAAO1B,EAASuB,EAAIG,QACrC5B,GAAQ6B,EAAAA,EAAAA,IAAeN,GAAQ,EA+D3BO,EACM,YAAV7B,EACIxC,EAAE,sBACFsE,MAAMC,QAAQ/B,GACdA,EAAMgC,KAAIC,GAAKA,EAAEC,SAAQC,KAAK,MAC9BnC,EASN,OAAOF,GACLzB,EAAAA,EAAAA,MAACH,EAAAA,GAAc,CAACkE,UAAU,aAAaC,OAAQhC,EAAgBjC,SAAA,CAC5D4B,IAAS/B,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAE,SAAEyD,IACxB3B,IAAYjC,EAAAA,EAAAA,KAACC,EAAAA,GAAe,CAACmE,OAAQ1B,KACtCtC,EAAAA,EAAAA,MAACH,EAAAA,EAAsB,CAACmE,OAAQ9B,OAAOC,KAAKV,EAAKW,OAAOC,OAAS,EAAEtC,SAAA,EACjEH,EAAAA,EAAAA,KAACqE,EAAAA,EAAI,CACHxC,KAAMA,EACNyC,WA1DWC,IAA0C,IAAzC,KAAEC,EAAI,SAAEC,EAAQ,SAAEC,EAAQ,MAAE7F,GAAO0F,EACrD,MAAMvF,EAAkByF,EAASzF,uBAC1BA,EAAgB,wBAgBvB,OACEgB,EAAAA,EAAAA,KAAC2E,EAAK,CACJ/F,MAAO4F,EACP3F,MAAOA,EACPC,SAAU2F,EAAS3F,SACnBC,eAAgB0F,EAAS1F,eACzBC,gBAAiBA,EACjBC,WAAYyF,EAASzF,WACrBC,aAAcwF,EAASE,iBACvBC,YAAaJ,EAASI,YACtB1F,OAAQA,EACRC,SAAUA,EACVC,WA1BeA,KACjB,MAAM0D,GAAS+B,EAAAA,EAAAA,GAAWjD,EAAM2C,EAAK5E,GAAI,CAAEE,YAAY,IACvDgC,EAAQiB,GACR,MAAMgC,GAAcC,EAAAA,EAAAA,IAAiBR,EAAMzB,EAAOP,OAClDH,EAAmBD,EAAkB2C,EAAY,EAuB/CzF,SApBaA,KACf,MAAMyD,GAAS+B,EAAAA,EAAAA,GAAWjD,EAAM2C,EAAK5E,GAAI,CAAEE,YAAY,IACvDgC,EAAQiB,GACR,MAAMgC,GAAcC,EAAAA,EAAAA,IAAiBjC,EAAOP,MAAMgC,EAAK5E,IAAKmD,EAAOP,OACnEH,EAAmBD,EAAkB2C,EAAY,GAiB/C,EA2BEE,YAdYrF,IAClBsC,GAAY,GACZ,MAAM6C,GAAcC,EAAAA,EAAAA,IAAiBnD,EAAKW,MAAM5C,GAAKiC,EAAKW,OAC1DG,EAAiBP,EAAkB2C,EAAY,EAYzCG,UAnFUlC,MAAOmC,EAAQC,KAE/B,IAAIC,EACJ,GAFAnD,GAAY,GAEiB,SAAzBkD,EAAYE,UAAuBC,MAAMH,EAAYI,OAAQ,CAK/DH,EAAmB,CAAEC,SAAU,OAAQE,OAJfC,EAAAA,EAAAA,IACtBN,EAAOG,SACPzD,EAAKW,OAEyD,EAClE,MAKE6C,GALUK,EAAAA,EAAAA,IAAcN,EAAYE,SAAUzD,EAAKW,OAKhC4C,EAJA,CACjBE,UAAUK,EAAAA,EAAAA,IAAYP,EAAYE,SAAUzD,EAAKW,QAMrD,MAAMO,GAAS6C,EAAAA,EAAAA,GAAe/D,EAAMsD,EAAQE,GAnCzBrC,WACnBhB,EAAS,MACT,MAAMqB,GAASC,EAAAA,EAAAA,IAAcuC,GACvBtC,QAAYX,EAAWzD,EAAQ,CAAEqE,WAAY,CAAEC,IAAKJ,KACtDE,SAAAA,EAAKG,QAAQ1B,EAAS,UAAU,EAgCpC8D,CAAa/C,GAEbjB,EAAQiB,EAAO,EAgETgD,eAAa,EACbC,kBAAgB,EAChBC,eAAgB,KAElBjG,EAAAA,EAAAA,KAAA,QAAMmE,UAAU,qBAAqBvE,GAAG,+BAA8BO,SACnEZ,EAAE,8CAIP,IACN,CAEAqC,EAAQR,YAAc,gBAEtBQ,EAAQP,UAAY,CAClBQ,KAAMP,IAAAA,OAAiBC,WACvBO,QAASR,IAAAA,KAAeC,WACxBpC,OAAQmC,IAAAA,OAAiBC,W","sources":["webpack://manifold-client/./src/backend/components/authoring/TOCList/TOCEntry.js","webpack://manifold-client/./src/backend/components/authoring/TOCList/List.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Utility from \"global/components/utility\";\nimport { Link } from \"react-router-dom\";\nimport lh from \"helpers/linkHandler\";\nimport { useTranslation } from \"react-i18next\";\nimport * as Styled from \"./styles\";\n\nexport default function TOCEntry({\n  entry,\n  depth,\n  innerRef,\n  draggableProps,\n  dragHandleProps,\n  isDragging,\n  isdropTarget,\n  textId,\n  onDelete,\n  onCollapse,\n  onExpand\n}) {\n  const { t } = useTranslation();\n\n  const editUrl = lh.link(\"backendTextTOCEntryEdit\", textId, entry.id);\n\n  const collapseExpandHandler = entry.isExpanded ? onCollapse : onExpand;\n  const icon = entry.isExpanded ? \"DisclosureUp32\" : \"DisclosureDown32\";\n\n  return (\n    <Styled.Item ref={innerRef} {...draggableProps}>\n      <Styled.Inner\n        $isDragging={isDragging}\n        $depth={depth}\n        $isTarget={isdropTarget}\n      >\n        <Styled.ButtonGroup>\n          <Styled.Button\n            onClick={() => onDelete(entry.id)}\n            aria-label={t(\"actions.delete\")}\n          >\n            <Utility.IconComposer size={24} icon=\"delete24\" />\n          </Styled.Button>\n          <Styled.Button as={Link} to={editUrl} aria-label={t(\"actions.edit\")}>\n            <Utility.IconComposer size={24} icon=\"annotate24\" />\n          </Styled.Button>\n          <Styled.DragHandle\n            aria-describedby=\"toc-drag-handle-instructions\"\n            {...dragHandleProps}\n          >\n            <Utility.IconComposer size={30} icon=\"grabber32\" />\n          </Styled.DragHandle>\n        </Styled.ButtonGroup>\n        <Styled.TitleWrapper>\n          {entry.hasChildren && (\n            <Styled.Button\n              onClick={collapseExpandHandler}\n              aria-label={t(\"actions.edit\")}\n              style={{ marginBlockStart: \"2px\" }}\n            >\n              <Utility.IconComposer size={28} icon={icon} />\n            </Styled.Button>\n          )}\n          <Styled.Title>{entry.data ? entry.data.title : \"\"}</Styled.Title>\n          {!!depth && <Styled.ChildLink icon=\"tocLink16\" />}\n        </Styled.TitleWrapper>\n      </Styled.Inner>\n    </Styled.Item>\n  );\n}\n\nTOCEntry.displayName = \"Text.TOC.List.Entry\";\n\nTOCEntry.propTypes = {\n  entry: PropTypes.object.isRequired,\n  depth: PropTypes.number.isRequired,\n  innerRef: PropTypes.func,\n  draggableProps: PropTypes.object,\n  dragHandleProps: PropTypes.object,\n  isDragging: PropTypes.bool,\n  setCombine: PropTypes.func,\n  combine: PropTypes.string,\n  textId: PropTypes.string,\n  onDelete: PropTypes.func,\n  isStart: PropTypes.bool,\n  onSetStart: PropTypes.func\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport Tree, { mutateTree, moveItemOnTree } from \"@atlaskit/tree\";\nimport Entry from \"./TOCEntry\";\nimport {\n  formatTOCData,\n  formatTreeData,\n  getNestedTreeChildren,\n  getRootParentPosition,\n  removeKeys,\n  isValidParent,\n  getParentId,\n  getCollapseCount\n} from \"./treeHelpers\";\nimport { textsAPI } from \"api\";\nimport { useApiCallback } from \"hooks\";\nimport * as Styled from \"./styles\";\n\nexport default function TOCList({ tree, setTree, textId, error, setError }) {\n  const { t } = useTranslation();\n\n  const [dragging, setDragging] = useState(false);\n  const [pageHeightCount, setPageHeightCount] = useState(\n    Object.keys(tree.items).length - 1\n  );\n  const [dropzoneCount, setDropzoneCount] = useState(\n    Object.keys(tree.items).length - 1\n  );\n\n  const updateText = useApiCallback(textsAPI.update);\n\n  const onReorderTOC = async newTree => {\n    setError(null);\n    const newToc = formatTOCData(newTree);\n    const res = await updateText(textId, { attributes: { toc: newToc } });\n    if (res?.errors) setError(\"reorder\");\n  };\n\n  const onDelete = async entryId => {\n    setError(null);\n    const toDelete = [entryId, ...getNestedTreeChildren(entryId, tree.items)];\n    const update = removeKeys(toDelete, tree.items);\n    const newToc = formatTOCData({ ...tree, items: update });\n\n    const res = await updateText(textId, { attributes: { toc: newToc } });\n    if (res?.errors) return setError(res.errors);\n    setTree(formatTreeData(newToc));\n  };\n\n  const onDragEnd = async (source, destination) => {\n    setDragging(false);\n    let finalDestination;\n    if (destination.parentId === \"root\" && isNaN(destination.index)) {\n      const rootParentIndex = getRootParentPosition(\n        source.parentId,\n        tree.items\n      );\n      finalDestination = { parentId: \"root\", index: rootParentIndex + 1 };\n    } else if (!isValidParent(destination.parentId, tree.items)) {\n      finalDestination = {\n        parentId: getParentId(destination.parentId, tree.items)\n      };\n    } else {\n      finalDestination = destination;\n    }\n\n    const update = moveItemOnTree(tree, source, finalDestination);\n    onReorderTOC(update);\n\n    setTree(update);\n  };\n\n  const renderItem = ({ item, provided, snapshot, depth }) => {\n    const dragHandleProps = provided.dragHandleProps;\n    delete dragHandleProps[\"aria-roledescription\"];\n\n    const onCollapse = () => {\n      const update = mutateTree(tree, item.id, { isExpanded: false });\n      setTree(update);\n      const nestedCount = getCollapseCount(item, update.items);\n      setPageHeightCount(pageHeightCount - nestedCount);\n    };\n\n    const onExpand = () => {\n      const update = mutateTree(tree, item.id, { isExpanded: true });\n      setTree(update);\n      const nestedCount = getCollapseCount(update.items[item.id], update.items);\n      setPageHeightCount(pageHeightCount + nestedCount);\n    };\n\n    return (\n      <Entry\n        entry={item}\n        depth={depth}\n        innerRef={provided.innerRef}\n        draggableProps={provided.draggableProps}\n        dragHandleProps={dragHandleProps}\n        isDragging={snapshot.isDragging}\n        isdropTarget={snapshot.combineTargetFor}\n        placeholder={provided.placeholder}\n        textId={textId}\n        onDelete={onDelete}\n        onCollapse={onCollapse}\n        onExpand={onExpand}\n      />\n    );\n  };\n\n  /* eslint-disable no-nested-ternary */\n  const errorMessage =\n    error === \"reorder\"\n      ? t(\"errors.toc_reorder\")\n      : Array.isArray(error)\n      ? error.map(e => e.detail).join(\". \")\n      : error;\n  /* eslint-disable no-nested-ternary */\n\n  const onDragStart = id => {\n    setDragging(true);\n    const nestedCount = getCollapseCount(tree.items[id], tree.items);\n    setDropzoneCount(pageHeightCount - nestedCount);\n  };\n\n  return tree ? (\n    <Styled.Wrapper className=\"full-width\" $count={pageHeightCount}>\n      {error && <Styled.Error>{errorMessage}</Styled.Error>}\n      {dragging && <Styled.Dropzone $count={dropzoneCount} />}\n      <Styled.ScrollContainer $count={Object.keys(tree.items).length - 1}>\n        <Tree\n          tree={tree}\n          renderItem={renderItem}\n          onDragStart={onDragStart}\n          onDragEnd={onDragEnd}\n          isDragEnabled\n          isNestingEnabled\n          offsetPerLevel={0}\n        />\n        <span className=\"screen-reader-text\" id=\"toc-drag-handle-instructions\">\n          {t(\"texts.toc.drag_handle_instructions\")}\n        </span>\n      </Styled.ScrollContainer>\n    </Styled.Wrapper>\n  ) : null;\n}\n\nTOCList.displayName = \"Text.TOC.List\";\n\nTOCList.propTypes = {\n  tree: PropTypes.object.isRequired,\n  setTree: PropTypes.func.isRequired,\n  textId: PropTypes.string.isRequired\n};\n"],"names":["TOCEntry","_ref","entry","depth","innerRef","draggableProps","dragHandleProps","isDragging","isdropTarget","textId","onDelete","onCollapse","onExpand","t","useTranslation","editUrl","lh","link","id","collapseExpandHandler","isExpanded","icon","_jsx","Styled","ref","children","_jsxs","$isDragging","$depth","$isTarget","onClick","Utility","IconComposer","size","as","Link","to","hasChildren","style","marginBlockStart","data","title","displayName","propTypes","PropTypes","isRequired","setCombine","combine","isStart","onSetStart","TOCList","tree","setTree","error","setError","dragging","setDragging","useState","pageHeightCount","setPageHeightCount","Object","keys","items","length","dropzoneCount","setDropzoneCount","updateText","useApiCallback","textsAPI","update","async","toDelete","entryId","getNestedTreeChildren","removeKeys","newToc","formatTOCData","res","attributes","toc","errors","formatTreeData","errorMessage","Array","isArray","map","e","detail","join","className","$count","Tree","renderItem","_ref2","item","provided","snapshot","Entry","combineTargetFor","placeholder","mutateTree","nestedCount","getCollapseCount","onDragStart","onDragEnd","source","destination","finalDestination","parentId","isNaN","index","getRootParentPosition","isValidParent","getParentId","moveItemOnTree","newTree","onReorderTOC","isDragEnabled","isNestingEnabled","offsetPerLevel"],"sourceRoot":""}