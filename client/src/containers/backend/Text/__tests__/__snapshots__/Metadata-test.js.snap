// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend Text Metadata Container renders correctly 1`] = `
"<MemoryRouter>
  <Router history={{...}}>
    <Provider store={{...}}>
      <Text.Metadata text={{...}}>
        <Metadata.Form model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\">
          <section>
            <withRouter(Connect(Form.Form)) model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\">
              <Route render={[Function: render]}>
                <Connect(Form.Form) model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]}>
                  <Form.Form model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} session={{...}} response={[undefined]} errors={[undefined]} dispatch={[Function]} doNotWarn={false} debug={false} groupErrors={false} options={{...}}>
                    <div>
                      <Prompt when={false} message=\\"You may have unsaved changes. Do you want to leave without saving your changes?\\" />
                      <form onSubmit={[Function: bound handleSubmit]} className=\\"form-secondary\\" data-id=\\"submit\\">
                        <FieldGroup label=\\"Identity\\" horizontal={false} instructions={{...}} actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                          <div className=\\"form-section\\">
                            <header className=\\"form-section-label\\">
                              <span>
                                Identity
                              </span>
                            </header>
                            <Instructions instructions={{...}} />
                            <Form.Setter('Form.TextInput) focusOnMount={true} placeholder=\\"International Standard Book Number\\" instructions={[undefined]} label=\\"isbn\\" name=\\"attributes[metadata][isbn]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={true} placeholder=\\"International Standard Book Number\\" instructions={[undefined]} label=\\"isbn\\" name=\\"attributes[metadata][isbn]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][isbn]\\" errors={{...}} label=\\"isbn\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      isbn
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder=\\"International Standard Book Number\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"International Standard Serial Number\\" instructions={[undefined]} label=\\"issn\\" name=\\"attributes[metadata][issn]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"International Standard Serial Number\\" instructions={[undefined]} label=\\"issn\\" name=\\"attributes[metadata][issn]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][issn]\\" errors={{...}} label=\\"issn\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      issn
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder=\\"International Standard Serial Number\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                          </div>
                        </FieldGroup>
                        <FieldGroup label=\\"Publisher\\" horizontal={false} instructions={{...}} actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                          <div className=\\"form-section\\">
                            <header className=\\"form-section-label\\">
                              <span>
                                Publisher
                              </span>
                            </header>
                            <Instructions instructions={{...}} />
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"The Publisher\\" instructions={[undefined]} label=\\"publisher\\" name=\\"attributes[metadata][publisher]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"The Publisher\\" instructions={[undefined]} label=\\"publisher\\" name=\\"attributes[metadata][publisher]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][publisher]\\" errors={{...}} label=\\"publisher\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      publisher
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder=\\"The Publisher\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"Geographic location of the publisher\\" instructions=\\"e.g \\"Minnesota, MN\\"\\" label=\\"publisher place\\" name=\\"attributes[metadata][publisherPlace]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"Geographic location of the publisher\\" instructions=\\"e.g \\"Minnesota, MN\\"\\" label=\\"publisher place\\" name=\\"attributes[metadata][publisherPlace]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][publisherPlace]\\" errors={{...}} label=\\"publisher place\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"has-instructions\\">
                                      publisher place
                                    </label>
                                    <Instructions instructions=\\"e.g \\"Minnesota, MN\\"\\">
                                      <span className=\\"instructions\\">
                                        e.g &quot;Minnesota, MN&quot;
                                      </span>
                                    </Instructions>
                                    <input type=\\"text\\" placeholder=\\"Geographic location of the publisher\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"Original publisher, for items that have been republished by a different publisher\\" instructions={[undefined]} label=\\"original publisher\\" name=\\"attributes[metadata][originalPublisher]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"Original publisher, for items that have been republished by a different publisher\\" instructions={[undefined]} label=\\"original publisher\\" name=\\"attributes[metadata][originalPublisher]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][originalPublisher]\\" errors={{...}} label=\\"original publisher\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      original publisher
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder=\\"Original publisher, for items that have been republished by a different publisher\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"Geographic location of the original publisher\\" instructions={[undefined]} label=\\"original publisher place\\" name=\\"attributes[metadata][originalPublisherPlace]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"Geographic location of the original publisher\\" instructions={[undefined]} label=\\"original publisher place\\" name=\\"attributes[metadata][originalPublisherPlace]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][originalPublisherPlace]\\" errors={{...}} label=\\"original publisher place\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      original publisher place
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder=\\"Geographic location of the original publisher\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                          </div>
                        </FieldGroup>
                        <FieldGroup label=\\"Bibliographic\\" horizontal={false} instructions={{...}} actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                          <div className=\\"form-section\\">
                            <header className=\\"form-section-label\\">
                              <span>
                                Bibliographic
                              </span>
                            </header>
                            <Instructions instructions={{...}} />
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"Title of the container holding the item\\" instructions=\\"e.g. the book title for a book chapter, the journal title for a journal article\\" label=\\"container title\\" name=\\"attributes[metadata][containerTitle]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"Title of the container holding the item\\" instructions=\\"e.g. the book title for a book chapter, the journal title for a journal article\\" label=\\"container title\\" name=\\"attributes[metadata][containerTitle]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][containerTitle]\\" errors={{...}} label=\\"container title\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"has-instructions\\">
                                      container title
                                    </label>
                                    <Instructions instructions=\\"e.g. the book title for a book chapter, the journal title for a journal article\\">
                                      <span className=\\"instructions\\">
                                        e.g. the book title for a book chapter, the journal title for a journal article
                                      </span>
                                    </Instructions>
                                    <input type=\\"text\\" placeholder=\\"Title of the container holding the item\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"Version of the item\\" instructions={[undefined]} label=\\"version\\" name=\\"attributes[metadata][version]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"Version of the item\\" instructions={[undefined]} label=\\"version\\" name=\\"attributes[metadata][version]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][version]\\" errors={{...}} label=\\"version\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      version
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder=\\"Version of the item\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"(Container) edition holding the item\\" instructions=\\"e.g. \\"3\\" when citing a chapter in the third edition of a book\\" label=\\"edition\\" name=\\"attributes[metadata][edition]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"(Container) edition holding the item\\" instructions=\\"e.g. \\"3\\" when citing a chapter in the third edition of a book\\" label=\\"edition\\" name=\\"attributes[metadata][edition]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][edition]\\" errors={{...}} label=\\"edition\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"has-instructions\\">
                                      edition
                                    </label>
                                    <Instructions instructions=\\"e.g. \\"3\\" when citing a chapter in the third edition of a book\\">
                                      <span className=\\"instructions\\">
                                        e.g. &quot;3&quot; when citing a chapter in the third edition of a book
                                      </span>
                                    </Instructions>
                                    <input type=\\"text\\" placeholder=\\"(Container) edition holding the item\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"(Container) issue holding the item\\" instructions=\\"e.g. \\"5\\" when citing a journal article from journal volume 2, issue 5\\" label=\\"issue\\" name=\\"attributes[metadata][issue]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"(Container) issue holding the item\\" instructions=\\"e.g. \\"5\\" when citing a journal article from journal volume 2, issue 5\\" label=\\"issue\\" name=\\"attributes[metadata][issue]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][issue]\\" errors={{...}} label=\\"issue\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"has-instructions\\">
                                      issue
                                    </label>
                                    <Instructions instructions=\\"e.g. \\"5\\" when citing a journal article from journal volume 2, issue 5\\">
                                      <span className=\\"instructions\\">
                                        e.g. &quot;5&quot; when citing a journal article from journal volume 2, issue 5
                                      </span>
                                    </Instructions>
                                    <input type=\\"text\\" placeholder=\\"(Container) issue holding the item\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"(Container) volume holding the item \\" instructions=\\"e.g. “2” when citing a chapter from book volume 2\\" label=\\"volume\\" name=\\"attributes[metadata][volume]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"(Container) volume holding the item \\" instructions=\\"e.g. “2” when citing a chapter from book volume 2\\" label=\\"volume\\" name=\\"attributes[metadata][volume]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][volume]\\" errors={{...}} label=\\"volume\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"has-instructions\\">
                                      volume
                                    </label>
                                    <Instructions instructions=\\"e.g. “2” when citing a chapter from book volume 2\\">
                                      <span className=\\"instructions\\">
                                        e.g. “2” when citing a chapter from book volume 2
                                      </span>
                                    </Instructions>
                                    <input type=\\"text\\" placeholder=\\"(Container) volume holding the item \\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder=\\"Title of the original version\\" instructions={[undefined]} label=\\"original title\\" name=\\"attributes[metadata][originalTitle]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder=\\"Title of the original version\\" instructions={[undefined]} label=\\"original title\\" name=\\"attributes[metadata][originalTitle]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][originalTitle]\\" errors={{...}} label=\\"original title\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      original title
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder=\\"Title of the original version\\" onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                          </div>
                        </FieldGroup>
                        <FieldGroup label=\\"Other\\" horizontal={false} instructions={{...}} actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                          <div className=\\"form-section\\">
                            <header className=\\"form-section-label\\">
                              <span>
                                Other
                              </span>
                            </header>
                            <Instructions instructions={{...}} />
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"abstract\\" name=\\"attributes[metadata][abstract]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"abstract\\" name=\\"attributes[metadata][abstract]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][abstract]\\" errors={{...}} label=\\"abstract\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      abstract
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive\\" name=\\"attributes[metadata][archive]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive\\" name=\\"attributes[metadata][archive]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][archive]\\" errors={{...}} label=\\"archive\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      archive
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive location\\" name=\\"attributes[metadata][archiveLocation]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive location\\" name=\\"attributes[metadata][archiveLocation]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][archiveLocation]\\" errors={{...}} label=\\"archive location\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      archive location
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive place\\" name=\\"attributes[metadata][archivePlace]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive place\\" name=\\"attributes[metadata][archivePlace]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][archivePlace]\\" errors={{...}} label=\\"archive place\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      archive place
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"authority\\" name=\\"attributes[metadata][authority]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"authority\\" name=\\"attributes[metadata][authority]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][authority]\\" errors={{...}} label=\\"authority\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      authority
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"call number\\" name=\\"attributes[metadata][callNumber]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"call number\\" name=\\"attributes[metadata][callNumber]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][callNumber]\\" errors={{...}} label=\\"call number\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      call number
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"chapter number\\" name=\\"attributes[metadata][chapterNumber]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"chapter number\\" name=\\"attributes[metadata][chapterNumber]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][chapterNumber]\\" errors={{...}} label=\\"chapter number\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      chapter number
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection number\\" name=\\"attributes[metadata][collectionNumber]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection number\\" name=\\"attributes[metadata][collectionNumber]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][collectionNumber]\\" errors={{...}} label=\\"collection number\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      collection number
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection title\\" name=\\"attributes[metadata][collectionTitle]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection title\\" name=\\"attributes[metadata][collectionTitle]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][collectionTitle]\\" errors={{...}} label=\\"collection title\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      collection title
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"dimensions\\" name=\\"attributes[metadata][dimensions]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"dimensions\\" name=\\"attributes[metadata][dimensions]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][dimensions]\\" errors={{...}} label=\\"dimensions\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      dimensions
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event\\" name=\\"attributes[metadata][event]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event\\" name=\\"attributes[metadata][event]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][event]\\" errors={{...}} label=\\"event\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      event
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event place\\" name=\\"attributes[metadata][eventPlace]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event place\\" name=\\"attributes[metadata][eventPlace]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][eventPlace]\\" errors={{...}} label=\\"event place\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      event place
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"jurisdiction\\" name=\\"attributes[metadata][jurisdiction]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"jurisdiction\\" name=\\"attributes[metadata][jurisdiction]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][jurisdiction]\\" errors={{...}} label=\\"jurisdiction\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      jurisdiction
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"medium\\" name=\\"attributes[metadata][medium]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"medium\\" name=\\"attributes[metadata][medium]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][medium]\\" errors={{...}} label=\\"medium\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      medium
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number\\" name=\\"attributes[metadata][number]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number\\" name=\\"attributes[metadata][number]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][number]\\" errors={{...}} label=\\"number\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      number
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of pages\\" name=\\"attributes[metadata][numberOfPages]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of pages\\" name=\\"attributes[metadata][numberOfPages]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][numberOfPages]\\" errors={{...}} label=\\"number of pages\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      number of pages
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of volumes\\" name=\\"attributes[metadata][numberOfVolumes]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of volumes\\" name=\\"attributes[metadata][numberOfVolumes]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][numberOfVolumes]\\" errors={{...}} label=\\"number of volumes\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      number of volumes
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmcid\\" name=\\"attributes[metadata][pmcid]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmcid\\" name=\\"attributes[metadata][pmcid]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][pmcid]\\" errors={{...}} label=\\"pmcid\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      pmcid
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmid\\" name=\\"attributes[metadata][pmid]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmid\\" name=\\"attributes[metadata][pmid]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][pmid]\\" errors={{...}} label=\\"pmid\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      pmid
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"reviewed title\\" name=\\"attributes[metadata][reviewedTitle]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"reviewed title\\" name=\\"attributes[metadata][reviewedTitle]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][reviewedTitle]\\" errors={{...}} label=\\"reviewed title\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      reviewed title
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"section\\" name=\\"attributes[metadata][section]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"section\\" name=\\"attributes[metadata][section]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][section]\\" errors={{...}} label=\\"section\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      section
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                            <Form.Setter('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"year suffix\\" name=\\"attributes[metadata][yearSuffix]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                              <Form.TextInput focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"year suffix\\" name=\\"attributes[metadata][yearSuffix]\\" getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false}>
                                <Errorable className=\\"form-input\\" name=\\"attributes[metadata][yearSuffix]\\" errors={{...}} label=\\"year suffix\\" containerStyle={{...}}>
                                  <div style={{...}} className=\\"form-input\\">
                                    <label className=\\"\\">
                                      year suffix
                                    </label>
                                    <Instructions instructions={{...}} />
                                    <input type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" />
                                  </div>
                                </Errorable>
                              </Form.TextInput>
                            </Form.Setter('Form.TextInput)>
                          </div>
                        </FieldGroup>
                        <Form.Save text=\\"Save Metadata\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"backend-project-general\\" submitKey={{...}} errors={{...}}>
                          <div className=\\"form-input submit\\">
                            <input className=\\"button-secondary outlined\\" type=\\"submit\\" value=\\"Save Metadata\\" />
                          </div>
                        </Form.Save>
                      </form>
                    </div>
                  </Form.Form>
                </Connect(Form.Form)>
              </Route>
            </withRouter(Connect(Form.Form))>
          </section>
        </Metadata.Form>
      </Text.Metadata>
    </Provider>
  </Router>
</MemoryRouter>"
`;
