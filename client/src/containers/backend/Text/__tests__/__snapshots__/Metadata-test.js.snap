// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend Text Metadata Container renders correctly 1`] = `
"<MemoryRouter>
  <Router history={{...}}>
    <Provider store={{...}}>
      <Text.Metadata text={{...}}>
        <Metadata.Form model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\">
          <section>
            <withRouter(Connect(HigherOrder.FetchData('Form.Form))) model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\">
              <Route>
                <Connect(HigherOrder.FetchData('Form.Form)) model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]}>
                  <HigherOrder.FetchData('Form.Form) model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} session={{...}} response={[undefined]} errors={[undefined]} dispatch={[Function]}>
                    <Form.Form model={{...}} name=\\"backend-project-general\\" update={[Function: update]} create={[Function: create]} className=\\"form-secondary\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} session={{...}} response={[undefined]} errors={[undefined]} dispatch={[Function]} fetchData={[Function]} doNotWarn={false} notificationScope=\\"global\\" debug={false} groupErrors={false} options={{...}}>
                      <div>
                        <Prompt when={false} message=\\"You may have unsaved changes. Do you want to leave without saving your changes?\\" />
                        <form onSubmit={[Function]} className=\\"form-secondary\\" data-id=\\"submit\\">
                          <FieldGroup label=\\"Identity\\" disabled={false} horizontal={false} wide={false} instructions={{...}}>
                            <div className=\\"form-section\\">
                              <header className=\\"form-section-label\\">
                                <span>
                                  Identity
                                </span>
                              </header>
                              <Instructions instructions={{...}} />
                              <div className=\\"form-input-group\\">
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={true} placeholder=\\"International Standard Book Number\\" instructions={[undefined]} label=\\"isbn\\" name=\\"attributes[metadata][isbn]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={true} placeholder=\\"International Standard Book Number\\" instructions={[undefined]} label=\\"isbn\\" name=\\"attributes[metadata][isbn]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={true} placeholder=\\"International Standard Book Number\\" instructions={[undefined]} label=\\"isbn\\" name=\\"attributes[metadata][isbn]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][isbn]\\" errors={[undefined]} label=\\"isbn\\" idForError=\\"attributes[metadata][isbn]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][isbn]-text-input-15\\" className=\\"\\">
                                            isbn
                                          </label>
                                          <input id=\\"attributes[metadata][isbn]-text-input-15\\" type=\\"text\\" placeholder=\\"International Standard Book Number\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][isbn]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"International Standard Serial Number\\" instructions={[undefined]} label=\\"issn\\" name=\\"attributes[metadata][issn]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"International Standard Serial Number\\" instructions={[undefined]} label=\\"issn\\" name=\\"attributes[metadata][issn]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"International Standard Serial Number\\" instructions={[undefined]} label=\\"issn\\" name=\\"attributes[metadata][issn]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][issn]\\" errors={[undefined]} label=\\"issn\\" idForError=\\"attributes[metadata][issn]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][issn]-text-input-15\\" className=\\"\\">
                                            issn
                                          </label>
                                          <input id=\\"attributes[metadata][issn]-text-input-15\\" type=\\"text\\" placeholder=\\"International Standard Serial Number\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][issn]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                              </div>
                            </div>
                          </FieldGroup>
                          <FieldGroup label=\\"Publisher\\" disabled={false} horizontal={false} wide={false} instructions={{...}}>
                            <div className=\\"form-section\\">
                              <header className=\\"form-section-label\\">
                                <span>
                                  Publisher
                                </span>
                              </header>
                              <Instructions instructions={{...}} />
                              <div className=\\"form-input-group\\">
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"The Publisher\\" instructions={[undefined]} label=\\"publisher\\" name=\\"attributes[metadata][publisher]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"The Publisher\\" instructions={[undefined]} label=\\"publisher\\" name=\\"attributes[metadata][publisher]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"The Publisher\\" instructions={[undefined]} label=\\"publisher\\" name=\\"attributes[metadata][publisher]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][publisher]\\" errors={[undefined]} label=\\"publisher\\" idForError=\\"attributes[metadata][publisher]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][publisher]-text-input-15\\" className=\\"\\">
                                            publisher
                                          </label>
                                          <input id=\\"attributes[metadata][publisher]-text-input-15\\" type=\\"text\\" placeholder=\\"The Publisher\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][publisher]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"Geographic location of the publisher\\" instructions=\\"e.g \\"Minneapolis, MN\\"\\" label=\\"publisher place\\" name=\\"attributes[metadata][publisherPlace]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Geographic location of the publisher\\" instructions=\\"e.g \\"Minneapolis, MN\\"\\" label=\\"publisher place\\" name=\\"attributes[metadata][publisherPlace]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Geographic location of the publisher\\" instructions=\\"e.g \\"Minneapolis, MN\\"\\" label=\\"publisher place\\" name=\\"attributes[metadata][publisherPlace]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][publisherPlace]\\" errors={[undefined]} label=\\"publisher place\\" idForError=\\"attributes[metadata][publisherPlace]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][publisherPlace]-text-input-15\\" className=\\"has-instructions\\">
                                            publisher place
                                          </label>
                                          <input id=\\"attributes[metadata][publisherPlace]-text-input-15\\" type=\\"text\\" placeholder=\\"Geographic location of the publisher\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][publisherPlace]-text-input-15\\" />
                                          <Instructions instructions=\\"e.g \\"Minneapolis, MN\\"\\">
                                            <span className=\\"instructions\\">
                                              e.g &quot;Minneapolis, MN&quot;
                                            </span>
                                          </Instructions>
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"Original publisher, for items that have been republished by a different publisher\\" instructions={[undefined]} label=\\"original publisher\\" name=\\"attributes[metadata][originalPublisher]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Original publisher, for items that have been republished by a different publisher\\" instructions={[undefined]} label=\\"original publisher\\" name=\\"attributes[metadata][originalPublisher]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Original publisher, for items that have been republished by a different publisher\\" instructions={[undefined]} label=\\"original publisher\\" name=\\"attributes[metadata][originalPublisher]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][originalPublisher]\\" errors={[undefined]} label=\\"original publisher\\" idForError=\\"attributes[metadata][originalPublisher]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][originalPublisher]-text-input-15\\" className=\\"\\">
                                            original publisher
                                          </label>
                                          <input id=\\"attributes[metadata][originalPublisher]-text-input-15\\" type=\\"text\\" placeholder=\\"Original publisher, for items that have been republished by a different publisher\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][originalPublisher]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"Geographic location of the original publisher\\" instructions={[undefined]} label=\\"original publisher place\\" name=\\"attributes[metadata][originalPublisherPlace]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Geographic location of the original publisher\\" instructions={[undefined]} label=\\"original publisher place\\" name=\\"attributes[metadata][originalPublisherPlace]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Geographic location of the original publisher\\" instructions={[undefined]} label=\\"original publisher place\\" name=\\"attributes[metadata][originalPublisherPlace]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][originalPublisherPlace]\\" errors={[undefined]} label=\\"original publisher place\\" idForError=\\"attributes[metadata][originalPublisherPlace]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][originalPublisherPlace]-text-input-15\\" className=\\"\\">
                                            original publisher place
                                          </label>
                                          <input id=\\"attributes[metadata][originalPublisherPlace]-text-input-15\\" type=\\"text\\" placeholder=\\"Geographic location of the original publisher\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][originalPublisherPlace]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                              </div>
                            </div>
                          </FieldGroup>
                          <FieldGroup label=\\"Bibliographic\\" disabled={false} horizontal={false} wide={false} instructions={{...}}>
                            <div className=\\"form-section\\">
                              <header className=\\"form-section-label\\">
                                <span>
                                  Bibliographic
                                </span>
                              </header>
                              <Instructions instructions={{...}} />
                              <div className=\\"form-input-group\\">
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"Title of the container holding the item\\" instructions=\\"e.g. the book title for a book chapter, the journal title for a journal article\\" label=\\"container title\\" name=\\"attributes[metadata][containerTitle]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Title of the container holding the item\\" instructions=\\"e.g. the book title for a book chapter, the journal title for a journal article\\" label=\\"container title\\" name=\\"attributes[metadata][containerTitle]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Title of the container holding the item\\" instructions=\\"e.g. the book title for a book chapter, the journal title for a journal article\\" label=\\"container title\\" name=\\"attributes[metadata][containerTitle]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][containerTitle]\\" errors={[undefined]} label=\\"container title\\" idForError=\\"attributes[metadata][containerTitle]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][containerTitle]-text-input-15\\" className=\\"has-instructions\\">
                                            container title
                                          </label>
                                          <input id=\\"attributes[metadata][containerTitle]-text-input-15\\" type=\\"text\\" placeholder=\\"Title of the container holding the item\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][containerTitle]-text-input-15\\" />
                                          <Instructions instructions=\\"e.g. the book title for a book chapter, the journal title for a journal article\\">
                                            <span className=\\"instructions\\">
                                              e.g. the book title for a book chapter, the journal title for a journal article
                                            </span>
                                          </Instructions>
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"Version of the item\\" instructions={[undefined]} label=\\"version\\" name=\\"attributes[metadata][version]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Version of the item\\" instructions={[undefined]} label=\\"version\\" name=\\"attributes[metadata][version]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Version of the item\\" instructions={[undefined]} label=\\"version\\" name=\\"attributes[metadata][version]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][version]\\" errors={[undefined]} label=\\"version\\" idForError=\\"attributes[metadata][version]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][version]-text-input-15\\" className=\\"\\">
                                            version
                                          </label>
                                          <input id=\\"attributes[metadata][version]-text-input-15\\" type=\\"text\\" placeholder=\\"Version of the item\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][version]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"(Container) edition holding the item\\" instructions=\\"e.g. \\"3\\" when citing a chapter in the third edition of a book\\" label=\\"edition\\" name=\\"attributes[metadata][edition]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"(Container) edition holding the item\\" instructions=\\"e.g. \\"3\\" when citing a chapter in the third edition of a book\\" label=\\"edition\\" name=\\"attributes[metadata][edition]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"(Container) edition holding the item\\" instructions=\\"e.g. \\"3\\" when citing a chapter in the third edition of a book\\" label=\\"edition\\" name=\\"attributes[metadata][edition]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][edition]\\" errors={[undefined]} label=\\"edition\\" idForError=\\"attributes[metadata][edition]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][edition]-text-input-15\\" className=\\"has-instructions\\">
                                            edition
                                          </label>
                                          <input id=\\"attributes[metadata][edition]-text-input-15\\" type=\\"text\\" placeholder=\\"(Container) edition holding the item\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][edition]-text-input-15\\" />
                                          <Instructions instructions=\\"e.g. \\"3\\" when citing a chapter in the third edition of a book\\">
                                            <span className=\\"instructions\\">
                                              e.g. &quot;3&quot; when citing a chapter in the third edition of a book
                                            </span>
                                          </Instructions>
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"(Container) issue holding the item\\" instructions=\\"e.g. \\"5\\" when citing a journal article from journal volume 2, issue 5\\" label=\\"issue\\" name=\\"attributes[metadata][issue]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"(Container) issue holding the item\\" instructions=\\"e.g. \\"5\\" when citing a journal article from journal volume 2, issue 5\\" label=\\"issue\\" name=\\"attributes[metadata][issue]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"(Container) issue holding the item\\" instructions=\\"e.g. \\"5\\" when citing a journal article from journal volume 2, issue 5\\" label=\\"issue\\" name=\\"attributes[metadata][issue]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][issue]\\" errors={[undefined]} label=\\"issue\\" idForError=\\"attributes[metadata][issue]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][issue]-text-input-15\\" className=\\"has-instructions\\">
                                            issue
                                          </label>
                                          <input id=\\"attributes[metadata][issue]-text-input-15\\" type=\\"text\\" placeholder=\\"(Container) issue holding the item\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][issue]-text-input-15\\" />
                                          <Instructions instructions=\\"e.g. \\"5\\" when citing a journal article from journal volume 2, issue 5\\">
                                            <span className=\\"instructions\\">
                                              e.g. &quot;5&quot; when citing a journal article from journal volume 2, issue 5
                                            </span>
                                          </Instructions>
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"(Container) volume holding the item \\" instructions=\\"e.g. “2” when citing a chapter from book volume 2\\" label=\\"volume\\" name=\\"attributes[metadata][volume]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"(Container) volume holding the item \\" instructions=\\"e.g. “2” when citing a chapter from book volume 2\\" label=\\"volume\\" name=\\"attributes[metadata][volume]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"(Container) volume holding the item \\" instructions=\\"e.g. “2” when citing a chapter from book volume 2\\" label=\\"volume\\" name=\\"attributes[metadata][volume]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][volume]\\" errors={[undefined]} label=\\"volume\\" idForError=\\"attributes[metadata][volume]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][volume]-text-input-15\\" className=\\"has-instructions\\">
                                            volume
                                          </label>
                                          <input id=\\"attributes[metadata][volume]-text-input-15\\" type=\\"text\\" placeholder=\\"(Container) volume holding the item \\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][volume]-text-input-15\\" />
                                          <Instructions instructions=\\"e.g. “2” when citing a chapter from book volume 2\\">
                                            <span className=\\"instructions\\">
                                              e.g. “2” when citing a chapter from book volume 2
                                            </span>
                                          </Instructions>
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder=\\"Title of the original version\\" instructions={[undefined]} label=\\"original title\\" name=\\"attributes[metadata][originalTitle]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Title of the original version\\" instructions={[undefined]} label=\\"original title\\" name=\\"attributes[metadata][originalTitle]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder=\\"Title of the original version\\" instructions={[undefined]} label=\\"original title\\" name=\\"attributes[metadata][originalTitle]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][originalTitle]\\" errors={[undefined]} label=\\"original title\\" idForError=\\"attributes[metadata][originalTitle]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][originalTitle]-text-input-15\\" className=\\"\\">
                                            original title
                                          </label>
                                          <input id=\\"attributes[metadata][originalTitle]-text-input-15\\" type=\\"text\\" placeholder=\\"Title of the original version\\" onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][originalTitle]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                              </div>
                            </div>
                          </FieldGroup>
                          <FieldGroup label=\\"Other\\" disabled={false} horizontal={false} wide={false} instructions={{...}}>
                            <div className=\\"form-section\\">
                              <header className=\\"form-section-label\\">
                                <span>
                                  Other
                                </span>
                              </header>
                              <Instructions instructions={{...}} />
                              <div className=\\"form-input-group\\">
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"abstract\\" name=\\"attributes[metadata][abstract]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"abstract\\" name=\\"attributes[metadata][abstract]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"abstract\\" name=\\"attributes[metadata][abstract]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][abstract]\\" errors={[undefined]} label=\\"abstract\\" idForError=\\"attributes[metadata][abstract]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][abstract]-text-input-15\\" className=\\"\\">
                                            abstract
                                          </label>
                                          <input id=\\"attributes[metadata][abstract]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][abstract]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive\\" name=\\"attributes[metadata][archive]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive\\" name=\\"attributes[metadata][archive]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive\\" name=\\"attributes[metadata][archive]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][archive]\\" errors={[undefined]} label=\\"archive\\" idForError=\\"attributes[metadata][archive]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][archive]-text-input-15\\" className=\\"\\">
                                            archive
                                          </label>
                                          <input id=\\"attributes[metadata][archive]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][archive]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive location\\" name=\\"attributes[metadata][archiveLocation]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive location\\" name=\\"attributes[metadata][archiveLocation]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive location\\" name=\\"attributes[metadata][archiveLocation]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][archiveLocation]\\" errors={[undefined]} label=\\"archive location\\" idForError=\\"attributes[metadata][archiveLocation]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][archiveLocation]-text-input-15\\" className=\\"\\">
                                            archive location
                                          </label>
                                          <input id=\\"attributes[metadata][archiveLocation]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][archiveLocation]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive place\\" name=\\"attributes[metadata][archivePlace]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive place\\" name=\\"attributes[metadata][archivePlace]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"archive place\\" name=\\"attributes[metadata][archivePlace]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][archivePlace]\\" errors={[undefined]} label=\\"archive place\\" idForError=\\"attributes[metadata][archivePlace]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][archivePlace]-text-input-15\\" className=\\"\\">
                                            archive place
                                          </label>
                                          <input id=\\"attributes[metadata][archivePlace]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][archivePlace]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"authority\\" name=\\"attributes[metadata][authority]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"authority\\" name=\\"attributes[metadata][authority]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"authority\\" name=\\"attributes[metadata][authority]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][authority]\\" errors={[undefined]} label=\\"authority\\" idForError=\\"attributes[metadata][authority]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][authority]-text-input-15\\" className=\\"\\">
                                            authority
                                          </label>
                                          <input id=\\"attributes[metadata][authority]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][authority]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"call number\\" name=\\"attributes[metadata][callNumber]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"call number\\" name=\\"attributes[metadata][callNumber]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"call number\\" name=\\"attributes[metadata][callNumber]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][callNumber]\\" errors={[undefined]} label=\\"call number\\" idForError=\\"attributes[metadata][callNumber]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][callNumber]-text-input-15\\" className=\\"\\">
                                            call number
                                          </label>
                                          <input id=\\"attributes[metadata][callNumber]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][callNumber]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"chapter number\\" name=\\"attributes[metadata][chapterNumber]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"chapter number\\" name=\\"attributes[metadata][chapterNumber]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"chapter number\\" name=\\"attributes[metadata][chapterNumber]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][chapterNumber]\\" errors={[undefined]} label=\\"chapter number\\" idForError=\\"attributes[metadata][chapterNumber]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][chapterNumber]-text-input-15\\" className=\\"\\">
                                            chapter number
                                          </label>
                                          <input id=\\"attributes[metadata][chapterNumber]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][chapterNumber]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection number\\" name=\\"attributes[metadata][collectionNumber]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection number\\" name=\\"attributes[metadata][collectionNumber]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection number\\" name=\\"attributes[metadata][collectionNumber]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][collectionNumber]\\" errors={[undefined]} label=\\"collection number\\" idForError=\\"attributes[metadata][collectionNumber]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][collectionNumber]-text-input-15\\" className=\\"\\">
                                            collection number
                                          </label>
                                          <input id=\\"attributes[metadata][collectionNumber]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][collectionNumber]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection title\\" name=\\"attributes[metadata][collectionTitle]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection title\\" name=\\"attributes[metadata][collectionTitle]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"collection title\\" name=\\"attributes[metadata][collectionTitle]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][collectionTitle]\\" errors={[undefined]} label=\\"collection title\\" idForError=\\"attributes[metadata][collectionTitle]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][collectionTitle]-text-input-15\\" className=\\"\\">
                                            collection title
                                          </label>
                                          <input id=\\"attributes[metadata][collectionTitle]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][collectionTitle]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"dimensions\\" name=\\"attributes[metadata][dimensions]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"dimensions\\" name=\\"attributes[metadata][dimensions]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"dimensions\\" name=\\"attributes[metadata][dimensions]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][dimensions]\\" errors={[undefined]} label=\\"dimensions\\" idForError=\\"attributes[metadata][dimensions]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][dimensions]-text-input-15\\" className=\\"\\">
                                            dimensions
                                          </label>
                                          <input id=\\"attributes[metadata][dimensions]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][dimensions]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event\\" name=\\"attributes[metadata][event]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event\\" name=\\"attributes[metadata][event]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event\\" name=\\"attributes[metadata][event]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][event]\\" errors={[undefined]} label=\\"event\\" idForError=\\"attributes[metadata][event]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][event]-text-input-15\\" className=\\"\\">
                                            event
                                          </label>
                                          <input id=\\"attributes[metadata][event]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][event]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event place\\" name=\\"attributes[metadata][eventPlace]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event place\\" name=\\"attributes[metadata][eventPlace]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"event place\\" name=\\"attributes[metadata][eventPlace]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][eventPlace]\\" errors={[undefined]} label=\\"event place\\" idForError=\\"attributes[metadata][eventPlace]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][eventPlace]-text-input-15\\" className=\\"\\">
                                            event place
                                          </label>
                                          <input id=\\"attributes[metadata][eventPlace]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][eventPlace]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"jurisdiction\\" name=\\"attributes[metadata][jurisdiction]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"jurisdiction\\" name=\\"attributes[metadata][jurisdiction]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"jurisdiction\\" name=\\"attributes[metadata][jurisdiction]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][jurisdiction]\\" errors={[undefined]} label=\\"jurisdiction\\" idForError=\\"attributes[metadata][jurisdiction]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][jurisdiction]-text-input-15\\" className=\\"\\">
                                            jurisdiction
                                          </label>
                                          <input id=\\"attributes[metadata][jurisdiction]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][jurisdiction]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"medium\\" name=\\"attributes[metadata][medium]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"medium\\" name=\\"attributes[metadata][medium]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"medium\\" name=\\"attributes[metadata][medium]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][medium]\\" errors={[undefined]} label=\\"medium\\" idForError=\\"attributes[metadata][medium]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][medium]-text-input-15\\" className=\\"\\">
                                            medium
                                          </label>
                                          <input id=\\"attributes[metadata][medium]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][medium]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number\\" name=\\"attributes[metadata][number]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number\\" name=\\"attributes[metadata][number]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number\\" name=\\"attributes[metadata][number]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][number]\\" errors={[undefined]} label=\\"number\\" idForError=\\"attributes[metadata][number]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][number]-text-input-15\\" className=\\"\\">
                                            number
                                          </label>
                                          <input id=\\"attributes[metadata][number]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][number]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of pages\\" name=\\"attributes[metadata][numberOfPages]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of pages\\" name=\\"attributes[metadata][numberOfPages]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of pages\\" name=\\"attributes[metadata][numberOfPages]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][numberOfPages]\\" errors={[undefined]} label=\\"number of pages\\" idForError=\\"attributes[metadata][numberOfPages]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][numberOfPages]-text-input-15\\" className=\\"\\">
                                            number of pages
                                          </label>
                                          <input id=\\"attributes[metadata][numberOfPages]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][numberOfPages]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of volumes\\" name=\\"attributes[metadata][numberOfVolumes]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of volumes\\" name=\\"attributes[metadata][numberOfVolumes]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"number of volumes\\" name=\\"attributes[metadata][numberOfVolumes]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][numberOfVolumes]\\" errors={[undefined]} label=\\"number of volumes\\" idForError=\\"attributes[metadata][numberOfVolumes]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][numberOfVolumes]-text-input-15\\" className=\\"\\">
                                            number of volumes
                                          </label>
                                          <input id=\\"attributes[metadata][numberOfVolumes]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][numberOfVolumes]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmcid\\" name=\\"attributes[metadata][pmcid]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmcid\\" name=\\"attributes[metadata][pmcid]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmcid\\" name=\\"attributes[metadata][pmcid]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][pmcid]\\" errors={[undefined]} label=\\"pmcid\\" idForError=\\"attributes[metadata][pmcid]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][pmcid]-text-input-15\\" className=\\"\\">
                                            pmcid
                                          </label>
                                          <input id=\\"attributes[metadata][pmcid]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][pmcid]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmid\\" name=\\"attributes[metadata][pmid]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmid\\" name=\\"attributes[metadata][pmid]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"pmid\\" name=\\"attributes[metadata][pmid]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][pmid]\\" errors={[undefined]} label=\\"pmid\\" idForError=\\"attributes[metadata][pmid]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][pmid]-text-input-15\\" className=\\"\\">
                                            pmid
                                          </label>
                                          <input id=\\"attributes[metadata][pmid]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][pmid]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"reviewed title\\" name=\\"attributes[metadata][reviewedTitle]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"reviewed title\\" name=\\"attributes[metadata][reviewedTitle]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"reviewed title\\" name=\\"attributes[metadata][reviewedTitle]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][reviewedTitle]\\" errors={[undefined]} label=\\"reviewed title\\" idForError=\\"attributes[metadata][reviewedTitle]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][reviewedTitle]-text-input-15\\" className=\\"\\">
                                            reviewed title
                                          </label>
                                          <input id=\\"attributes[metadata][reviewedTitle]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][reviewedTitle]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"section\\" name=\\"attributes[metadata][section]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"section\\" name=\\"attributes[metadata][section]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"section\\" name=\\"attributes[metadata][section]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][section]\\" errors={[undefined]} label=\\"section\\" idForError=\\"attributes[metadata][section]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][section]-text-input-15\\" className=\\"\\">
                                            section
                                          </label>
                                          <input id=\\"attributes[metadata][section]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][section]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                                <HigherOrder.FetchData('Form.TextInput) focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"year suffix\\" name=\\"attributes[metadata][yearSuffix]\\" disabled={false}>
                                  <Form.Setter('Form.TextInput) actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"year suffix\\" name=\\"attributes[metadata][yearSuffix]\\" disabled={false}>
                                    <Form.TextInput getModelValue={[Function: getModelValue]} sessionKey=\\"1234\\" submitKey={{...}} focusOnMount={false} placeholder={{...}} instructions={{...}} label=\\"year suffix\\" name=\\"attributes[metadata][yearSuffix]\\" disabled={false} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]} password={false} join={[Function: join]} id=\\"text-input-15\\" idForError=\\"text-input-error-16\\">
                                      <Errorable className=\\"form-input\\" name=\\"attributes[metadata][yearSuffix]\\" errors={[undefined]} label=\\"year suffix\\" idForError=\\"attributes[metadata][yearSuffix]-text-input-15\\" containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label htmlFor=\\"attributes[metadata][yearSuffix]-text-input-15\\" className=\\"\\">
                                            year suffix
                                          </label>
                                          <input id=\\"attributes[metadata][yearSuffix]-text-input-15\\" type=\\"text\\" placeholder={{...}} onChange={[Function]} value=\\"\\" aria-describedby=\\"attributes[metadata][yearSuffix]-text-input-15\\" />
                                          <Instructions instructions={{...}} />
                                        </div>
                                      </Errorable>
                                    </Form.TextInput>
                                  </Form.Setter('Form.TextInput)>
                                </HigherOrder.FetchData('Form.TextInput)>
                              </div>
                            </div>
                          </FieldGroup>
                          <Form.Save text=\\"Save Metadata\\">
                            <div className=\\"form-input submit wide\\">
                              <input className=\\"button-secondary outlined\\" type=\\"submit\\" value=\\"Save Metadata\\" />
                            </div>
                          </Form.Save>
                        </form>
                      </div>
                    </Form.Form>
                  </HigherOrder.FetchData('Form.Form)>
                </Connect(HigherOrder.FetchData('Form.Form))>
              </Route>
            </withRouter(Connect(HigherOrder.FetchData('Form.Form)))>
          </section>
        </Metadata.Form>
      </Text.Metadata>
    </Provider>
  </Router>
</MemoryRouter>"
`;
