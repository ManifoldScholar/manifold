// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend Backend Container renders correctly 1`] = `
"<MemoryRouter>
  <Router history={{...}}>
    <Provider store={{...}}>
      <BackendContainer history={{...}} notifications={{...}} authentication={{...}} route={{...}} visibility={{...}} settings={{...}}>
        <SideEffect(BodyClass) className=\\"backend bg-neutral90\\">
          <BodyClass className=\\"backend bg-neutral90\\">
            <div>
              <withRouter(Connect(RedirectToFirstMatch)) from=\\"/backend\\" candidates={{...}}>
                <Route>
                  <Connect(RedirectToFirstMatch) from=\\"/backend\\" candidates={{...}} match={{...}} location={{...}} history={{...}} staticContext={[undefined]}>
                    <RedirectToFirstMatch from=\\"/backend\\" candidates={{...}} match={{...}} location={{...}} history={{...}} staticContext={[undefined]} authentication={{...}} dispatch={[Function]} />
                  </Connect(RedirectToFirstMatch)>
                </Route>
              </withRouter(Connect(RedirectToFirstMatch))>
              <SkipLink skipId=\\"skip-to-main\\" skipLinkText=\\"Skip to main content\\" skipMessage=\\"Skipped to Main Content\\">
                <a className=\\"screen-reader-text\\" href=\\"#skip-to-main\\" onClick={[Function]}>
                  Skip to main content
                </a>
              </SkipLink>
              <withRouter(ScrollToTop)>
                <Route>
                  <ScrollToTop match={{...}} location={{...}} history={{...}} staticContext={[undefined]} />
                </Route>
              </withRouter(ScrollToTop)>
              <ScrollAware threshold={200} topClass=\\"top\\" notTopClass=\\"not-top\\" startPinned={true} pinnedClass=\\"pinned\\" notPinnedClass=\\"not-pinned\\" pinThreshold={50}>
                <div className=\\"scroll-aware top pinned\\">
                  <Layout.Header visibility={{...}} match={[undefined]} location={[undefined]} authentication={{...}} commonActions={{...}} scrollAware={{...}}>
                    <BlurOnLocationChange location={[undefined]}>
                      <div>
                        <header className=\\"header-app dark\\">
                          <div className=\\"header-container\\">
                            <Link to=\\"/\\" className=\\"header-logo\\" replace={false}>
                              <a className=\\"header-logo\\" onClick={[Function]} href=\\"/\\">
                                <span className=\\"screen-reader-text\\">
                                  Return to home
                                </span>
                                <PressLogo aria-hidden=\\"true\\">
                                  <figure className=\\"\\">
                                    <i className=\\"manicon\\" aria-hidden=\\"true\\">
                                      <Icon.ManifoldLogo size={26} fill=\\"#52e3ac\\">
                                        <svg className=\\"manicon-svg\\" xmlns=\\"http://www.w3.org/2000/svg\\" width={26} height={26} fill=\\"#52e3ac\\" stroke={[undefined]} viewBox=\\"0 0 32 32\\" aria-hidden=\\"true\\">
                                          <polygon points=\\"29.995 10.305 27.851 10.983 24.581 9.72 29.995 8.007 29.995 6.182 21.983 8.718 18.712 7.454 29.995 3.884 29.995 2.059 16.114 6.45 2 1 2.036 12.73 15.131 8.587 15.131 10.886 2.036 15.029 2.036 16.854 15.131 12.71 15.131 15.009 2.036 19.152 2.036 20.977 15.131 16.834 15.131 19.132 2.036 23.275 2.036 25.1 15.131 20.958 15.131 23.256 2.036 27.399 2.036 29.224 15.989 24.809 30 30.22\\" />
                                        </svg>
                                      </Icon.ManifoldLogo>
                                    </i>
                                    <span className=\\"screen-reader-text\\">
                                      Manifold Logo
                                    </span>
                                  </figure>
                                </PressLogo>
                              </a>
                            </Link>
                            <withRouter(Navigation.Primary) links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\">
                              <Route>
                                <Navigation.Primary links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} exact={false}>
                                  <withRouter(Navigation.Static) backendButton={{...}} links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} exact={false} style={[undefined]}>
                                    <Route>
                                      <Navigation.Static backendButton={{...}} links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} exact={false} style={[undefined]}>
                                        <nav className=\\"page-nav show-75\\">
                                          <ul style={[undefined]} className=\\"links\\">
                                            <li>
                                              <NavLink to=\\"/backend/dashboard\\" exact={false} target={{...}} activeClassName=\\"active\\" aria-current=\\"page\\">
                                                <Route path=\\"\\\\\\\\/backend\\\\\\\\/dashboard\\" exact={false} strict={[undefined]} location={[undefined]}>
                                                  <Link to=\\"/backend/dashboard\\" className={[undefined]} style={[undefined]} aria-current={{...}} target={{...}} replace={false}>
                                                    <a className={[undefined]} style={[undefined]} aria-current={{...}} target={{...}} onClick={[Function]} href=\\"/backend/dashboard\\">
                                                      Dashboard
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                            </li>
                                            <li>
                                              <NavLink to=\\"/backend/projects\\" exact={false} target={{...}} activeClassName=\\"active\\" aria-current=\\"page\\">
                                                <Route path=\\"\\\\\\\\/backend\\\\\\\\/projects\\" exact={false} strict={[undefined]} location={[undefined]}>
                                                  <Link to=\\"/backend/projects\\" className={[undefined]} style={[undefined]} aria-current={{...}} target={{...}} replace={false}>
                                                    <a className={[undefined]} style={[undefined]} aria-current={{...}} target={{...}} onClick={[Function]} href=\\"/backend/projects\\">
                                                      Projects
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                            </li>
                                            <Connect(AuthorizeComponent) entity={{...}} ability=\\"update\\">
                                              <AuthorizeComponent entity={{...}} ability=\\"update\\" authentication={{...}} dispatch={[Function]} successBehavior=\\"show\\" failureRedirect={{...}} failureNotification={{...}} failureFatalError={{...}} />
                                            </Connect(AuthorizeComponent)>
                                            <Connect(AuthorizeComponent) entity=\\"settings\\" ability=\\"update\\">
                                              <AuthorizeComponent entity=\\"settings\\" ability=\\"update\\" authentication={{...}} dispatch={[Function]} successBehavior=\\"show\\" failureRedirect={{...}} failureNotification={{...}} failureFatalError={{...}} />
                                            </Connect(AuthorizeComponent)>
                                          </ul>
                                        </nav>
                                        <nav className=\\"user-links show-75\\">
                                          <ul style={[undefined]}>
                                            <li>
                                              <Link className=\\"button-mode\\" to=\\"/\\" replace={false}>
                                                <a className=\\"button-mode\\" onClick={[Function]} href=\\"/\\">
                                                  Exit Admin Mode
                                                </a>
                                              </Link>
                                            </li>
                                            <li>
                                              <UserMenuButton authentication={{...}} active={[undefined]} showLoginOverlay={[Function]} toggleUserMenu={[Function]}>
                                                <button onClick={[Function]} className=\\"button-avatar\\">
                                                  <span className=\\"screen-reader-text\\">
                                                    Login or open user settings
                                                  </span>
                                                  <Avatar url={[undefined]}>
                                                    <figure style={[undefined]} className=\\"avatar\\">
                                                      <span className=\\"screen-reader-text\\">
                                                        Avatar
                                                      </span>
                                                      <i className=\\"manicon manicon-person\\" aria-hidden=\\"true\\" />
                                                    </figure>
                                                  </Avatar>
                                                </button>
                                              </UserMenuButton>
                                              <UIPanel id=\\"user\\" visibility={{...}} bodyComponent={[Function: C]} showLoginOverlay={[Function]} startLogout={[Function]} hideUserMenu={[Function]} hidePanel={[Function]}>
                                                <CSSTransitionGroup transitionName=\\"panel\\" transitionEnter={false} transitionLeaveTimeout={200} transitionAppear={false} transitionLeave={true}>
                                                  <TransitionGroup transitionName=\\"panel\\" transitionEnter={false} transitionLeaveTimeout={200} transitionAppear={false} transitionLeave={true} childFactory={[Function]} component=\\"span\\">
                                                    <span />
                                                  </TransitionGroup>
                                                </CSSTransitionGroup>
                                              </UIPanel>
                                            </li>
                                          </ul>
                                        </nav>
                                      </Navigation.Static>
                                    </Route>
                                  </withRouter(Navigation.Static)>
                                  <withRouter(Navigation.Mobile) backendButton={{...}} links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} exact={false} style={[undefined]}>
                                    <Route>
                                      <Navigation.Mobile backendButton={{...}} links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} exact={false} style={[undefined]}>
                                        <nav className=\\"nested-nav hide-75\\">
                                          <MobileBreadcrumb links={{...}} location={{...}}>
                                            <div className=\\"selected\\" />
                                          </MobileBreadcrumb>
                                          <i role=\\"button\\" className=\\"manicon manicon-bars-parallel-horizontal\\" onClick={[Function]} />
                                        </nav>
                                      </Navigation.Mobile>
                                    </Route>
                                  </withRouter(Navigation.Mobile)>
                                </Navigation.Primary>
                              </Route>
                            </withRouter(Navigation.Primary)>
                          </div>
                          <div className=\\"header-border\\" />
                          <HeaderNotification scope=\\"global\\">
                            <Connect(NotificationsComponent) scope=\\"global\\">
                              <NotificationsComponent scope=\\"global\\" notifications={{...}} dispatch={[Function]} animate={true} style=\\"header\\">
                                <section className=\\"notifications-container\\" role=\\"alert\\">
                                  <div className=\\"notifications-list-header notifications-list\\">
                                    <CSSTransitionGroup transitionName=\\"notification\\" transitionEnterTimeout={500} transitionLeaveTimeout={500} transitionAppear={false} transitionEnter={true} transitionLeave={true}>
                                      <TransitionGroup transitionName=\\"notification\\" transitionEnterTimeout={500} transitionLeaveTimeout={500} transitionAppear={false} transitionEnter={true} transitionLeave={true} childFactory={[Function]} component=\\"span\\">
                                        <span />
                                      </TransitionGroup>
                                    </CSSTransitionGroup>
                                  </div>
                                </section>
                              </NotificationsComponent>
                            </Connect(NotificationsComponent)>
                          </HeaderNotification>
                        </header>
                      </div>
                    </BlurOnLocationChange>
                  </Layout.Header>
                </div>
              </ScrollAware>
              <main id=\\"skip-to-main\\">
                <withRouter(ChildSwitch) parentRoute={{...}}>
                  <Route>
                    <ChildSwitch parentRoute={{...}} match={{...}} location={{...}} history={{...}} staticContext={[undefined]}>
                      <Connect(NotFound)>
                        <NotFound dispatch={[Function]} />
                      </Connect(NotFound)>
                    </ChildSwitch>
                  </Route>
                </withRouter(ChildSwitch)>
              </main>
              <withRouter(Layout.Footer) pages={[undefined]} authentication={{...}} commonActions={{...}} settings={{...}}>
                <Route>
                  <Layout.Footer pages={{...}} authentication={{...}} commonActions={{...}} settings={{...}} match={{...}} location={{...}} history={{...}} staticContext={[undefined]}>
                    <BlurOnLocationChange location={{...}}>
                      <div>
                        <footer className=\\"footer-browse\\">
                          <section className=\\"footer-primary\\">
                            <div className=\\"container flush\\">
                              <div className=\\"flex-row\\">
                                <div className=\\"right\\">
                                  <form className=\\"search-form\\" onSubmit={[Function]}>
                                    <div className=\\"search-button-inline\\">
                                      <label htmlFor=\\"footer-search\\" className=\\"screen-reader-text\\">
                                        Site Search
                                      </label>
                                      <input type=\\"text\\" id=\\"footer-search\\" placeholder=\\"Search\\" value=\\"\\" onChange={[Function]} />
                                      <button className=\\"manicon manicon-magnify\\">
                                        <span className=\\"screen-reader-text\\">
                                          Search
                                        </span>
                                      </button>
                                    </div>
                                  </form>
                                </div>
                                <div className=\\"rel left\\">
                                  <nav className=\\"text-nav\\">
                                    <ul>
                                      <li>
                                        <ul className=\\"footer-nav\\">
                                          <li>
                                            <span className=\\"fake-link\\" role=\\"button\\" tabIndex=\\"0\\" onClick={[Function]}>
                                              Log Out
                                            </span>
                                          </li>
                                          <li>
                                            <Link to=\\"/\\" replace={false}>
                                              <a onClick={[Function]} href=\\"/\\">
                                                Home
                                              </a>
                                            </Link>
                                          </li>
                                          <li>
                                            <Link to=\\"/projects/all\\" replace={false}>
                                              <a onClick={[Function]} href=\\"/projects/all\\">
                                                Projects
                                              </a>
                                            </Link>
                                          </li>
                                        </ul>
                                      </li>
                                      <li />
                                    </ul>
                                  </nav>
                                </div>
                              </div>
                            </div>
                          </section>
                          <section className=\\"footer-secondary\\">
                            <div className=\\"container flush\\">
                              <div className=\\"colophon\\">
                                <div>
                                  © 2015-2016 6 University of Minnesota Press.
                                  <br />
                                </div>
                              </div>
                            </div>
                          </section>
                          <a href=\\"http://manifoldapp.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\" className=\\"footer-tertiary\\">
                            <section aria-hidden=\\"true\\">
                              <div className=\\"container flush\\">
                                <span className=\\"logo\\">
                                  <i className=\\"manicon manicon-manifold-logo\\" />
                                  <span className=\\"text\\">
                                    <span className=\\"neutral-text\\">
                                      Powered by
                                    </span>
                                    <span className=\\"white-text\\">
                                       Manifold
                                    </span>
                                  </span>
                                </span>
                              </div>
                            </section>
                            <span className=\\"screen-reader-text\\">
                              Learn more about the Manifold App
                            </span>
                          </a>
                        </footer>
                      </div>
                    </BlurOnLocationChange>
                  </Layout.Footer>
                </Route>
              </withRouter(Layout.Footer)>
            </div>
          </BodyClass>
        </SideEffect(BodyClass)>
      </BackendContainer>
    </Provider>
  </Router>
</MemoryRouter>"
`;
