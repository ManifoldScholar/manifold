// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend Backend Container renders correctly 1`] = `
"<MemoryRouter>
  <Router history={{...}}>
    <Provider store={{...}}>
      <BackendContainer history={{...}} notifications={{...}} authentication={{...}} route={{...}} visibility={{...}}>
        <SideEffect(BodyClass) className=\\"backend bg-neutral90\\">
          <BodyClass className=\\"backend bg-neutral90\\">
            <div>
              <withRouter(ScrollToTop)>
                <Route render={[Function: render]}>
                  <ScrollToTop match={{...}} location={{...}} history={{...}} staticContext={[undefined]} />
                </Route>
              </withRouter(ScrollToTop)>
              <ScrollAware threshold={200} topClass=\\"top\\" notTopClass=\\"not-top\\" startPinned={true} pinnedClass=\\"pinned\\" notPinnedClass=\\"not-pinned\\" pinThreshold={50}>
                <div className=\\"scroll-aware top pinned\\">
                  <Layout.Header visibility={{...}} location={[undefined]} authentication={{...}} commonActions={{...}} settings={[undefined]} scrollAware={{...}}>
                    <header className=\\"header-app dark\\">
                      <div className=\\"header-container\\">
                        <Link to=\\"/\\" className=\\"logo\\" replace={false}>
                          <a className=\\"logo\\" onClick={[Function]} href=\\"/\\">
                            <PressLogo>
                              <figure className=\\"\\">
                                <div>
                                  <i className=\\"manicon manicon-manifold-logo\\" />
                                  <span className=\\"screen-reader-text\\">
                                    Manifold Logo: Click to return to the browse page
                                  </span>
                                </div>
                              </figure>
                            </PressLogo>
                          </a>
                        </Link>
                        <nav className=\\"text-nav\\">
                          <ul>
                            <li>
                              <NavLink isActive={[Function: isProjects]} activeClassName=\\"active\\" to=\\"/backend\\" ariaCurrent=\\"true\\">
                                <Route path=\\"/backend\\" exact={[undefined]} strict={[undefined]} location={[undefined]}>
                                  <Link to=\\"/backend\\" className={[undefined]} style={[undefined]} aria-current={false} replace={false}>
                                    <a className={[undefined]} style={[undefined]} aria-current={false} onClick={[Function]} href=\\"/backend\\">
                                      Projects
                                    </a>
                                  </Link>
                                </Route>
                              </NavLink>
                            </li>
                            <Connect(AuthorizeComponent) entity={{...}} ability=\\"update\\">
                              <AuthorizeComponent entity={{...}} ability=\\"update\\" authentication={{...}} dispatch={[Function]} successBehavior=\\"show\\" failureRedirect={{...}} failureNotification={{...}} failureFatalError={{...}} />
                            </Connect(AuthorizeComponent)>
                            <Connect(AuthorizeComponent) entity={{...}} ability=\\"update\\">
                              <AuthorizeComponent entity={{...}} ability=\\"update\\" authentication={{...}} dispatch={[Function]} successBehavior=\\"show\\" failureRedirect={{...}} failureNotification={{...}} failureFatalError={{...}} />
                            </Connect(AuthorizeComponent)>
                            <Connect(AuthorizeComponent) entity=\\"settings\\" ability=\\"update\\">
                              <AuthorizeComponent entity=\\"settings\\" ability=\\"update\\" authentication={{...}} dispatch={[Function]} successBehavior=\\"show\\" failureRedirect={{...}} failureNotification={{...}} failureFatalError={{...}} />
                            </Connect(AuthorizeComponent)>
                          </ul>
                        </nav>
                        <nav className=\\"menu-dropdowns\\">
                          <ul>
                            <li className=\\"show-60\\">
                              <Link className=\\"button-mode\\" to=\\"/\\" replace={false}>
                                <a className=\\"button-mode\\" onClick={[Function]} href=\\"/\\">
                                  Exit Admin Mode
                                </a>
                              </Link>
                            </li>
                            <li>
                              <UserMenuButton authentication={{...}} active={[undefined]} showLoginOverlay={[Function]} toggleUserMenu={[Function]}>
                                <button onClick={[Function: bound clickHandler]} className=\\"button-avatar\\">
                                  <span className=\\"screen-reader-text\\">
                                    Click to login or open user settings
                                  </span>
                                  <Avatar url={[undefined]}>
                                    <figure style={[undefined]} className=\\"avatar\\">
                                      <i className=\\"manicon manicon-person\\" />
                                    </figure>
                                  </Avatar>
                                </button>
                              </UserMenuButton>
                              <UIPanel id=\\"user\\" visibility={{...}} bodyComponent={[Function: UserMenuBody]} showLoginOverlay={[Function]} startLogout={[Function]} hideUserMenu={[Function]}>
                                <div className=\\"panel-hidden\\">
                                  <UserMenuBody id=\\"user\\" visibility={{...}} bodyComponent={[Function: UserMenuBody]} showLoginOverlay={[Function]} startLogout={[Function]} hideUserMenu={[Function]}>
                                    <nav className=\\"user-menu menu-hidden\\">
                                      <i className=\\"tail\\" />
                                      <ul>
                                        <li>
                                          <button onClick={[Function: bound handleProfileClick]}>
                                            <i className=\\"manicon manicon-person-pencil-simple\\" />
                                            Edit Profile
                                          </button>
                                        </li>
                                        <li>
                                          <button onClick={[Function: bound logout]}>
                                            <i className=\\"manicon manicon-circle-arrow-out-right\\" />
                                            Logout
                                          </button>
                                        </li>
                                      </ul>
                                    </nav>
                                  </UserMenuBody>
                                </div>
                              </UIPanel>
                            </li>
                          </ul>
                        </nav>
                      </div>
                      <div className=\\"header-border\\" />
                      <HeaderNotification scope=\\"global\\">
                        <Connect(NotificationsComponent) scope=\\"global\\">
                          <NotificationsComponent scope=\\"global\\" notifications={{...}} dispatch={[Function]} animate={true} style=\\"header\\">
                            <section className=\\"notifications-container\\">
                              <div className=\\"notifications-list-header notifications-list\\">
                                <CSSTransitionGroup transitionName=\\"notification\\" transitionEnterTimeout={500} transitionLeaveTimeout={500} transitionAppear={false} transitionEnter={true} transitionLeave={true}>
                                  <TransitionGroup transitionName=\\"notification\\" transitionEnterTimeout={500} transitionLeaveTimeout={500} transitionAppear={false} transitionEnter={true} transitionLeave={true} childFactory={[Function]} component=\\"span\\">
                                    <span />
                                  </TransitionGroup>
                                </CSSTransitionGroup>
                              </div>
                            </section>
                          </NotificationsComponent>
                        </Connect(NotificationsComponent)>
                      </HeaderNotification>
                    </header>
                  </Layout.Header>
                </div>
              </ScrollAware>
              <main>
                <Switch />
              </main>
              <Layout.Footer pages={{...}} authentication={{...}} commonActions={{...}} settings={[undefined]}>
                <footer className=\\"footer-browse\\">
                  <div className=\\"container\\">
                    <div className=\\"rel\\">
                      <Link to=\\"/\\" className=\\"logo\\" replace={false}>
                        <a className=\\"logo\\" onClick={[Function]} href=\\"/\\">
                          <i className=\\"manicon manicon-manifold-logo\\" />
                          Manifold
                        </a>
                      </Link>
                    </div>
                    <nav className=\\"text-nav\\">
                      <ul>
                        <li>
                          <ul>
                            <li>
                              <a onClick={[Function: bound handleLogoutClick]} href=\\"#\\">
                                Log Out
                              </a>
                            </li>
                            <li>
                              <Link to=\\"/\\" replace={false}>
                                <a onClick={[Function]} href=\\"/\\">
                                  Projects
                                </a>
                              </Link>
                            </li>
                            <li />
                          </ul>
                        </li>
                        <li>
                          <ul>
                            <li>
                              <a target=\\"_blank\\" rel=\\"noopener noreferrer\\" href=\\"http://twitter.com/manifoldscholar\\">
                                Twitter
                              </a>
                            </li>
                            <li>
                              <a href=\\"mailto:webbook@umn.edu\\">
                                Email
                              </a>
                            </li>
                          </ul>
                        </li>
                      </ul>
                    </nav>
                    <section className=\\"footer-secondary\\">
                      <p className=\\"colophon\\">
                        Manifold is released under the 
                        <a href=\\"https://raw.githubusercontent.com/ManifoldScholar/manifold/development/LICENSE.md\\">
                          GNU General Public License v3
                        </a>
                        . Download and contribute to 
                        <a href=\\"https://github.com/ManifoldScholar/manifold\\">
                          Manifold
                        </a>
                         on github.
                      </p>
                    </section>
                  </div>
                </footer>
              </Layout.Footer>
            </div>
          </BodyClass>
        </SideEffect(BodyClass)>
      </BackendContainer>
    </Provider>
  </Router>
</MemoryRouter>"
`;
