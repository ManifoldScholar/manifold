// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend ProjectDetail General Container renders correctly 1`] = `
"<MemoryRouter>
  <Router history={{...}}>
    <Provider store={{...}}>
      <ProjectDetail.General project={{...}}>
        <section>
          <withRouter(Connect(Form.Form)) model={{...}} name=\\"backend-project-update\\" update={[Function]} create={[Function]} className=\\"form-secondary\\">
            <Route render={[Function]}>
              <Connect(Form.Form) model={{...}} name=\\"backend-project-update\\" update={[Function]} create={[Function]} className=\\"form-secondary\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]}>
                <Form.Form model={{...}} name=\\"backend-project-update\\" update={[Function]} create={[Function]} className=\\"form-secondary\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]} session={{...}} response={[undefined]} errors={[undefined]} dispatch={[Function]} doNotWarn={false} debug={false} groupErrors={false}>
                  <div>
                    <Prompt when={false} message=\\"You may have unsaved changes. Do you want to leave without saving your changes?\\" />
                    <form onSubmit={[Function]} className=\\"form-secondary\\" data-id=\\"submit\\">
                      <FieldGroup horizontal={true} label=\\"Project States\\" instructions=\\"Draft projects are only visible to admins. Featured projects are highlighted on the home page.\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                        <div className=\\"form-section horizontal\\">
                          <span className=\\"form-section-label\\">
                            Project States
                          </span>
                          <span className=\\"instructions\\">
                            Draft projects are only visible to admins. Featured projects are highlighted on the home page.
                          </span>
                          <Form.Setter('Form.Switch) label=\\"Draft Mode\\" labelClass=\\"secondary\\" labelPos=\\"below\\" name=\\"attributes[draft]\\" actions={{...}} instructions=\\"Draft projects are only visible to admins. Featured projects are highlighted on the home page.\\" dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                            <Form.Switch label=\\"Draft Mode\\" labelClass=\\"secondary\\" labelPos=\\"below\\" name=\\"attributes[draft]\\" instructions=\\"Draft projects are only visible to admins. Featured projects are highlighted on the home page.\\" getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]}>
                              <div className=\\"form-input\\">
                                <div className=\\"toggle-indicator\\">
                                  <div onClick={[Function]} className=\\"boolean-primary\\" />
                                </div>
                                <label className=\\"below secondary\\">
                                  Draft Mode
                                </label>
                              </div>
                            </Form.Switch>
                          </Form.Setter('Form.Switch)>
                          <Form.Setter('Form.Switch) label=\\"Featured\\" labelClass=\\"secondary\\" labelPos=\\"below\\" name=\\"attributes[featured]\\" actions={{...}} instructions=\\"Draft projects are only visible to admins. Featured projects are highlighted on the home page.\\" dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                            <Form.Switch label=\\"Featured\\" labelClass=\\"secondary\\" labelPos=\\"below\\" name=\\"attributes[featured]\\" instructions=\\"Draft projects are only visible to admins. Featured projects are highlighted on the home page.\\" getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]}>
                              <div className=\\"form-input\\">
                                <div className=\\"toggle-indicator\\">
                                  <div onClick={[Function]} className=\\"boolean-primary\\" />
                                </div>
                                <label className=\\"below secondary\\">
                                  Featured
                                </label>
                              </div>
                            </Form.Switch>
                          </Form.Setter('Form.Switch)>
                        </div>
                      </FieldGroup>
                      <Form.Setter('Form.TextInput) validation={{...}} focusOnMount={true} label=\\"Title\\" name=\\"attributes[title]\\" placeholder=\\"Enter Project Title\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                        <Form.TextInput validation={{...}} focusOnMount={true} label=\\"Title\\" name=\\"attributes[title]\\" placeholder=\\"Enter Project Title\\" getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value=\\"Rowan Test\\" initialValue=\\"Rowan Test\\" password={false}>
                          <Errorable className=\\"form-input\\" name=\\"attributes[title]\\" errors={{...}} label=\\"Title\\" containerStyle={{...}}>
                            <div style={{...}} className=\\"form-input\\">
                              <label className=\\"\\">
                                Title
                              </label>
                              <input type=\\"text\\" placeholder=\\"Enter Project Title\\" onChange={[Function]} value=\\"Rowan Test\\" />
                            </div>
                          </Errorable>
                        </Form.TextInput>
                      </Form.Setter('Form.TextInput)>
                      <Form.Setter('Form.TextInput) label=\\"Subtitle\\" name=\\"attributes[subtitle]\\" placeholder=\\"Enter Project Subtitle\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                        <Form.TextInput label=\\"Subtitle\\" name=\\"attributes[subtitle]\\" placeholder=\\"Enter Project Subtitle\\" getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value=\\"World's Greatest Dog\\" initialValue=\\"World's Greatest Dog\\" focusOnMount={false} password={false}>
                          <Errorable className=\\"form-input\\" name=\\"attributes[subtitle]\\" errors={{...}} label=\\"Subtitle\\" containerStyle={{...}}>
                            <div style={{...}} className=\\"form-input\\">
                              <label className=\\"\\">
                                Subtitle
                              </label>
                              <input type=\\"text\\" placeholder=\\"Enter Project Subtitle\\" onChange={[Function]} value=\\"World's Greatest Dog\\" />
                            </div>
                          </Errorable>
                        </Form.TextInput>
                      </Form.Setter('Form.TextInput)>
                      <Form.Setter('Form.Date) label=\\"Publication Date\\" name=\\"attributes[publicationDate]\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                        <Form.Date label=\\"Publication Date\\" name=\\"attributes[publicationDate]\\" getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value={[undefined]} initialValue={[undefined]}>
                          <div className=\\"form-input\\">
                            <label>
                              Publication Date
                            </label>
                            <div className=\\"form-date\\">
                              <div className=\\"form-select input-month\\">
                                <i className=\\"manicon manicon-caret-down\\" />
                                <select onChange={[Function]} value=\\"NaN\\">
                                  <option />
                                  <option value={0}>
                                    January
                                  </option>
                                  <option value={1}>
                                    February
                                  </option>
                                  <option value={2}>
                                    March
                                  </option>
                                  <option value={3}>
                                    April
                                  </option>
                                  <option value={4}>
                                    May
                                  </option>
                                  <option value={5}>
                                    June
                                  </option>
                                  <option value={6}>
                                    July
                                  </option>
                                  <option value={7}>
                                    August
                                  </option>
                                  <option value={8}>
                                    September
                                  </option>
                                  <option value={9}>
                                    October
                                  </option>
                                  <option value={10}>
                                    November
                                  </option>
                                  <option value={11}>
                                    December
                                  </option>
                                </select>
                              </div>
                              <div className=\\"form-select input-day\\">
                                <i className=\\"manicon manicon-caret-down\\" />
                                <select onChange={[Function]} value=\\"NaN\\">
                                  <option />
                                  <option>
                                    1
                                  </option>
                                  <option>
                                    2
                                  </option>
                                  <option>
                                    3
                                  </option>
                                  <option>
                                    4
                                  </option>
                                  <option>
                                    5
                                  </option>
                                  <option>
                                    6
                                  </option>
                                  <option>
                                    7
                                  </option>
                                  <option>
                                    8
                                  </option>
                                  <option>
                                    9
                                  </option>
                                  <option>
                                    10
                                  </option>
                                  <option>
                                    11
                                  </option>
                                  <option>
                                    12
                                  </option>
                                  <option>
                                    13
                                  </option>
                                  <option>
                                    14
                                  </option>
                                  <option>
                                    15
                                  </option>
                                  <option>
                                    16
                                  </option>
                                  <option>
                                    17
                                  </option>
                                  <option>
                                    18
                                  </option>
                                  <option>
                                    19
                                  </option>
                                  <option>
                                    20
                                  </option>
                                  <option>
                                    21
                                  </option>
                                  <option>
                                    22
                                  </option>
                                  <option>
                                    23
                                  </option>
                                  <option>
                                    24
                                  </option>
                                  <option>
                                    25
                                  </option>
                                  <option>
                                    26
                                  </option>
                                  <option>
                                    27
                                  </option>
                                  <option>
                                    28
                                  </option>
                                  <option>
                                    29
                                  </option>
                                  <option>
                                    30
                                  </option>
                                  <option>
                                    31
                                  </option>
                                </select>
                              </div>
                              <div className=\\"form-input\\">
                                <ReactTextMask type=\\"text\\" mask={{...}} className=\\"input-year\\" onChange={[Function]} value=\\"NaN\\" />
                              </div>
                            </div>
                          </div>
                        </Form.Date>
                      </Form.Setter('Form.Date)>
                      <Form.Setter('Form.MaskedTextInput) label=\\"Hashtag\\" name=\\"attributes[hashtag]\\" mask=\\"hashtag\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                        <Form.MaskedTextInput label=\\"Hashtag\\" name=\\"attributes[hashtag]\\" mask=\\"hashtag\\" getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}} onChange={[Function]} set={[Function]} setOther={[Function]} value=\\"#cute_dog\\" initialValue=\\"#cute_dog\\">
                          <div className=\\"form-input\\">
                            <label className=\\"\\">
                              Hashtag
                            </label>
                            <ReactTextMask onChange={[Function]} value=\\"#cute_dog\\" type=\\"text\\" mask={[Function]} placeholder={[undefined]} />
                          </div>
                        </Form.MaskedTextInput>
                      </Form.Setter('Form.MaskedTextInput)>
                      <Form.Setter('Project.Form.AvatarBuilder) project={{...}} actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                        <Project.Form.AvatarBuilder setOther={[Function]} project={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                          <div className=\\"form-input avatar-builder\\">
                            <label className=\\"section-header\\">
                              Project Thumbnail
                            </label>
                            <div className=\\"grid\\">
                              <div className=\\"section current\\">
                                <label>
                                  Current
                                </label>
                              </div>
                              <div className=\\"section active\\">
                                <label>
                                  Default
                                </label>
                                <Project.Form.ColorPicker onChange={[Function]} value={{...}} setOther={[Function]} project={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                                  <div className=\\"color-picker\\">
                                    <div className=\\"colors\\">
                                      <div className=\\"form-input\\">
                                        <label htmlFor=\\"primary\\" className=\\"form-toggle radio primary\\">
                                          <input type=\\"radio\\" value=\\"primary\\" id=\\"primary\\" checked={false} onChange={[Function]} />
                                          <span className=\\"toggle-indicator\\" />
                                          <span className=\\"toggle-label\\" />
                                        </label>
                                        <label htmlFor=\\"secondary\\" className=\\"form-toggle radio secondary\\">
                                          <input type=\\"radio\\" value=\\"secondary\\" id=\\"secondary\\" checked={false} onChange={[Function]} />
                                          <span className=\\"toggle-indicator\\" />
                                          <span className=\\"toggle-label\\" />
                                        </label>
                                        <label htmlFor=\\"tertiary\\" className=\\"form-toggle radio tertiary\\">
                                          <input type=\\"radio\\" value=\\"tertiary\\" id=\\"tertiary\\" checked={false} onChange={[Function]} />
                                          <span className=\\"toggle-indicator\\" />
                                          <span className=\\"toggle-label\\" />
                                        </label>
                                        <label htmlFor=\\"quaternary\\" className=\\"form-toggle radio quaternary\\">
                                          <input type=\\"radio\\" value=\\"quaternary\\" id=\\"quaternary\\" checked={false} onChange={[Function]} />
                                          <span className=\\"toggle-indicator\\" />
                                          <span className=\\"toggle-label\\" />
                                        </label>
                                        <label htmlFor=\\"quinary\\" className=\\"form-toggle radio quinary\\">
                                          <input type=\\"radio\\" value=\\"quinary\\" id=\\"quinary\\" checked={false} onChange={[Function]} />
                                          <span className=\\"toggle-indicator\\" />
                                          <span className=\\"toggle-label\\" />
                                        </label>
                                        <label htmlFor=\\"sentary\\" className=\\"form-toggle radio sentary\\">
                                          <input type=\\"radio\\" value=\\"sentary\\" id=\\"sentary\\" checked={false} onChange={[Function]} />
                                          <span className=\\"toggle-indicator\\" />
                                          <span className=\\"toggle-label\\" />
                                        </label>
                                      </div>
                                    </div>
                                    <div className=\\"default-description\\">
                                      Select A Different
                                      <br />
                                      Background Color
                                    </div>
                                  </div>
                                </Project.Form.ColorPicker>
                              </div>
                              <div className=\\"section\\">
                                <label>
                                  Custom
                                </label>
                                <Form.Setter('Form.Upload) set={[Function]} initialValue={{...}} value={{...}} layout=\\"square\\" accepts=\\"images\\" actions={{...}}>
                                  <Form.Upload setOther={[Function]} set={[Function]} initialValue={{...}} value={{...}} layout=\\"square\\" accepts=\\"images\\">
                                    <div className=\\"form-input\\">
                                      <Errorable className=\\"form-input\\" name={[undefined]} errors={[undefined]} label={[undefined]} containerStyle={{...}}>
                                        <div style={{...}} className=\\"form-input\\">
                                          <label className=\\"\\" />
                                          <Dropzone style={[undefined]} className=\\"form-dropzone style-square\\" multiple={false} onDrop={[Function]} accept=\\"image/*\\">
                                            <div className=\\"contents-empty\\">
                                              <i className=\\"manicon manicon-cloud-up\\" />
                                              <div className=\\"message\\">
                                                <p className=\\"primary\\">
                                                  Upload a file or
                                                  <br />
                                                  drag and drop here
                                                  <br />
                                                </p>
                                                <p className=\\"secondary\\">
                                                  jpeg, tiff, gif, png
                                                </p>
                                              </div>
                                            </div>
                                          </Dropzone>
                                        </div>
                                      </Errorable>
                                    </div>
                                  </Form.Upload>
                                </Form.Setter('Form.Upload)>
                              </div>
                            </div>
                          </div>
                        </Project.Form.AvatarBuilder>
                      </Form.Setter('Project.Form.AvatarBuilder)>
                      <Form.Save text=\\"Save Project\\" actions={{...}} dirtyModel={{...}} sourceModel={{...}} getModelValue={[Function]} sessionKey=\\"backend-project-update\\" errors={{...}}>
                        <div className=\\"form-input submit\\">
                          <input className=\\"button-secondary outlined\\" type=\\"submit\\" value=\\"Save Project\\" />
                        </div>
                      </Form.Save>
                    </form>
                  </div>
                </Form.Form>
              </Connect(Form.Form)>
            </Route>
          </withRouter(Connect(Form.Form))>
        </section>
      </ProjectDetail.General>
    </Provider>
  </Router>
</MemoryRouter>"
`;
