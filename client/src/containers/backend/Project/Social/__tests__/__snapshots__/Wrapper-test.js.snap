// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend Project Social Wrapper Container renders correctly 1`] = `
"<MemoryRouter>
  <Router history={{...}}>
    <Provider store={{...}}>
      <Project.Social.Wrapper route={{...}} project={{...}}>
        <Connect(AuthorizeComponent) entity={{...}} ability=\\"manageSocials\\" failureNotification={true} failureRedirect=\\"/backend/project/1\\">
          <AuthorizeComponent entity={{...}} ability=\\"manageSocials\\" failureNotification={true} failureRedirect=\\"/backend/project/1\\" authentication={{...}} dispatch={[Function]} successBehavior=\\"show\\" failureFatalError={{...}}>
            <section>
              <withRouter(Router.Switch('DrawerSwitch)) closeUrl=\\"/backend/project/1/social\\">
                <Route>
                  <Router.Switch('DrawerSwitch) closeUrl=\\"/backend/project/1/social\\" match={{...}} location={{...}} history={{...}} staticContext={[undefined]}>
                    <DrawerSwitch closeUrl=\\"/backend/project/1/social\\" match={[undefined]} location={{...}} history={{...}} staticContext={[undefined]} wrapperProps={{...}}>
                      <Connect(withRouter(Drawer.Wrapper)) open={false} closeUrl=\\"/backend/project/1/social\\">
                        <withRouter(Drawer.Wrapper) open={false} closeUrl=\\"/backend/project/1/social\\" connected={true} dispatch={[Function]}>
                          <Route>
                            <Drawer.Wrapper open={false} closeUrl=\\"/backend/project/1/social\\" connected={true} dispatch={[Function]} match={{...}} location={{...}} history={{...}} staticContext={[undefined]} lockScroll=\\"hover\\" style=\\"backend\\" entrySide=\\"right\\" includeDrawerFrontMatter={true} returnFocusOnDeactivate={true}>
                              <CSSTransitionGroup transitionName=\\"drawer\\" transitionEnterTimeout={500} transitionLeaveTimeout={300} transitionAppear={false} transitionEnter={true} transitionLeave={true}>
                                <TransitionGroup transitionName=\\"drawer\\" transitionEnterTimeout={500} transitionLeaveTimeout={300} transitionAppear={false} transitionEnter={true} transitionLeave={true} childFactory={[Function]} component=\\"span\\">
                                  <span />
                                </TransitionGroup>
                              </CSSTransitionGroup>
                            </Drawer.Wrapper>
                          </Route>
                        </withRouter(Drawer.Wrapper)>
                      </Connect(withRouter(Drawer.Wrapper))>
                    </DrawerSwitch>
                  </Router.Switch('DrawerSwitch)>
                </Route>
              </withRouter(Router.Switch('DrawerSwitch))>
              <Connect(Project.Social.TwitterQueries) project={{...}} match={[undefined]}>
                <Project.Social.TwitterQueries project={{...}} match={[undefined]} twitterQueries={{...}} twitterQueriesMeta={[undefined]} dispatch={[Function]} />
              </Connect(Project.Social.TwitterQueries)>
            </section>
          </AuthorizeComponent>
        </Connect(AuthorizeComponent)>
      </Project.Social.Wrapper>
    </Provider>
  </Router>
</MemoryRouter>"
`;
