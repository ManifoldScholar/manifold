// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`backend/components/resource/form/kind/Video matches the snapshot 1`] = `
<div
  className="form-section form-section--primary"
>
  <HigherOrder.FetchData('Form.Switch)
    customValues={
      Object {
        "false": "",
        "true": "external_video",
      }
    }
    getModelValue={
      [MockFunction] {
        "calls": Array [
          Array [
            "attributes[subKind]",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": "kind",
          },
        ],
      }
    }
    label="Is this an externally linked video?"
    name="attributes[subKind]"
    sourceModel={
      Object {
        "attributes": Object {
          "abilities": Object {
            "create": true,
            "createPermissions": true,
            "createResourceCollections": true,
            "createResources": true,
            "createTexts": true,
            "createTwitterQueries": true,
            "delete": true,
            "manageEvents": true,
            "managePermissions": true,
            "manageResourceCollections": true,
            "manageResources": true,
            "manageSocials": true,
            "manageTexts": true,
            "manageTwitterQueries": true,
            "read": true,
            "readDeleted": true,
            "readDrafts": true,
            "readLog": true,
            "readSecrets": true,
            "update": true,
            "updateMakers": true,
          },
          "attachmentStyles": Object {
            "medium": null,
            "mediumSquare": "original-image.mock",
            "original": "original-image.mock",
          },
          "captionFormatted": "World's Greatest Dog",
          "createdAt": "2017-04-24T23:25:50.161Z",
          "descriptionFormatted": "Black and white freckles",
          "downloadable": true,
          "kind": "image",
          "metadata": Object {
            "abstract": "some-value",
            "archive": "some-value",
            "archiveLocation": "some-value",
            "archivePlace": "some-value",
            "authority": "some-value",
            "callNumber": "some-value",
            "chapterNumber": "some-value",
            "collectionNumber": "some-value",
            "collectionTitle": "some-value",
            "containerTitle": "some-value",
            "dimensions": "some-value",
            "edition": "some-value",
            "event": "some-value",
            "eventPlace": "some-value",
            "isbn": "some-value",
            "issn": "some-value",
            "issue": "some-value",
            "jurisdiction": "some-value",
            "medium": "some-value",
            "number": "some-value",
            "numberOfPages": "some-value",
            "numberOfVolumes": "some-value",
            "originalPublisher": "some-value",
            "originalPublisherPlace": "some-value",
            "originalTitle": "some-value",
            "pmcid": "some-value",
            "pmid": "some-value",
            "publisher": "some-value",
            "publisherPlace": "some-value",
            "reviewedTitle": "some-value",
            "section": "some-value",
            "version": "some-value",
            "volume": "some-value",
            "yearSuffix": "some-value",
          },
          "metadataFormatted": Object {
            "abstract": "some-value",
            "archive": "some-value",
            "archiveLocation": "some-value",
            "archivePlace": "some-value",
            "authority": "some-value",
            "callNumber": "some-value",
            "chapterNumber": "some-value",
            "collectionNumber": "some-value",
            "collectionTitle": "some-value",
            "containerTitle": "some-value",
            "dimensions": "some-value",
            "edition": "some-value",
            "event": "some-value",
            "eventPlace": "some-value",
            "isbn": "some-value",
            "issn": "some-value",
            "issue": "some-value",
            "jurisdiction": "some-value",
            "medium": "some-value",
            "number": "some-value",
            "numberOfPages": "some-value",
            "numberOfVolumes": "some-value",
            "originalPublisher": "some-value",
            "originalPublisherPlace": "some-value",
            "originalTitle": "some-value",
            "pmcid": "some-value",
            "pmid": "some-value",
            "publisher": "some-value",
            "publisherPlace": "some-value",
            "reviewedTitle": "some-value",
            "section": "some-value",
            "version": "some-value",
            "volume": "some-value",
            "yearSuffix": "some-value",
          },
          "projectSlug": "delegated-project-slug",
          "slug": "slug-AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE",
          "tagList": Array [
            "dog",
            "puppy",
            "GOAT",
          ],
          "title": "Image",
          "titleFormatted": "Image",
        },
        "id": "AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE",
        "relationships": Object {},
        "type": "resources",
      }
    }
  />
  <div
    className="form-section form-section--primary"
  >
    <Form.TextInput
      focusOnMount={false}
      getModelValue={
        [MockFunction] {
          "calls": Array [
            Array [
              "attributes[subKind]",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": "kind",
            },
          ],
        }
      }
      instructions="The video's ID is located after \\"?v=\\" in YouTube URLs, and after \\"vimeo.com/\\" in Vimeo URLs."
      join={[Function]}
      label="Video ID"
      name="attributes[externalId]"
      password={false}
      placeholder="Video ID"
      sourceModel={
        Object {
          "attributes": Object {
            "abilities": Object {
              "create": true,
              "createPermissions": true,
              "createResourceCollections": true,
              "createResources": true,
              "createTexts": true,
              "createTwitterQueries": true,
              "delete": true,
              "manageEvents": true,
              "managePermissions": true,
              "manageResourceCollections": true,
              "manageResources": true,
              "manageSocials": true,
              "manageTexts": true,
              "manageTwitterQueries": true,
              "read": true,
              "readDeleted": true,
              "readDrafts": true,
              "readLog": true,
              "readSecrets": true,
              "update": true,
              "updateMakers": true,
            },
            "attachmentStyles": Object {
              "medium": null,
              "mediumSquare": "original-image.mock",
              "original": "original-image.mock",
            },
            "captionFormatted": "World's Greatest Dog",
            "createdAt": "2017-04-24T23:25:50.161Z",
            "descriptionFormatted": "Black and white freckles",
            "downloadable": true,
            "kind": "image",
            "metadata": Object {
              "abstract": "some-value",
              "archive": "some-value",
              "archiveLocation": "some-value",
              "archivePlace": "some-value",
              "authority": "some-value",
              "callNumber": "some-value",
              "chapterNumber": "some-value",
              "collectionNumber": "some-value",
              "collectionTitle": "some-value",
              "containerTitle": "some-value",
              "dimensions": "some-value",
              "edition": "some-value",
              "event": "some-value",
              "eventPlace": "some-value",
              "isbn": "some-value",
              "issn": "some-value",
              "issue": "some-value",
              "jurisdiction": "some-value",
              "medium": "some-value",
              "number": "some-value",
              "numberOfPages": "some-value",
              "numberOfVolumes": "some-value",
              "originalPublisher": "some-value",
              "originalPublisherPlace": "some-value",
              "originalTitle": "some-value",
              "pmcid": "some-value",
              "pmid": "some-value",
              "publisher": "some-value",
              "publisherPlace": "some-value",
              "reviewedTitle": "some-value",
              "section": "some-value",
              "version": "some-value",
              "volume": "some-value",
              "yearSuffix": "some-value",
            },
            "metadataFormatted": Object {
              "abstract": "some-value",
              "archive": "some-value",
              "archiveLocation": "some-value",
              "archivePlace": "some-value",
              "authority": "some-value",
              "callNumber": "some-value",
              "chapterNumber": "some-value",
              "collectionNumber": "some-value",
              "collectionTitle": "some-value",
              "containerTitle": "some-value",
              "dimensions": "some-value",
              "edition": "some-value",
              "event": "some-value",
              "eventPlace": "some-value",
              "isbn": "some-value",
              "issn": "some-value",
              "issue": "some-value",
              "jurisdiction": "some-value",
              "medium": "some-value",
              "number": "some-value",
              "numberOfPages": "some-value",
              "numberOfVolumes": "some-value",
              "originalPublisher": "some-value",
              "originalPublisherPlace": "some-value",
              "originalTitle": "some-value",
              "pmcid": "some-value",
              "pmid": "some-value",
              "publisher": "some-value",
              "publisherPlace": "some-value",
              "reviewedTitle": "some-value",
              "section": "some-value",
              "version": "some-value",
              "volume": "some-value",
              "yearSuffix": "some-value",
            },
            "projectSlug": "delegated-project-slug",
            "slug": "slug-AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE",
            "tagList": Array [
              "dog",
              "puppy",
              "GOAT",
            ],
            "title": "Image",
            "titleFormatted": "Image",
          },
          "id": "AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE",
          "relationships": Object {},
          "type": "resources",
        }
      }
    />
    <HigherOrder.FetchData('HigherOrder.WithFormOptions('Form.Select))
      getModelValue={
        [MockFunction] {
          "calls": Array [
            Array [
              "attributes[subKind]",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": "kind",
            },
          ],
        }
      }
      label="External Video Type"
      name="attributes[externalType]"
      options={
        Array [
          Object {
            "label": "Select a video source...",
            "value": "",
          },
          Object {
            "label": "Youtube",
            "value": "youtube",
          },
          Object {
            "label": "Vimeo",
            "value": "vimeo",
          },
        ]
      }
      sourceModel={
        Object {
          "attributes": Object {
            "abilities": Object {
              "create": true,
              "createPermissions": true,
              "createResourceCollections": true,
              "createResources": true,
              "createTexts": true,
              "createTwitterQueries": true,
              "delete": true,
              "manageEvents": true,
              "managePermissions": true,
              "manageResourceCollections": true,
              "manageResources": true,
              "manageSocials": true,
              "manageTexts": true,
              "manageTwitterQueries": true,
              "read": true,
              "readDeleted": true,
              "readDrafts": true,
              "readLog": true,
              "readSecrets": true,
              "update": true,
              "updateMakers": true,
            },
            "attachmentStyles": Object {
              "medium": null,
              "mediumSquare": "original-image.mock",
              "original": "original-image.mock",
            },
            "captionFormatted": "World's Greatest Dog",
            "createdAt": "2017-04-24T23:25:50.161Z",
            "descriptionFormatted": "Black and white freckles",
            "downloadable": true,
            "kind": "image",
            "metadata": Object {
              "abstract": "some-value",
              "archive": "some-value",
              "archiveLocation": "some-value",
              "archivePlace": "some-value",
              "authority": "some-value",
              "callNumber": "some-value",
              "chapterNumber": "some-value",
              "collectionNumber": "some-value",
              "collectionTitle": "some-value",
              "containerTitle": "some-value",
              "dimensions": "some-value",
              "edition": "some-value",
              "event": "some-value",
              "eventPlace": "some-value",
              "isbn": "some-value",
              "issn": "some-value",
              "issue": "some-value",
              "jurisdiction": "some-value",
              "medium": "some-value",
              "number": "some-value",
              "numberOfPages": "some-value",
              "numberOfVolumes": "some-value",
              "originalPublisher": "some-value",
              "originalPublisherPlace": "some-value",
              "originalTitle": "some-value",
              "pmcid": "some-value",
              "pmid": "some-value",
              "publisher": "some-value",
              "publisherPlace": "some-value",
              "reviewedTitle": "some-value",
              "section": "some-value",
              "version": "some-value",
              "volume": "some-value",
              "yearSuffix": "some-value",
            },
            "metadataFormatted": Object {
              "abstract": "some-value",
              "archive": "some-value",
              "archiveLocation": "some-value",
              "archivePlace": "some-value",
              "authority": "some-value",
              "callNumber": "some-value",
              "chapterNumber": "some-value",
              "collectionNumber": "some-value",
              "collectionTitle": "some-value",
              "containerTitle": "some-value",
              "dimensions": "some-value",
              "edition": "some-value",
              "event": "some-value",
              "eventPlace": "some-value",
              "isbn": "some-value",
              "issn": "some-value",
              "issue": "some-value",
              "jurisdiction": "some-value",
              "medium": "some-value",
              "number": "some-value",
              "numberOfPages": "some-value",
              "numberOfVolumes": "some-value",
              "originalPublisher": "some-value",
              "originalPublisherPlace": "some-value",
              "originalTitle": "some-value",
              "pmcid": "some-value",
              "pmid": "some-value",
              "publisher": "some-value",
              "publisherPlace": "some-value",
              "reviewedTitle": "some-value",
              "section": "some-value",
              "version": "some-value",
              "volume": "some-value",
              "yearSuffix": "some-value",
            },
            "projectSlug": "delegated-project-slug",
            "slug": "slug-AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE",
            "tagList": Array [
              "dog",
              "puppy",
              "GOAT",
            ],
            "title": "Image",
            "titleFormatted": "Image",
          },
          "id": "AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE",
          "relationships": Object {},
          "type": "resources",
        }
      }
    />
  </div>
</div>
`;

exports[`backend/components/resource/form/kind/Video when sub kind is external_video matches the snapshot when rendered 1`] = `
<div
  class="form-section form-section--primary"
>
  <div
    class="form-input"
  >
    <label
      class="form-switch"
      for="switch-input-1"
    >
      <span
        class="form-input-heading toggle above"
      >
        Is this an externally linked video?
      </span>
      <input
        id="switch-input-1"
        type="checkbox"
      />
      <span
        class="toggle-indicator"
      >
        <span
          aria-hidden="true"
          class="boolean-primary"
        />
      </span>
    </label>
  </div>
  <div
    class="form-section form-section--primary"
  >
    <div
      class="form-input"
    >
      <label
        class="has-instructions"
        for="text-input-1"
      >
        Video ID
      </label>
      <input
        aria-describedby="text-input-error-1 text-input-instructions-1"
        id="text-input-1"
        placeholder="Video ID"
        type="text"
        value=""
      />
      <span
        class="instructions"
        id="text-input-instructions-1"
      >
        The video's ID is located after "?v=" in YouTube URLs, and after "vimeo.com/" in Vimeo URLs.
      </span>
    </div>
    <div
      class="form-input"
    >
      <div
        class="form-select"
      >
        <label
          for="select-1"
        >
          External Video Type
        </label>
        <div
          class="form-select"
        >
          <svg
            aria-hidden="true"
            class="manicon-svg form-select__icon svg-icon--disclosureDown16"
            fill="currentColor"
            height="20"
            viewBox="0 0 16 16"
            width="20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <polygon
              points="8 9.702 13.356 5 13.999 5.733 8 10.999 2 5.733 2.643 5"
            />
          </svg>
          <select
            aria-describedby="select-error-1 select-instructions-1"
            id="select-1"
          >
            <option
              selected=""
              value=""
            >
              Select a video source...
            </option>
            <option
              value="youtube"
            >
              Youtube
            </option>
            <option
              value="vimeo"
            >
              Vimeo
            </option>
          </select>
        </div>
      </div>
    </div>
  </div>
</div>
`;
