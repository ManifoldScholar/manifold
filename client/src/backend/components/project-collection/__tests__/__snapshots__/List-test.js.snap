// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`backend/components/project-collection/List matches the snapshot 1`] = `
<aside
  className="aside-wide project-collection-list"
>
  <List.Entities.List
    callbacks={
      Object {
        "onReorder": [MockFunction],
      }
    }
    entities={
      Array [
        Object {
          "attributes": Object {
            "abilities": Object {
              "create": true,
              "createEntitlements": true,
              "createPermissions": true,
              "createResourceCollections": true,
              "createResources": true,
              "createTexts": true,
              "createTwitterQueries": true,
              "delete": true,
              "manageEntitlements": true,
              "manageEvents": true,
              "managePermissions": true,
              "manageResourceCollections": true,
              "manageResources": true,
              "manageSocials": true,
              "manageTexts": true,
              "manageTwitterQueries": true,
              "read": true,
              "readDeleted": true,
              "readDrafts": true,
              "readLog": true,
              "readSecrets": true,
              "update": true,
              "updateMakers": true,
            },
            "descriptionFormatted": "The publisher can include a descriptive sentence or paragraph to help describe this Collection. If you want to go this route it might be a good idea for the text describing your custom collection to be a little longer than a single short sentence.",
            "featuredOnly": false,
            "heroLayout": "square_inset",
            "icon": "lamp",
            "manuallySorted": true,
            "numberOfProjects": null,
            "smart": false,
            "socialDescription": "Bar Foo",
            "socialTitle": "Foo Bar",
            "sortOrder": "manual",
            "tagList": Array [],
            "title": "A Project Collection",
          },
          "id": "1",
          "relationships": Object {},
          "type": "projectCollections",
        },
        Object {
          "attributes": Object {
            "abilities": Object {
              "create": true,
              "createEntitlements": true,
              "createPermissions": true,
              "createResourceCollections": true,
              "createResources": true,
              "createTexts": true,
              "createTwitterQueries": true,
              "delete": true,
              "manageEntitlements": true,
              "manageEvents": true,
              "managePermissions": true,
              "manageResourceCollections": true,
              "manageResources": true,
              "manageSocials": true,
              "manageTexts": true,
              "manageTwitterQueries": true,
              "read": true,
              "readDeleted": true,
              "readDrafts": true,
              "readLog": true,
              "readSecrets": true,
              "update": true,
              "updateMakers": true,
            },
            "descriptionFormatted": "The publisher can include a descriptive sentence or paragraph to help describe this Collection. If you want to go this route it might be a good idea for the text describing your custom collection to be a little longer than a single short sentence.",
            "featuredOnly": false,
            "heroLayout": "square_inset",
            "icon": "lamp",
            "manuallySorted": true,
            "numberOfProjects": null,
            "smart": false,
            "socialDescription": "Bar Foo",
            "socialTitle": "Foo Bar",
            "sortOrder": "manual",
            "tagList": Array [],
            "title": "A Project Collection",
          },
          "id": "2",
          "relationships": Object {},
          "type": "projectCollections",
        },
        Object {
          "attributes": Object {
            "abilities": Object {
              "create": true,
              "createEntitlements": true,
              "createPermissions": true,
              "createResourceCollections": true,
              "createResources": true,
              "createTexts": true,
              "createTwitterQueries": true,
              "delete": true,
              "manageEntitlements": true,
              "manageEvents": true,
              "managePermissions": true,
              "manageResourceCollections": true,
              "manageResources": true,
              "manageSocials": true,
              "manageTexts": true,
              "manageTwitterQueries": true,
              "read": true,
              "readDeleted": true,
              "readDrafts": true,
              "readLog": true,
              "readSecrets": true,
              "update": true,
              "updateMakers": true,
            },
            "descriptionFormatted": "The publisher can include a descriptive sentence or paragraph to help describe this Collection. If you want to go this route it might be a good idea for the text describing your custom collection to be a little longer than a single short sentence.",
            "featuredOnly": false,
            "heroLayout": "square_inset",
            "icon": "lamp",
            "manuallySorted": true,
            "numberOfProjects": null,
            "smart": false,
            "socialDescription": "Bar Foo",
            "socialTitle": "Foo Bar",
            "sortOrder": "manual",
            "tagList": Array [],
            "title": "A Project Collection",
          },
          "id": "3",
          "relationships": Object {},
          "type": "projectCollections",
        },
      ]
    }
    entityComponent={[Function]}
    entityComponentProps={
      Object {
        "active": "1",
        "clickHandler": [MockFunction],
        "visibilityToggleHandler": [MockFunction],
      }
    }
    indented={false}
    listStyle="bare"
    showCount={false}
    showCountInTitle={false}
    sortableStyle="spaced"
    titleStyle="title"
    useDragHandle={true}
  />
  <div
    className="actions"
  >
    <button
      className="button-icon-secondary button-icon-secondary--full"
      onClick={[MockFunction]}
    >
      <IconComposer
        fill="currentColor"
        icon="plus16"
        iconClass="button-icon-secondary__icon button-icon-secondary__icon--large"
        size={20}
        svgProps={
          Object {
            "aria-hidden": true,
          }
        }
      />
      <span>
        Create New Collection
      </span>
    </button>
  </div>
  <p
    className="instructional-copy"
  >
    Select a Collection to edit its settings, visibility, and contents.
  </p>
</aside>
`;
