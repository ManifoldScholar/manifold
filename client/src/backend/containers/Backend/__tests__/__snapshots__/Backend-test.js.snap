// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend Backend Container renders correctly 1`] = `
"<MemoryRouter>
  <Router history={{...}}>
    <Provider store={{...}}>
      <BackendContainer history={{...}} notifications={{...}} authentication={{...}} route={{...}} visibility={{...}} settings={{...}}>
        <SideEffect(BodyClass) className=\\"backend bg-neutral90\\">
          <BodyClass className=\\"backend bg-neutral90\\">
            <withRouter(Connect(RedirectToFirstMatch)) from=\\"/backend\\" candidates={{...}}>
              <Connect(RedirectToFirstMatch) from=\\"/backend\\" candidates={{...}} history={{...}} location={{...}} match={{...}} staticContext={[undefined]}>
                <RedirectToFirstMatch from=\\"/backend\\" candidates={{...}} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} authentication={{...}} dispatch={[Function]} />
              </Connect(RedirectToFirstMatch)>
            </withRouter(Connect(RedirectToFirstMatch))>
            <withRouter(ScrollToTop)>
              <ScrollToTop history={{...}} location={{...}} match={{...}} staticContext={[undefined]} />
            </withRouter(ScrollToTop)>
            <Layout.Header visibility={{...}} match={[undefined]} location={[undefined]} authentication={{...}} commonActions={{...}}>
              <BlurOnLocationChange tag=\\"header\\" className=\\"header-app header-app--sticky\\" location={[undefined]}>
                <header className=\\"header-app header-app--sticky\\">
                  <SetCSSProperty measurement=\\"height\\" propertyName=\\"--library-header-height\\">
                    <div>
                      <SkipLink skipId=\\"skip-to-main\\" skipLinkText=\\"Skip to main content\\" skipMessage=\\"Skipped to Main Content\\">
                        <a className=\\"skip-to-main screen-reader-text\\" href=\\"#skip-to-main\\" onClick={[Function]}>
                          Skip to main content
                        </a>
                      </SkipLink>
                      <div className=\\"library-header library-header--dark\\">
                        <div className=\\"library-header__inner\\">
                          <Link to=\\"/\\" className=\\"header-logo\\">
                            <a className=\\"header-logo\\" onClick={[Function: onClick]} href=\\"/\\">
                              <span className=\\"screen-reader-text\\">
                                Return to home
                              </span>
                              <PressLogo aria-hidden=\\"true\\">
                                <figure className=\\"\\">
                                  <IconComposer size={26} icon=\\"manifoldLogo32\\" fill=\\"currentColor\\" svgProps={{...}}>
                                    <ManifoldLogo svgProps={{...}} iconClass=\\"svg-icon--manifoldLogo32\\" icon=\\"manifoldLogo32\\" size={26} fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                      <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg svg-icon--manifoldLogo32\\" width={26} height={26} viewBox=\\"0 0 32 32\\" fill=\\"currentColor\\" aria-hidden={true}>
                                        <polygon fillRule=\\"evenodd\\" points=\\"29.995 10.305 27.851 10.983 24.581 9.72 29.995 8.007 29.995 6.182 21.983 8.718 18.712 7.454 29.995 3.884 29.995 2.059 16.114 6.45 2 1 2.036 12.73 15.131 8.587 15.131 10.886 2.036 15.029 2.036 16.854 15.131 12.71 15.131 15.009 2.036 19.152 2.036 20.977 15.131 16.834 15.131 19.132 2.036 23.275 2.036 25.1 15.131 20.958 15.131 23.256 2.036 27.399 2.036 29.224 15.989 24.809 30 30.22\\" />
                                      </svg>
                                    </ManifoldLogo>
                                  </IconComposer>
                                  <span className=\\"screen-reader-text\\">
                                    Manifold Logo
                                  </span>
                                </figure>
                              </PressLogo>
                            </a>
                          </Link>
                          <withRouter(Navigation.Primary) links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" darkTheme={true}>
                            <Navigation.Primary links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" darkTheme={true} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} exact={false}>
                              <withRouter(Navigation.Static) backendButton={{...}} links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" darkTheme={true} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} exact={false} style={[undefined]}>
                                <Navigation.Static backendButton={{...}} links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" darkTheme={true} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} exact={false} style={[undefined]}>
                                  <nav className=\\"site-nav show-75 site-nav--backend\\" aria-label=\\"Primary Navigation\\">
                                    <ul aria-label=\\"Page Links\\" style={[undefined]} className=\\"site-nav__list\\">
                                      <li className=\\"site-nav__item\\">
                                        <NavLink to=\\"/backend/dashboard\\" exact={false} target={{...}} className=\\"site-nav__link\\" activeClassName=\\"site-nav__link--active\\">
                                          <Link aria-current={{...}} className=\\"site-nav__link\\" style={[undefined]} to=\\"/backend/dashboard\\" target={{...}}>
                                            <a aria-current={{...}} className=\\"site-nav__link\\" style={[undefined]} target={{...}} onClick={[Function: onClick]} href=\\"/backend/dashboard\\">
                                              Dashboard
                                            </a>
                                          </Link>
                                        </NavLink>
                                      </li>
                                      <li className=\\"site-nav__item\\">
                                        <NavLink to=\\"/backend/projects\\" exact={false} target={{...}} className=\\"site-nav__link\\" activeClassName=\\"site-nav__link--active\\">
                                          <Link aria-current={{...}} className=\\"site-nav__link\\" style={[undefined]} to=\\"/backend/projects\\" target={{...}}>
                                            <a aria-current={{...}} className=\\"site-nav__link\\" style={[undefined]} target={{...}} onClick={[Function: onClick]} href=\\"/backend/projects\\">
                                              Projects
                                            </a>
                                          </Link>
                                        </NavLink>
                                      </li>
                                      <Connect(withRouter(AuthorizeComponent)) entity={{...}} ability=\\"update\\">
                                        <withRouter(AuthorizeComponent) entity={{...}} ability=\\"update\\" authentication={{...}} dispatch={[Function]}>
                                          <AuthorizeComponent entity={{...}} ability=\\"update\\" authentication={{...}} dispatch={[Function]} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} successBehavior=\\"show\\" failureRedirect={{...}} failureNotification={{...}} failureFatalError={{...}} />
                                        </withRouter(AuthorizeComponent)>
                                      </Connect(withRouter(AuthorizeComponent))>
                                      <Connect(withRouter(AuthorizeComponent)) entity=\\"settings\\" ability=\\"update\\">
                                        <withRouter(AuthorizeComponent) entity=\\"settings\\" ability=\\"update\\" authentication={{...}} dispatch={[Function]}>
                                          <AuthorizeComponent entity=\\"settings\\" ability=\\"update\\" authentication={{...}} dispatch={[Function]} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} successBehavior=\\"show\\" failureRedirect={{...}} failureNotification={{...}} failureFatalError={{...}} />
                                        </withRouter(AuthorizeComponent)>
                                      </Connect(withRouter(AuthorizeComponent))>
                                    </ul>
                                  </nav>
                                  <nav className=\\"user-nav show-75 user-nav--dark\\">
                                    <ul aria-label=\\"User Links\\" style={[undefined]} className=\\"user-nav__list\\">
                                      <li className=\\"user-nav__item\\">
                                        <Link className=\\"mode-button\\" to=\\"/\\">
                                          <a className=\\"mode-button\\" onClick={[Function: onClick]} href=\\"/\\">
                                            Exit Admin Mode
                                          </a>
                                        </Link>
                                      </li>
                                      <li className=\\"user-nav__item\\">
                                        <UserMenuButton authentication={{...}} active={[undefined]} showLoginOverlay={[Function]} toggleUserMenu={[Function]} context=\\"backend\\">
                                          <button onClick={[Function]} className=\\"button-avatar button-avatar--backend\\" aria-haspopup={true} aria-expanded={[undefined]}>
                                            <span className=\\"screen-reader-text\\">
                                              User settings
                                            </span>
                                            <Avatar url={[undefined]} iconSize={24} ariaHidden={true}>
                                              <figure style={[undefined]} className=\\"avatar\\" aria-hidden={true}>
                                                <IconComposer iconClass=\\"avatar__icon\\" icon=\\"Avatar24\\" size={24} fill=\\"currentColor\\" svgProps={{...}}>
                                                  <Avatar svgProps={{...}} iconClass=\\"avatar__icon svg-icon--Avatar24\\" icon=\\"Avatar24\\" size={24} fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                                    <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg avatar__icon svg-icon--Avatar24\\" width={24} height={24} viewBox=\\"0 0 24 24\\" fill=\\"currentColor\\" aria-hidden={true}>
                                                      <path fillRule=\\"evenodd\\" d=\\"M17.06,18.19 L16.95,17.444 C16.738,16.014 15.631,14.977 14.316,14.977 L9.65,14.977 C8.336,14.977 7.228,16.014 7.017,17.444 L6.91,18.167 C5.134,16.698 4,14.479 4,12 C4,7.588 7.589,4 12,4 C16.412,4 20,7.588 20,12 C20,14.493 18.853,16.722 17.06,18.19 M7.826,18.811 L8.006,17.59 C8.144,16.656 8.836,15.977 9.65,15.977 L14.316,15.977 C15.131,15.977 15.822,16.656 15.96,17.59 L16.144,18.831 C14.934,19.567 13.518,20 12,20 C10.47,20 9.043,19.56 7.826,18.811 M12,3 C7.038,3 3,7.037 3,12 C3,16.962 7.038,21 12,21 C16.963,21 21,16.962 21,12 C21,7.037 16.963,3 12,3 M11.9999,12.4751 C10.6219,12.4751 9.4999,11.3541 9.4999,9.9751 C9.4999,8.5961 10.6219,7.4751 11.9999,7.4751 C13.3779,7.4751 14.4999,8.5961 14.4999,9.9751 C14.4999,11.3541 13.3779,12.4751 11.9999,12.4751 M11.9999,6.4751 C10.0699,6.4751 8.4999,8.0451 8.4999,9.9751 C8.4999,11.9051 10.0699,13.4751 11.9999,13.4751 C13.9299,13.4751 15.4999,11.9051 15.4999,9.9751 C15.4999,8.0451 13.9299,6.4751 11.9999,6.4751\\" />
                                                    </svg>
                                                  </Avatar>
                                                </IconComposer>
                                                <span className=\\"screen-reader-text\\">
                                                  Avatar
                                                </span>
                                              </figure>
                                            </Avatar>
                                          </button>
                                        </UserMenuButton>
                                        <UIPanel id=\\"user\\" visibility={{...}} bodyComponent={[Function: C]} showLoginOverlay={[Function]} startLogout={[Function]} hideUserMenu={[Function]} hidePanel={[Function]}>
                                          <Component in={[undefined]} classNames=\\"panel\\" timeout={200} unmountOnExit={true}>
                                            <div className=\\"panel-hidden\\">
                                              <focus-trap-react focusTrapOptions={{...}}>
                                                <button className=\\"screen-reader-text\\" onClick={[Function]}>
                                                  Close Panel
                                                </button>
                                                <withRouter(UserMenuBodyComponent) id=\\"user\\" visibility={{...}} bodyComponent={[Function: C]} showLoginOverlay={[Function]} startLogout={[Function]} hideUserMenu={[Function]} hidePanel={[Function]}>
                                                  <UserMenuBodyComponent id=\\"user\\" visibility={{...}} bodyComponent={[Function: C]} showLoginOverlay={[Function]} startLogout={[Function]} hideUserMenu={[Function]} hidePanel={[Function]} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} context=\\"frontend\\">
                                                    <nav className=\\"user-menu user-menu--frontend menu-hidden\\">
                                                      <i className=\\"user-menu__tail tail\\" />
                                                      <ul className=\\"user-menu__list\\">
                                                        <li className=\\"user-menu__item\\">
                                                          <button className=\\"user-menu__link\\" onClick={[Function]} aria-describedby=\\"user-menu-edit-profile\\">
                                                            <IconComposer icon=\\"editProfile24\\" size={32} iconClass=\\"user-menu__icon\\" fill=\\"currentColor\\" svgProps={{...}}>
                                                              <EditProfile svgProps={{...}} iconClass=\\"user-menu__icon svg-icon--editProfile24\\" icon=\\"editProfile24\\" size={32} fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                                                <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg user-menu__icon svg-icon--editProfile24\\" width={32} height={32} viewBox=\\"0 0 24 24\\" fill=\\"currentColor\\" aria-hidden={true}>
                                                                  <path fillRule=\\"evenodd\\" d=\\"M9.3785,4 C10.7565,4 11.8785,5.121 11.8785,6.5 C11.8785,7.879 10.7565,9 9.3785,9 C8.0005,9 6.8785,7.879 6.8785,6.5 C6.8785,5.121 8.0005,4 9.3785,4 M9.3785,10 C11.3085,10 12.8785,8.43 12.8785,6.5 C12.8785,4.57 11.3085,3 9.3785,3 C7.4485,3 5.8785,4.57 5.8785,6.5 C5.8785,8.43 7.4485,10 9.3785,10 M11.542,18.4863 L12.921,19.8693 L10.97,20.4403 L11.542,18.4863 Z M19.939,13.3503 L13.871,19.4053 L12.007,17.5363 L18.075,11.4823 L19.939,13.3503 Z M18.077,10.0683 L14.391,13.7453 C14.146,12.4353 13.047,11.4903 11.745,11.4903 L7.012,11.4903 C5.686,11.4903 4.565,12.4663 4.349,13.8133 L4,15.9753 L5.013,15.9753 L5.336,13.9713 C5.474,13.1133 6.179,12.4903 7.012,12.4903 L11.745,12.4903 C12.577,12.4903 13.282,13.1133 13.42,13.9713 L13.523,14.6103 L10.855,17.2713 L9.498,21.9133 L14.133,20.5563 L21.353,13.3523 L18.077,10.0683 Z\\" />
                                                                </svg>
                                                              </EditProfile>
                                                            </IconComposer>
                                                            <span className=\\"user-menu__link-text\\">
                                                              Edit Profile
                                                            </span>
                                                          </button>
                                                          <span id=\\"user-menu-edit-profile\\" className=\\"aria-describedby\\">
                                                            Edit your profile
                                                          </span>
                                                        </li>
                                                        <li className=\\"user-menu__item\\">
                                                          <button className=\\"user-menu__link\\" onClick={[Function]} aria-describedby=\\"user-menu-notifications\\">
                                                            <IconComposer icon=\\"notifications24\\" size={32} iconClass=\\"user-menu__icon\\" fill=\\"currentColor\\" svgProps={{...}}>
                                                              <Notifications svgProps={{...}} iconClass=\\"user-menu__icon svg-icon--notifications24\\" icon=\\"notifications24\\" size={32} fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                                                <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg user-menu__icon svg-icon--notifications24\\" width={32} height={32} viewBox=\\"0 0 24 24\\" fill=\\"currentColor\\" aria-hidden={true}>
                                                                  <path d=\\"M21,10.0980483 L21,17.499 L3,17.499 L3,6.499 L16.6708057,6.499 C17.0826008,5.33378734 18.1936863,4.4992 19.5001,4.4992 C21.1572424,4.4992 22.5001,5.84205763 22.5001,7.4992 C22.5001,8.60991078 21.8968292,9.57943101 21,10.0980483 Z M16.5001,7.499 L4.89352556,7.499 L12.0001,13.3514731 L17.0329753,9.20675226 C16.6969712,8.72213638 16.5001,8.13370622 16.5001,7.4992 Z M17.7341318,9.9247831 L12.0001,14.6469269 L4,8.05860928 L4,16.499 L20,16.499 L20,10.4577577 C19.8374314,10.4850136 19.6704258,10.4992 19.5001,10.4992 C18.8398741,10.4992 18.2295354,10.2860451 17.7341318,9.9247831 Z M21.5001,7.4992 C21.5001,6.39434237 20.6049576,5.4992 19.5001,5.4992 C18.3952424,5.4992 17.5001,6.39434237 17.5001,7.4992 C17.5001,8.60405763 18.3952424,9.4992 19.5001,9.4992 C20.6049576,9.4992 21.5001,8.60405763 21.5001,7.4992 Z\\" />
                                                                </svg>
                                                              </Notifications>
                                                            </IconComposer>
                                                            <span className=\\"user-menu__link-text\\">
                                                              Notifications
                                                            </span>
                                                          </button>
                                                          <span id=\\"user-menu-notifications\\" className=\\"aria-describedby\\">
                                                            Edit your notification settings
                                                          </span>
                                                        </li>
                                                        <li className=\\"user-menu__item\\">
                                                          <button className=\\"user-menu__link\\" onClick={[Function]} aria-describedby=\\"user-menu-groups\\">
                                                            <IconComposer icon=\\"annotationGroup24\\" size={32} iconClass=\\"user-menu__icon\\" fill=\\"currentColor\\" svgProps={{...}}>
                                                              <AnnotationGroup svgProps={{...}} iconClass=\\"user-menu__icon svg-icon--annotationGroup24\\" icon=\\"annotationGroup24\\" size={32} fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                                                <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg user-menu__icon svg-icon--annotationGroup24\\" width={32} height={32} viewBox=\\"0 0 24 24\\" aria-hidden={true}>
                                                                  <g fill=\\"none\\" fillRule=\\"evenodd\\">
                                                                    <path fill=\\"currentColor\\" d=\\"M2,3 L2,13 L5,13 L5,17.046 L9.478,13 L16,13 L16,3 L2,3 Z M3,4 L15,4 L15,12 L9.093,12 L6,14.794 L6,12 L3,12 L3,4 Z M17.5003,7.9995 L21.9993,7.9995 L21.9993,16.9995 L19.0003,16.9995 L19.0003,21.2575 L14.8993,16.9995 L10.0003,16.9995 L10.0003,14.4995 L11.0003,14.4995 L11.0003,15.9995 L15.3253,15.9995 L18.0003,18.7775 L18.0003,15.9995 L21.0003,15.9995 L21.0003,8.9995 L17.5003,8.9995 L17.5003,7.9995 Z\\" />
                                                                  </g>
                                                                </svg>
                                                              </AnnotationGroup>
                                                            </IconComposer>
                                                            <span className=\\"user-menu__link-text\\">
                                                              Manage Groups
                                                            </span>
                                                          </button>
                                                          <span id=\\"user-menu-groups\\" className=\\"aria-describedby\\">
                                                            Manage your Reading Groups
                                                          </span>
                                                        </li>
                                                        <li className=\\"user-menu__item\\">
                                                          <button className=\\"user-menu__link\\" onClick={[Function]} aria-describedby=\\"user-menu-logout\\">
                                                            <IconComposer icon=\\"logout24\\" size={32} iconClass=\\"user-menu__icon\\" fill=\\"currentColor\\" svgProps={{...}}>
                                                              <Logout svgProps={{...}} iconClass=\\"user-menu__icon svg-icon--logout24\\" icon=\\"logout24\\" size={32} fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                                                <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg user-menu__icon svg-icon--logout24\\" width={32} height={32} viewBox=\\"0 0 24 24\\" fill=\\"currentColor\\" aria-hidden={true}>
                                                                  <path fillRule=\\"evenodd\\" d=\\"M9,17 C11.045,17 12.802,15.763 13.576,14 L14.65,14 C13.823,16.327 11.606,18 9,18 C5.691,18 3,15.309 3,12 C3,8.691 5.691,6 9,6 C11.606,6 13.824,7.674 14.65,10 L13.576,10 C12.803,8.237 11.045,7 9,7 C6.243,7 4,9.243 4,12 C4,14.757 6.243,17 9,17 Z M17.269,7.627 L21.479,12 L17.269,16.374 L16.548,15.681 L19.61,12.5 L9.5,12.5 L9.5,11.5 L19.61,11.5 L16.548,8.32 L17.269,7.627 Z\\" />
                                                                </svg>
                                                              </Logout>
                                                            </IconComposer>
                                                            <span className=\\"user-menu__link-text\\">
                                                              Logout
                                                            </span>
                                                          </button>
                                                          <span id=\\"user-menu-logout\\" className=\\"aria-describedby\\">
                                                            Logout of Manifold
                                                          </span>
                                                        </li>
                                                      </ul>
                                                    </nav>
                                                  </UserMenuBodyComponent>
                                                </withRouter(UserMenuBodyComponent)>
                                              </focus-trap-react>
                                            </div>
                                          </Component>
                                        </UIPanel>
                                      </li>
                                    </ul>
                                  </nav>
                                </Navigation.Static>
                              </withRouter(Navigation.Static)>
                              <withRouter(Navigation.Mobile) backendButton={{...}} links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" darkTheme={true} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} exact={false} style={[undefined]}>
                                <Navigation.Mobile backendButton={{...}} links={{...}} commonActions={{...}} authentication={{...}} visibility={{...}} mode=\\"backend\\" darkTheme={true} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} exact={false} style={[undefined]}>
                                  <MobileBreadcrumb links={{...}} location={{...}}>
                                    <nav className=\\"breadcrumb-list hide-75\\" />
                                  </MobileBreadcrumb>
                                  <nav className=\\"hide-75 nested-nav nested-nav--dark\\" aria-label=\\"Mobile Navigation\\" />
                                  <button onClick={[Function]} className=\\"mobile-nav-toggle\\" aria-haspopup={true} aria-expanded={false}>
                                    <span className=\\"screen-reader-text\\">
                                      Open mobile navigation menu
                                    </span>
                                    <IconComposer icon=\\"menu32\\" size=\\"default\\" iconClass=\\"mobile-nav-trigger__icon\\" fill=\\"currentColor\\" svgProps={{...}}>
                                      <Menu svgProps={{...}} iconClass=\\"mobile-nav-trigger__icon svg-icon--menu32\\" icon=\\"menu32\\" size=\\"default\\" fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                        <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg mobile-nav-trigger__icon svg-icon--menu32\\" width={32} height={32} viewBox=\\"0 0 32 32\\" fill=\\"currentColor\\" aria-hidden={true}>
                                          <path d=\\"M25,15.5 L25,16.5 L6.99999997,16.5 L6.99999997,15.5 L25,15.5 Z M25,8.49999998 L25,9.49999998 L6.99999997,9.49999998 L6.99999997,8.49999998 L25,8.49999998 Z M25,22.5 L25,23.5 L6.99999997,23.5 L6.99999997,22.5 L25,22.5 Z\\" />
                                        </svg>
                                      </Menu>
                                    </IconComposer>
                                  </button>
                                </Navigation.Mobile>
                              </withRouter(Navigation.Mobile)>
                            </Navigation.Primary>
                          </withRouter(Navigation.Primary)>
                        </div>
                      </div>
                      <div className=\\"header-border\\" />
                    </div>
                  </SetCSSProperty>
                  <HeaderNotification scope=\\"global\\">
                    <Connect(NotificationsComponent) scope=\\"global\\">
                      <NotificationsComponent scope=\\"global\\" notifications={{...}} dispatch={[Function]} animate={true} style=\\"header\\">
                        <section className=\\"notifications-container\\" role=\\"alert\\">
                          <div className=\\"notifications-list--context-header notifications-list\\">
                            <TransitionGroup component=\\"div\\" childFactory={[Function: childFactory]}>
                              <div />
                            </TransitionGroup>
                          </div>
                        </section>
                      </NotificationsComponent>
                    </Connect(NotificationsComponent)>
                  </HeaderNotification>
                </header>
              </BlurOnLocationChange>
            </Layout.Header>
            <main id=\\"skip-to-main\\">
              <withRouter(ChildSwitch) parentRoute={{...}}>
                <ChildSwitch parentRoute={{...}} history={{...}} location={{...}} match={{...}} staticContext={[undefined]}>
                  <Connect(NotFound)>
                    <NotFound dispatch={[Function]} />
                  </Connect(NotFound)>
                </ChildSwitch>
              </withRouter(ChildSwitch)>
            </main>
            <Connect(withPluginReplacement('FrontendFooter)) pages={[undefined]} authentication={{...}} commonActions={{...}} settings={{...}}>
              <withPluginReplacement('FrontendFooter) pages={[undefined]} authentication={{...}} commonActions={{...}} settings={{...}} dispatch={[Function]}>
                <FrontendFooter pages={[undefined]} authentication={{...}} commonActions={{...}} settings={{...}} dispatch={[Function]}>
                  <withRouter(Connect(withPluginReplacement('DefaultFooter))) pages={[undefined]} authentication={{...}} commonActions={{...}} settings={{...}} dispatch={[Function]}>
                    <Connect(withPluginReplacement('DefaultFooter)) pages={[undefined]} authentication={{...}} commonActions={{...}} settings={{...}} dispatch={[Function]} history={{...}} location={{...}} match={{...}} staticContext={[undefined]}>
                      <withPluginReplacement('DefaultFooter) pages={[undefined]} authentication={{...}} commonActions={{...}} settings={{...}} dispatch={[Function]} history={{...}} location={{...}} match={{...}} staticContext={[undefined]}>
                        <DefaultFooter pages={[undefined]} authentication={{...}} commonActions={{...}} settings={{...}} dispatch={[Function]} history={{...}} location={{...}} match={{...}} staticContext={[undefined]}>
                          <footer className=\\"app-footer app-footer--default\\">
                            <FooterPartsColumns>
                              <div className=\\"app-footer__columns container\\">
                                <div className=\\"app-footer__row\\">
                                  <FooterColumn position=\\"right\\">
                                    <div className=\\"app-footer__column app-footer__column--right\\">
                                      <Global.Footers.Parts.Search push={[Function: push]}>
                                        <form className=\\"app-footer-search-form search-form\\" onSubmit={[Function]}>
                                          <div className=\\"search-button-inline\\">
                                            <label htmlFor=\\"app-footer-search\\" className=\\"screen-reader-text\\">
                                              Site Search
                                            </label>
                                            <input type=\\"text\\" id=\\"app-footer-search\\" placeholder=\\"Search\\" value=\\"\\" onChange={[Function]} />
                                            <button className=\\"icon\\">
                                              <IconComposer className=\\"search-icon\\" icon=\\"search16\\" size={20} fill=\\"currentColor\\" svgProps={{...}}>
                                                <Search svgProps={{...}} iconClass=\\"svg-icon--search16\\" icon=\\"search16\\" size={20} fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                                  <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg svg-icon--search16\\" width={20} height={20} viewBox=\\"0 0 16 16\\" fill=\\"currentColor\\" aria-hidden={true}>
                                                    <path d=\\"M7.00000003,3 C4.79086102,3 3.00000001,4.79086101 3.00000001,7.00000002 C3.00000001,9.20913903 4.79086102,11 7.00000003,11 C9.20912238,11 10.999973,9.20916605 11.0000001,7.00005001 C10.9995314,4.79106172 9.20889466,3.00044165 7.00000003,3 Z M10.8715096,10.1643028 L13.9971535,13.2899467 L13.2900467,13.9970535 L10.1644164,10.8714232 C9.30247365,11.5768009 8.20065857,12.0000001 7.00000003,12.0000001 C4.23857626,12.0000001 2,9.76142379 2,7.00000002 C2,4.23857625 4.23857626,1.99999999 7.0001,2 C9.76123985,2.00055206 11.999448,4.23876021 12.0000001,6.99990005 C12.0000001,8.2005577 11.5768322,9.30236028 10.8715096,10.1643028 Z\\" />
                                                  </svg>
                                                </Search>
                                              </IconComposer>
                                              <span className=\\"screen-reader-text\\">
                                                Search
                                              </span>
                                            </button>
                                          </div>
                                        </form>
                                      </Global.Footers.Parts.Search>
                                    </div>
                                  </FooterColumn>
                                  <FooterColumn position=\\"left\\">
                                    <div className=\\"app-footer__column app-footer__column--left\\">
                                      <FooterPartNavigation>
                                        <div>
                                          <nav className=\\"app-footer-navigation app-footer-navigation--mobile\\" aria-hidden=\\"true\\">
                                            <ul className=\\"app-footer-navigation__list\\">
                                              <li>
                                                <ul className=\\"app-footer-navigation__group\\">
                                                  <li className=\\"app-footer-navigation__item\\">
                                                    <FooterPartsNavigationLink className=\\"app-footer-navigation__link\\" item={{...}}>
                                                      <span role=\\"button\\" tabIndex=\\"0\\" onClick={[Function]} className=\\"app-footer-navigation__link\\">
                                                        <span className=\\"app-footer-navigation__link-text\\">
                                                          Log Out
                                                        </span>
                                                      </span>
                                                    </FooterPartsNavigationLink>
                                                  </li>
                                                  <li className=\\"app-footer-navigation__item\\">
                                                    <FooterPartsNavigationLink className=\\"app-footer-navigation__link\\" item={{...}}>
                                                      <Link to=\\"/projects/all\\" target={{...}} className=\\"app-footer-navigation__link\\">
                                                        <a target={{...}} className=\\"app-footer-navigation__link\\" onClick={[Function: onClick]} href=\\"/projects/all\\">
                                                          <span className=\\"app-footer-navigation__link-text\\">
                                                            Projects
                                                          </span>
                                                        </a>
                                                      </Link>
                                                    </FooterPartsNavigationLink>
                                                  </li>
                                                  <li className=\\"app-footer-navigation__item\\">
                                                    <FooterPartsNavigationLink className=\\"app-footer-navigation__link\\" item={{...}}>
                                                      <Link to=\\"/\\" target={{...}} className=\\"app-footer-navigation__link\\">
                                                        <a target={{...}} className=\\"app-footer-navigation__link\\" onClick={[Function: onClick]} href=\\"/\\">
                                                          <span className=\\"app-footer-navigation__link-text\\">
                                                            Home
                                                          </span>
                                                        </a>
                                                      </Link>
                                                    </FooterPartsNavigationLink>
                                                  </li>
                                                </ul>
                                              </li>
                                              <li>
                                                <ul className=\\"app-footer-navigation__group\\" />
                                              </li>
                                            </ul>
                                          </nav>
                                          <nav className=\\"app-footer-navigation app-footer-navigation--desktop\\" aria-label=\\"Footer Navigation\\">
                                            <ul className=\\"app-footer-navigation__list\\">
                                              <li>
                                                <ul className=\\"app-footer-navigation__group\\">
                                                  <li className=\\"app-footer-navigation__item\\">
                                                    <FooterPartsNavigationLink className=\\"app-footer-navigation__link\\" item={{...}}>
                                                      <span role=\\"button\\" tabIndex=\\"0\\" onClick={[Function]} className=\\"app-footer-navigation__link\\">
                                                        <span className=\\"app-footer-navigation__link-text\\">
                                                          Log Out
                                                        </span>
                                                      </span>
                                                    </FooterPartsNavigationLink>
                                                  </li>
                                                  <li className=\\"app-footer-navigation__item\\">
                                                    <FooterPartsNavigationLink className=\\"app-footer-navigation__link\\" item={{...}}>
                                                      <Link to=\\"/projects/all\\" target={{...}} className=\\"app-footer-navigation__link\\">
                                                        <a target={{...}} className=\\"app-footer-navigation__link\\" onClick={[Function: onClick]} href=\\"/projects/all\\">
                                                          <span className=\\"app-footer-navigation__link-text\\">
                                                            Projects
                                                          </span>
                                                        </a>
                                                      </Link>
                                                    </FooterPartsNavigationLink>
                                                  </li>
                                                  <li className=\\"app-footer-navigation__item\\">
                                                    <FooterPartsNavigationLink className=\\"app-footer-navigation__link\\" item={{...}}>
                                                      <Link to=\\"/\\" target={{...}} className=\\"app-footer-navigation__link\\">
                                                        <a target={{...}} className=\\"app-footer-navigation__link\\" onClick={[Function: onClick]} href=\\"/\\">
                                                          <span className=\\"app-footer-navigation__link-text\\">
                                                            Home
                                                          </span>
                                                        </a>
                                                      </Link>
                                                    </FooterPartsNavigationLink>
                                                  </li>
                                                </ul>
                                              </li>
                                              <li>
                                                <ul className=\\"app-footer-navigation__group\\" />
                                              </li>
                                            </ul>
                                          </nav>
                                        </div>
                                      </FooterPartNavigation>
                                    </div>
                                  </FooterColumn>
                                </div>
                              </div>
                            </FooterPartsColumns>
                            <Global.Footers.Parts.Copyright settings={{...}} type=\\"library\\">
                              <section className=\\"app-footer__copyright app-footer__copyright\\">
                                <div className=\\"container flush\\">
                                  <div className=\\"app-footer__colophone\\">
                                    <div dangerouslySetInnerHTML={{...}} />
                                  </div>
                                </div>
                              </section>
                            </Global.Footers.Parts.Copyright>
                            <Connect(withPluginReplacement('Global.Footers.Parts.PoweredBy)) type=\\"library\\" dull={false}>
                              <withPluginReplacement('Global.Footers.Parts.PoweredBy) type=\\"library\\" dull={false} dispatch={[Function]}>
                                <Global.Footers.Parts.PoweredBy type=\\"library\\" dull={false} dispatch={[Function]}>
                                  <a href=\\"http://manifoldapp.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\" className=\\"app-footer-powered-by app-footer-powered-by--with-hover\\">
                                    <section aria-hidden=\\"true\\">
                                      <div className=\\"container flush\\">
                                        <span className=\\"app-footer-powered-by__logo\\">
                                          <IconComposer icon=\\"manifoldLogo32\\" size=\\"default\\" iconClass=\\"app-footer-powered-by__logo-icon\\" fill=\\"currentColor\\" svgProps={{...}}>
                                            <ManifoldLogo svgProps={{...}} iconClass=\\"app-footer-powered-by__logo-icon svg-icon--manifoldLogo32\\" icon=\\"manifoldLogo32\\" size=\\"default\\" fill=\\"currentColor\\" stroke=\\"currentColor\\">
                                              <svg xmlns=\\"http://www.w3.org/2000/svg\\" className=\\"manicon-svg app-footer-powered-by__logo-icon svg-icon--manifoldLogo32\\" width={32} height={32} viewBox=\\"0 0 32 32\\" fill=\\"currentColor\\" aria-hidden={true}>
                                                <polygon fillRule=\\"evenodd\\" points=\\"29.995 10.305 27.851 10.983 24.581 9.72 29.995 8.007 29.995 6.182 21.983 8.718 18.712 7.454 29.995 3.884 29.995 2.059 16.114 6.45 2 1 2.036 12.73 15.131 8.587 15.131 10.886 2.036 15.029 2.036 16.854 15.131 12.71 15.131 15.009 2.036 19.152 2.036 20.977 15.131 16.834 15.131 19.132 2.036 23.275 2.036 25.1 15.131 20.958 15.131 23.256 2.036 27.399 2.036 29.224 15.989 24.809 30 30.22\\" />
                                              </svg>
                                            </ManifoldLogo>
                                          </IconComposer>
                                          <span className=\\"app-footer-powered-by__logo-text\\">
                                            <span className=\\"app-footer-powered-by__logo-text--neutral\\">
                                              Powered by
                                            </span>
                                             
                                            <span className=\\"app-footer-powered-by__logo-text--white\\">
                                              Manifold
                                            </span>
                                          </span>
                                        </span>
                                      </div>
                                    </section>
                                    <span className=\\"screen-reader-text\\">
                                      Learn more about the Manifold App
                                    </span>
                                  </a>
                                </Global.Footers.Parts.PoweredBy>
                              </withPluginReplacement('Global.Footers.Parts.PoweredBy)>
                            </Connect(withPluginReplacement('Global.Footers.Parts.PoweredBy))>
                          </footer>
                        </DefaultFooter>
                      </withPluginReplacement('DefaultFooter)>
                    </Connect(withPluginReplacement('DefaultFooter))>
                  </withRouter(Connect(withPluginReplacement('DefaultFooter)))>
                </FrontendFooter>
              </withPluginReplacement('FrontendFooter)>
            </Connect(withPluginReplacement('FrontendFooter))>
          </BodyClass>
        </SideEffect(BodyClass)>
      </BackendContainer>
    </Provider>
  </Router>
</MemoryRouter>"
`;
