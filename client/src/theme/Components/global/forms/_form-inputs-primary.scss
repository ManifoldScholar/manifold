// Default form styles across the board
// These do not require a wrapper

// <div> wrapper around form fields
.form-input {
  + .form-input {
    margin-top: 40px;
  }

  // Avoid styling checkbox/radio labels
  label:not(.checkbox):not(.radio) {
    @include formLabelPrimary;
    display: block;
    margin-bottom: 1em;
    color: $neutral50;

    .bg-neutral90 & {
      color: $neutral30;
    }

    &.has-instructions {
      margin-bottom: 0.5em;
    }
  }

  .instructions {
    @include templateCopy;
    display: block;
    margin-bottom: 1em;
    font-size: 17px;
    font-style: italic;
    color: $neutral50;
    text-transform: none;

    a:visited {
      color: inherit;
    }

    &.space-bottom {
      margin-bottom: 2em;
    }

  }

  input[type='text'], input[type='password'] {
    @include formInputPrimary;
    width: 100%;
    // Explicit height so that elements can line up
    height: 60px;
    // Declared in em as it should change with font size
    padding: 0.7em 1em;
    color: $neutral80;
    background-color: $neutral05;
    border: 1px solid transparent;
    border-radius: 0;
    outline: 0;
    transition: border-color $duration $timing;
    appearance: none;

    &::placeholder {
      color: $neutral50;
    }

    &:focus {
      border-color: $accentPrimary;
    }

    .bg-neutral05 & {
      background-color: $neutralWhite;
    }
  }

  textarea {
    @include formInputPrimary;
    width: 100%;
    padding: 1.2em 1.5em;
    color: $neutral70;
    resize: vertical;
    background-color: $neutral05;
    border: 1px solid transparent;
    outline: none;
    transition: border-color $duration $timing;

    &:focus {
      border-color: $accentPrimary;
    }

    .bg-neutral05 & {
      background-color: $neutralWhite;
    }

    &.dark-placeholder {
      color: $neutral80;

      &::placeholder {
        color: $neutral50;
      }
    }

    &.wide {
      padding: 0.7em 1em;
    }

    &.large {
      min-height: 250px;
    }
  }

  // Default button appearance
  .button-secondary {
    display: block;
    width: 100%;

    &.button-with-room {
      margin-top: 40px;
    }

    + .button-secondary {
      margin-top: 21px;
    }
  }

  // Error list
  .errors {
    display: block;
  }
}

.form-error {
  .error {
    @include formInputMessage;
    display: inline-block;
    margin-top: 15px;
    color: $sp40Tertiary;
  }
}

.form-error-grouped {
  margin-bottom: 15px;

  .dialog-box & {
    max-width: 80%;
  }

  .error {
    margin-top: 0;
  }
}

.form-select {
  position: relative;
  display: inline-block;
  // Default width
  width: 100%;

  .manicon-caret-down {
    position: absolute;
    top: 50%;
    right: 30px;
    margin-top: -7px;
    font-size: $type40;
    color: $neutral70;
    pointer-events: none;

    // Use native dropdown arrow in IE9
    .ie9 & {
      display: none;
    }
  }

  select {
    @include formInputSecondary;
    display: inline-block;
    width: 100%;
    height: 4.286em;
    padding: 1.286em 55px 1.286em 2.214em;
    margin: 0;
    color: $neutral70;
    cursor: pointer;
    background-color: $neutral05;
    border: 1px solid transparent;
    border-radius: 0;
    outline: none;
    transition: border-color $duration $timing;
    appearance: none;

    .bg-neutral05 & {
      background-color: $neutralWhite;
    }

    &:focus {
      border-color: $accentPrimary;
    }

    /* Undo the Firefox inner focus ring */
    &:focus:-moz-focusring {
      color: transparent;
    }

    &::-ms-expand {
      display: none;
    }
  }
}

.form-toggle {
  @include formLabelPrimary;
  position: relative;
  display: block;
  padding-left: 33px;
  margin-bottom: 0; // OD
  font-size: 13px;
  color: $neutral70;
  cursor: pointer;

  @include respond($break60) {
    font-size: 16px;
  }

  .bg-neutral90 & {
    color: $neutral50;
  }

  + .form-toggle {
    margin-top: 18px;
  }

  &.horizontal {
    display: inline-block;

    + .form-toggle {
      margin-top: 0;
      margin-left: 38px;
    }
  }

  &.annotated {
    @include formInputPrimary;
    color: $neutralOffBlack;
    text-transform: none;
  }

  input {
    position: absolute;
    z-index: -1;
    opacity: 0;

    &:focus ~ .toggle-indicator {
      background-color: $accentPrimaryLight;
    }
  }

  .toggle-indicator {
    position: absolute;
    left: 0;
    display: block;
    user-select: none;
    background-color: $neutral30;
    transition: background-color $duration $timing;

    .bg-neutral90 &, .form-callout & {
      background-color: $neutralWhite;
    }
  }

  &.checkbox {
    // To match indicator
    line-height: 1.563em;

    .toggle-indicator {
      width: 1.563em;
      height: 1.563em;
      padding: 0.438em 0.375em;

      // If check icon exists, hide it until selected
      .manicon-check {
        font-size: 0.688em;
        color: $neutralOffBlack;
        opacity: 0;
        transition: opacity $duration $timing;
      }
    }
  }

  &.radio {
    line-height: 1.25em;

    input[type='radio'] {
      &:focus ~ .toggle-indicator {
        @include focusOutline;
        outline-offset: 2px;
      }
    }

    .toggle-indicator {
      width: 1.25em;
      height: 1.25em;
      padding-top: 0.313em;
      text-align: center;
      border-radius: 100%;

      &::before {
        display: inline-block;
        width: 0.625em;
        height: 0.625em;
        vertical-align: top;
        content: '';
        background-color: $neutralOffBlack;
        border-radius: 100%;
        opacity: 0;
        transition: opacity $duration $timing;
      }
    }
  }

  .toggle-note {
    @include templateCopy;
    display: block;
    margin-top: 13px;
    font-size: 16px;
    font-style: italic;
    line-height: 1.375;
  }

  &.checked .toggle-indicator {
    // For checkboxes
    .manicon-check {
      opacity: 1;
    }

    // For radio buttons
    &::before {
      opacity: 1;
    }
  }
}

// Form Date Input
// --------------------------
.form-date {
  .input-day {
    margin-left: 15px;
  }

  .form-input {
    position: relative;
    display: inline-block;
    margin-left: 15px;
    vertical-align: bottom;

    .input-year {
      .form-secondary &, .form-primary & {
        display: inline;
        width: calc(91vw - 242px);
        min-width: 49px;
        max-width: 100px;

        @include respond($break40) {
          width: calc(91vw - 372px);
        }
      }
    }
  }
}

// Form Callout
// --------------------------
.form-callout {
  padding: 54px 30px;
  background-color: $neutral10;

  header {
    @include formLabelPrimary;
    padding-bottom: 53px;
    text-align: center;

    .manicon {
      display: block;
      padding-bottom: 26px;
      font-size: 33px;
      color: $neutral50;
    }
  }

  + .form-input {
    margin-top: 40px;
  }
}

// Form Column Mapping (used for mapping CSV, Spreadsheet assets)
// --------------------------
.form-column-map {
  @include respond($break80) {
    display: flex;
    margin-left: -35px;
  }

  .column {
    @include respond($break80) {
      padding-left: 35px;
    }

    + .column {
      margin-top: 30px;

      @include respond($break80) {
        margin-top: 0;
      }
    }
  }

  .column-mappable {
    flex-grow: 1;
    width: 100%;

    @include respond($break80) {
      width: calc(100% - 28vw);
    }

    @include respond($break85) {
      width: calc(100% - 29vw);
    }

    @include respond($break110) {
      width: calc(100% - 360px);
    }
  }

  // Group of draggable, available columns
  .available {
    max-height: 700px;
    padding: 0.8em;
    margin-top: 10px;
    overflow-y: scroll;
    font-size: 14px;
    user-select: none;
    background-color: $neutral85;

    @include respond($break50) {
      margin-top: 15px;
    }

    @include respond($break90) {
      font-size: 16px;
    }

    .form-column-listing + .form-column-listing {
      margin-top: 0.8em;
    }
  }

  // <ul> of dragging wells with labels
  .mappable {
    @include listUnstyled;
    max-height: 700px;
    padding: 0.8em;
    margin-top: 10px;
    overflow-y: scroll;
    font-size: 14px;
    background-color: $neutral85;

    @include respond($break50) {
      margin-top: 15px;
    }

    @include respond($break90) {
      font-size: 16px;
    }

    li + li {
      margin-top: calc(0.8em - 2px);
    }

    .mapping {
      @include clearfix;
      @include templateHead;
      position: relative;
      width: 100%;

      .column-label {
        position: relative;
        float: left;
        width: 50%;
        padding: 0.6em 0.8em;
        font-weight: $light;
        color: $neutral85;
        background-color: $neutral50;

        @include respond($break80) {
          width: calc(100% - 21vw);
        }

        @include respond($break85) {
          width: calc(100% - 23vw);
        }

        @include respond($break110) {
          width: calc(100% - 300px);
        }

        .truncate {
          display: block;
          max-width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }

        &::after {
          position: absolute;
          top: 0;
          right: -1em;
          z-index: 10; // Local z-index
          width: 0;
          height: 0;
          content: '';
          border-color: transparent transparent transparent $neutral50;
          border-style: solid;
          border-width: 1.2em 0 1.2em 1em;
        }
      }
    }

    .well {
      float: left;
      width: 50%;

      @include respond($break80) {
        width: 21vw;
      }

      @include respond($break85) {
        width: 23vw;
      }

      @include respond($break110) {
        width: 300px;
      }

      &::before {
        position: absolute;
        top: -2px;
        left: -2px;
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        pointer-events: none;
        content: '';
        background: transparent;
        border: 2px solid $neutral85;
      }

      &.drag-over::before {
        border-color: $accentPrimary;
      }

      &.matched {
        .placeholder {
          position: absolute;
        }
      }

      @keyframes cancelAppear {
        0% {
          visibility: hidden;
          opacity: 0;
        }

        1% {
          visibility: visible;
          opacity: 0;
        }

        100% {
          opacity: 1;
        }
      }

      // Show cancel buttons inside mappings
      .cancel {
        visibility: visible;
        opacity: 1;
        animation: cancelAppear $durationFast $timing 0s 1;
      }
    }

    .placeholder {
      top: 0;
      z-index: -1;
      display: block;
      padding: 0.6em 0.8em 0.6em 1.6em;
      color: $neutral80;
    }
  }
}

.form-column-listing {
  position: relative;

  .cancel {
    @include buttonUnstyled;
    position: absolute;
    top: 50%;
    right: 7px;
    width: 20px;
    height: 20px;
    margin-top: -9px;
    font-size: 8px;
    color: $neutralWhite;
    visibility: hidden;
    background-color: $neutral70;
    border-radius: 100%;
    opacity: 0;
    transition: opacity $duration $timing,
      visibility $duration $timing;

    @include respond($break90) {
      padding-top: 2px; // NP
    }

    &:hover {
      background-color: $sp40Tertiary;
    }
  }
}

// Declared globally so it can be used during drag
.form-column-available {
  position: relative;
  width: 100%;
  padding-left: calc(1em - 1px);
  list-style: none;
  outline: none;

  @include respond($break80) {
    width: 21vw;
  }

  @include respond($break85) {
    width: 23vw;
  }

  @include respond($break110) {
    width: 300px;
  }

  .text {
    @include templateHead;
    display: block;
    padding: 0.6em 0.8em;
    overflow: hidden;
    font-weight: $semibold;
    color: $neutral90;
    text-overflow: ellipsis;
    white-space: nowrap;
    background-color: $neutral20;
    transition: background-color $duration $timing;

    .matched & {
      padding-right: 40px;
    }
  }

  &:hover {
    .text {
      background-color: $neutral05;
    }

    &::before {
      border-color: $neutral05 transparent transparent transparent;
    }

    &::after {
      border-color: transparent transparent $neutral05 transparent;
    }
  }

  // Flag edge
  &::before {
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 0;
    content: '';
    border-color: $neutral20 transparent transparent transparent;
    border-style: solid;
    border-width: 1.2em 0 1.2em 1em;
    transition: border-color $duration $timing;
  }

  &::after {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 0;
    content: '';
    border-color: transparent transparent $neutral20 transparent;
    border-style: solid;
    border-width: 1.2em 0 1.2em 1em;
    transition: border-color $duration $timing;
  }
}
