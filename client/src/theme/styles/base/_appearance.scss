// Component Appearance
// --------------------

// Appearance prototypes/mixins contain primarily texture parameters: background-color, transparency, borders, etc.
// as well as some minor, internal structural properties where abstraction isn't required (to prevent over-abstracting)

// They may contain:
// Nested classes/elements with other structural or textural properties

// Appearance blocks should not be used to for prototypes that declare only typographical styles, but
// they may include typographical styles/modifications to base type mixins where abstraction isn't required

// Contents
// --------------------------
// - Interactions
// - Utilities
// - Layout
// - Type
// - Images
// - Article Lists
// - Navigation Lists
// - Buttons/Links
// - Browser UI
// - Tables

// Interactions
// --------------------
@mixin defaultFocusStyle {
  outline: solid 2px;
}

@mixin focusVisible($property: 'outline', $value: 'solid 2px') {
  &:focus:not(:focus-visible) {
    outline: 0;
  }

  &:focus-visible {
    #{$property}: #{$value};
  }
}

@mixin focusVisibleOutline($color: var(--default-focus-color, $accentPrimary)) {
  @include focusVisible('outline', 'solid 2px #{$color}');
}

@mixin focusVisibleFill($color: $accentPrimary) {
  @include focusVisible('background-color', $color);

  &:focus-visible {
    outline: 0;
  }
}

.browse, .reader.scheme-light {
  --default-focus-color: #{$neutral80};
}

.backend, .reader.scheme-dark, .bg-neutral90, .bg-neutral95 {
  --default-focus-color: #{$accentPrimary};
}


// Utility
// --------------------------------------------------------
.fake-link {
  text-decoration: underline;
  cursor: pointer;
}

.invisible {
  visibility: hidden;
}

@mixin screenReaderText {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0;
}
// Layout
// --------------------------------------------------------
// Apply to a pseudo element to get a tail/triangle pointing up
@mixin tailUp($color: $neutral10, $height: 17px) {
  width: 0;
  height: 0;
  border-color: transparent transparent $color;
  border-style: solid;
  border-width: 0 15.5px $height;
}

// Background color utility classes
.bg-accent-primary {
  background-color: $accentPrimary;
}

.bg-accent-secondary {
  background-color: $accentPrimaryOffWhite;
}

.bg-neutral05 {
  background-color: $neutral05;
}

.bg-neutral90 {
  background-color: $neutral90;
}

.bg-neutral95 {
  background-color: $neutral95;
}

@mixin boxShadow($x: 10px, $y: 31px, $blur: 44px, $spread: 2px, $color: $neutralBlack, $opacity: 0.13) {
  box-shadow: $x $y $blur $spread rgba($color, $opacity);
}


// SVG Icons
// --------------------------------------------------------
.manicon-svg {
  display: inline-block;
  vertical-align: middle;
}

// Buttons
// --------------------------------------------------------
@mixin buttonUnstyled {
  padding: 0;
  cursor: pointer;
  background: transparent;
  border: 0;
  // iOS applies this by default,
  // so start with 0
  border-radius: 0;
  outline: none;
  appearance: none;
}

@mixin buttonRounded {
  cursor: pointer;
  border-radius: 7px;
}

@mixin buttonAvatar($size: 36, $color: $neutral70) {
  @include buttonUnstyled;
  // Default size from browse view that may be
  // changed in scope
  width: #{$size}px;
  height: #{$size}px;
  overflow: hidden;
  color: $color;
  text-align: center;
  border-radius: 100%;

  &__icon {
    width: 100%;
    height: 100%;
  }

  .avatar-image {
    width: 100%;
  }
}

@mixin buttonClose {
  @include buttonUnstyled;
  @include templateHead;
  font-size: 15px;
  line-height: 21px;

  @include respond($break65) {
    font-size: 18px;
    line-height: 31px;
  }
}

@mixin blockLabel {
  @include utilityPrimary;
  display: flex;
  align-items: center;
  padding: 8px 14px;
  font-size: 11px;
  hyphens: none;
  color: $accentPrimaryDark;
  text-align: center;
  background-color: $neutral10;

  &.secondary {
    color: $sp40Tertiary;
  }

  &.tertiary {
    color: $neutral75;
  }

  + .marker {
    margin-left: 8px;
  }
}

@mixin blockLabelRound {
  @include utilityPrimary;
  display: inline-block;
  padding: 0.333em 8px;
  font-size: 12px;
  font-weight: $semibold;
  color: $neutralWhite;
  letter-spacing: 0.075em;
  background-color: $sp20Primary;
  border-radius: 3px;
}

// Browser UI
// --------------------------------------------------------
// Styled select
// based on: https://github.com/mdo/wtf-forms/blob/master/wtf-forms.css
@mixin unstyledSelect {
  cursor: pointer;
  // Styled select prototype,
  // Ready for restyling

  // Must be applied to a <select>
  background: transparent;
  border-radius: 0;
  outline: 0;
  -webkit-appearance: none; // stylelint-disable-line
  appearance: none; // stylelint-disable-line
  &:focus-visible:-moz-focusring {
    color: transparent;
    // Add color back to text
    text-shadow: 0 0 0 $neutral80;
  }

  &::-ms-expand {
    display: none;
  }
}

@mixin selectPrimary {
  position: relative;
  display: inline-block;
  color: $neutral80;

  select {
    @include utilityPrimary;
    @include unstyledSelect;
    display: inline-block;
    width: 100%;
    padding: 9px 13px 11px;
    margin: 0;
    font-size: $type40;
    line-height: $baseLineHeight;
    border: 2px solid $neutral40;

    &:focus-visible {
      border-color: $accentPrimary;
    }
  }
}

// Styled Checkbox (also from wtf forms)
// Should be applied to a label with an input type="checkbox" inside
@mixin checkboxStyled {
  position: relative;
  display: inline-block;
  cursor: pointer;

  // Hide actual input
  input {
    position: absolute;
    // Relative negative z-index
    z-index: -1;
    opacity: 0;
  }
}


// Inputs/Textareas
@mixin inputSecondary {
  @include templateCopy;
  padding: 7px 10px;
  font-size: $type70;
  color: $accentPrimary;
  background: transparent;
  border: 2px solid $accentPrimary;
  outline: none;

  &:focus-visible {
    border-color: $neutralWhite;
  }
}

@mixin inputLabelPrimary {
  @include templateHead;
  display: block;
  margin-bottom: 12px;
  font-size: $type30;
  color: $neutral50;
  text-transform: uppercase;
}

@mixin inputPrimary {
  @include templateHead;
  padding: 8px 13px 12px;
  font-size: $type70;
  color: $neutralOffBlack;
  background-color: $neutralWhite;
  border: 3px solid $neutralWhite;
  outline: none;

  &:focus-visible {
    border-color: $accentPrimary;
  }
}

@mixin inputSecondary {
  @include templateCopy;
  padding: 7px 10px;
  font-size: $type70;
  color: $accentPrimary;
  background: transparent;
  border: 3px solid $accentPrimary;
  outline: none;

  &:focus-visible {
    border-color: $neutralWhite;
  }
}

// Dark input with border
@mixin inputQuaternary {
  @include templateHead;
  padding: 0.438em 1.125em 0.563em;
  color: $neutral40;
  background: transparent;
  border: 1px solid $neutral80;
  border-radius: 0;
  appearance: none;
  outline: none;

  &::placeholder {
    color: $neutral75;
  }

  &:focus-visible {
    outline: none;

    &::placeholder {
      color: $accentPrimary;
    }
  }
}

// Dark panel with rounded corners
// used widely on the backend
@mixin panelRounded {
  background-color: $neutral95;
  border-radius: $panelRoundedRadius;
}

// Light panel with rounded corners
@mixin panelRoundedLight {
  background-color: $neutral05;
  border-radius: 8px;
}

@mixin roundedHeader {
  @include panelRounded;
  display: table;
  width: 100%;
  padding: 0.75em 1.5em 0.875em;
  margin-bottom: 20px;
  font-size: 16px;
  background-color: $neutral95;

  // if using a rounded label, pad any of its siblings
  ~ :not(.full-width) {
    padding-right: 5px;
    padding-left: 5px;

    @include respond($break75) {
      padding-right: 24px;
      padding-left: 24px;
    }
  }
}

@mixin roundedFormHeader {
  @include roundedHeader;

  h2, span {
    @include utilityPrimary;
    display: table-cell;
    width: 100%;
    font-size: 14px;
    font-weight: $semibold;
    color: $accentPrimary;
    letter-spacing: 0.1em;
  }
}

// Shared Component Styles
// --------------------------------------------------------
// Project List Item styles, used in global .project-list class,
// plus draggable Project Collection items, which aren't nested
@mixin projectListItem {
  display: flex;
  padding: 15px 0;
  color: inherit;
  text-decoration: none;

  .cover {
    position: relative;
    min-width: 50px;
    max-width: 50px;
    height: auto;
    padding-top: 0;
    margin-bottom: 0;
    line-height: 1;

    + .meta {
      padding-left: 15px;
    }

    > img, > svg {
      width: 50px;
      height: auto;
    }

    > img {
      border: 1px solid transparent;
      transition: border $duration $timing;
    }

    > svg {
      max-height: 50px;
      overflow: visible;
      transition: fill $duration $timing;
    }
  }

  .meta {
    display: flex;
    flex-flow: column;
    flex-grow: 1;
    width: 100%;
    padding-right: 20px;
    vertical-align: top;
  }

  .name {
    margin: 0;
    font-size: 16px;
    font-weight: $semibold;
    hyphens: none;
    line-height: 1.188;
    white-space: normal;
    transition: color $duration $timing;

    .title-text {
      @include templateHead;
      display: inline-block;
    }

    .subtitle {
      @include subtitlePrimary;
      display: block;
      padding-top: 0.143em;
      font-size: 14px;
      color: $neutral40;
      transition: color $duration $timing;

      &:empty {
        display: none;
      }
    }
  }

  .block-label {
    @include blockLabelRound;
    padding-right: 5px;
    padding-left: 5px;
    margin: 2px 0 5px 9px;
    font-size: 9px;
    vertical-align: middle;
  }

  .relations-list {
    @include templateCopy;
    hyphens: none;
    line-height: 1.25;
    transition: color $duration $timing;
  }

  .date {
    @include templateCopy;
    font-size: 14px;
    font-style: italic;
    color: $neutral75;


    @include respond($break75) {
      font-size: 16px;
    }
  }
}

@mixin projectGridItem {
  @include projectListItem;

  @include respond($break75) {
    flex-direction: column;
    height: 100%;
    padding: 2.105vw;

    .cover {
      width: 100%;
      min-width: 100%;
      margin-bottom: 16px;

      + .meta {
        padding-left: 0;
      }

      > img, > svg {
        width: auto;
        height: 100%;
      }
    }

    .meta {
      padding-right: 0;
    }

    .name {
      .title-text {
        display: block;
      }

      .subtitle {
        padding-top: 0.389em;
      }
    }

    .block-label {
      padding-right: 8px;
      padding-left: 8px;
      margin: 10px 0 0;
      font-size: 12px;
    }
  }

  @include respond($break120) {
    padding: 25px;
  }
}
