// Component Appearance
// --------------------

// Appearance prototypes/mixins contain primarily texture parameters: background-color, transparency, borders, etc.
// as well as some minor, internal structural properties where abstraction isn't required (to prevent over-abstracting)

// They may contain:
// Nested classes/elements with other structural or textural properties

// Appearance blocks should not be used to for prototypes that declare only typographical styles, but
// they may include typographical styles/modifications to base type mixins where abstraction isn't required

// Contents
// --------------------------
// - Interactions
// - Utilities
// - Layout
// - Type
// - Images
// - Article Lists
// - Navigation Lists
// - Buttons/Links
// - Browser UI
// - Tables

// Accent Colors
// --------------------

$accentPrimary: var(--accent-primary, #{$_accentPrimary});
$accentPrimaryDark: var(--accent-primary-dark, #{$_accentPrimaryDark});
$accentPrimaryMedium: var(--accent-primary-medium, #{$_accentPrimaryMedium});
$accentPrimaryLight: var(--accent-primary-light, #{$_accentPrimaryLight});
$accentPrimaryDull: var(--accent-primary-dull, #{$_accentPrimaryDull});
$accentPrimaryPale: var(--accent-primary-pale, #{$_accentPrimaryPale});
$accentPrimaryExtraPale: var(
  --accent-primary-extra-pale,
  #{$_accentPrimaryExtraPale}
);
$accentPrimaryOffWhite: var(
  --accent-primary-off-white,
  #{$_accentPrimaryOffWhite}
);
$accentInteractionLight: var(
  --accent-interaction-light,
  #{$_accentInteractionLight}
);
$accentInteractionDark: var(
  --accent-interaction-dark,
  #{$_accentInteractionDark}
);
$headerBackgroundColor: var(--header-background-color, #{$neutralWhite});
$headerBackgroundColorLight: var(--header-background-color-light, #{$neutral05});
$headerForegroundColor: var(--header-foreground-color, #{$neutralTextDark});
$headerForegroundActiveColor: var(
  --header-foreground-active-color,
  #{$neutral90}
);
$headerForegroundHoverColor: var(
  --header-foreground-hover-color,
  #{$_accentInteractionLight}
);
$analyticsHighlightColor: var(
  --analytics-highlight-color,
  #{$_analyticsHighlightColor}
);
$analyticsHighlightColorPale: var(
  --analytics-highlight-color-pale,
  #{$_analyticsHighlightColorPale}
);

// Light & Dark Client Themes
// --------------------
$defaultColor: var(--default-color, #{$neutralTextDark});
$defaultFocusColor: var(--default-focus-color, #{$accentInteractionLight});
$defaultHoverColor: var(--default-hover-color, #{$accentInteractionLight});
$defaultErrorColor: var(--default-error-color, #{$spErrorLight});
$defaultWarningColor: var(--default-warning-color, #{$spWarningLight});
$defaultNoticeColor: var(--default-notice-color, #{$spNoticeLight});

body {
  --accent-primary: #{$_accentPrimary};
  --accent-primary-dark: #{$_accentPrimaryDark};
  --accent-primary-medium: #{$_accentPrimaryMedium};
  --accent-primary-light: #{$_accentPrimaryLight};
  --accent-primary-dull: #{$_accentPrimaryDull};
  --accent-primary-pale: #{$_accentPrimaryPale};
  --accent-primary-extra-pale: #{$_accentPrimaryExtraPale};
  --accent-primary-off-white: #{$_accentPrimaryOffWhite};
  --accent-interaction-light: #{$_accentInteractionLight};
  --accent-interaction-dark: #{$_accentInteractionDark};
  --analytics-highlight-color: #{$_analyticsHighlightColor};
  --analytics-highlight-color-pale: #{$_analyticsHighlightColorPale};
  --box-border-radius: #{$panelRoundedRadius};
  --input-placeholder-color: #{$neutralUILight};
  --input-border-color: #{$neutralUIDullLight};

  color: $defaultColor;
}

.browse,
.scheme-light,
.bg-white {
  --default-color: #{$neutralTextDark};
  --default-strong-color: #{$neutralTextExtraDark};
  --default-medium-color: #{$neutral80};
  --default-weak-color: #{$neutralUIDullLight};
  --default-highlight-color: #{$accentInteractionDark};
  --default-focus-color: #{$neutralUIDark};
  --default-hover-color: #{$accentInteractionDark};
  --default-error-color: #{$spErrorDark};
  --default-warning-color: #{$spWarningDark};
  --default-notice-color: #{$spNoticeDark};
  --default-bg-color: #{$neutralWhite};
  --inactive-switch-bg-color: #{$neutral70};
  --active-switch-bg-color: #17986D;
  --switch-toggle-color: #{$neutral05};
  --box-bg-color: #{$neutral05};
  --box-weak-bg-color: #{$neutral05};
  --box-medium-bg-color: #{$neutral10};
  --box-strong-bg-color: #{$neutral20};
  --box-x-strong-bg-color: #{$neutral20};
  --dropzone-bg-color: #{$neutral30};
  --select-bg-color: transparent;
  --select-border-color: currentColor;
  --textarea-bg-color: #{$neutralWhite};
  --textarea-border-color: transparent;
  --textarea-font-family: #{$fontStackSans};
  --button-dull-bg-color: #{$neutral30};
  --button-tertiary-bg-color: #{$accentPrimaryPale};
  --button-tertiary-bg-hover-color: #{$accentPrimaryLight};
  --reader-color: var(--default-strong-color);

  color: var(--default-color);
}

.backend, .drawer--backend, .scheme-dark, .bg-neutral90, .bg-neutral95 {
  --default-color: #{$neutralTextLight};
  --default-strong-color: #{$neutralTextExtraLight};
  --default-medium-color: #{$neutral20};
  --default-weak-color: #{$neutralUIDullDark};
  --default-highlight-color: #{$accentInteractionLight};
  --default-focus-color: #{$accentInteractionLight};
  --default-hover-color: #{$accentInteractionLight};
  --default-error-color: #{$spErrorLight};
  --default-warning-color: #{$spWarningLight};
  --default-notice-color: #{$spNoticeLight};
  --default-bg-color: #{$neutral90};
  --inactive-switch-bg-color: #{$neutral70};
  --active-switch-bg-color: #{$accentInteractionLight};
  --switch-toggle-color: #{$neutral90};
  --box-bg-color: #{$neutral95};
  --box-weak-bg-color: #{$neutral85};
  --box-medium-bg-color: #{$neutral90};
  --box-strong-bg-color: #{$neutral90};
  --box-x-strong-bg-color: #{$neutral80};
  --dropzone-bg-color: #{lighten($neutral90, 5%)};
  --select-bg-color: #{$neutral90};
  --select-border-color: #{$neutral45};
  --textarea-bg-color: transparent;
  --textarea-border-color: #{$neutralUIDullLight};
  --textarea-font-family: #{$fontStackSerif};
  --button-dull-bg-color: #{$neutral10};
  --button-tertiary-bg-color: #{$accentPrimary};
  --button-tertiary-bg-hover-color: #{$accentPrimaryPale};
  --reader-color: #{$neutralWhite};

  color: var(--default-color);

  input[type='text'],
  input[type='email'],
  input[type='password'],
  select {
    color: var(--default-strong-color);
  }
}

// Interactions
// --------------------
@mixin defaultFocusStyle {
  outline: solid 2px;
}

@mixin defaultHoverStyle {
  color: $defaultHoverColor;
}

@mixin defaultFocusState($property: 'outline', $value: 'solid 2px') {
  &:focus:not(:focus-visible) {
    outline: 0;
  }

  &:focus-visible {
    #{$property}: #{$value};
  }
}

@mixin defaultHoverState($property: 'color', $value: $defaultHoverColor) {
  transition: #{$property} $duration $timing;

  &:hover {
    #{$property}: #{$value};
  }
}

@mixin outlineOnFocusVisible($color: $defaultFocusColor) {
  @include defaultFocusState('outline', 'solid 2px #{$color}');
}

@mixin fillOnFocusVisible($color: $accentPrimary) {
  @include defaultFocusState('background-color', $color);

  &:focus-visible {
    outline: 0;
  }
}

@mixin fillOnHover($color: $defaultHoverColor) {
  @include defaultHoverState('background-color', $color);
}

// Utility
// --------------------------------------------------------
.fake-link {
  text-decoration: underline;
  cursor: pointer;
}

.invisible {
  visibility: hidden;
}

@mixin screenReaderText {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0;
}
// Layout
// --------------------------------------------------------
// Apply to a pseudo element to get a tail/triangle pointing up
@mixin tailUp($color: $neutral10, $height: 17px) {
  width: 0;
  height: 0;
  border-color: transparent transparent $color;
  border-style: solid;
  border-width: 0 15.5px $height;
}

// Background color utility classes
.bg-white {
  background-color: $neutralWhite;
}

.bg-accent-primary {
  background-color: $accentPrimary;
}

.bg-accent-secondary {
  background-color: $accentPrimaryOffWhite;
}

.bg-neutral05 {
  background-color: $neutral05;
}

.bg-neutral90 {
  background-color: $neutral90;
}

.bg-neutral95 {
  background-color: $neutral95;
}

@mixin boxShadow(
  $x: 10px,
  $y: 31px,
  $blur: 44px,
  $spread: 2px,
  $color: $neutralBlack,
  $opacity: 0.13
) {
  box-shadow: $x $y $blur $spread rgba($color, $opacity);
}

// SVG Icons
// --------------------------------------------------------
.manicon-svg {
  display: inline-block;
  vertical-align: middle;
}

// Buttons
// --------------------------------------------------------
@mixin buttonUnstyled {
  padding: 0;
  cursor: pointer;
  background: transparent;
  border: 0;
  // iOS applies this by default,
  // so start with 0
  border-radius: 0;
  outline: none;
  appearance: none;
}

@mixin buttonRounded {
  cursor: pointer;
  border-radius: 7px;
}

@mixin buttonAvatar($size: 36, $color: inherit) {
  @include buttonUnstyled;
  // Default size from browse view that may be
  // changed in scope
  width: #{$size}px;
  height: #{$size}px;
  overflow: hidden;
  color: $color;
  text-align: center;
  border-radius: 100%;

  &__icon {
    width: 100%;
    height: 100%;
  }

  .avatar-image {
    width: 100%;
  }
}

@mixin marker {
  @include templateHead;
  display: flex;
  align-items: center;
  padding: 3px 10px 5px;
  font-size: 14px;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  background-color: var(--box-bg-color);
  border-radius: 12px;
}

@mixin blockLabelRound {
  @include utilityPrimary;
  display: inline-block;
  padding: 0.333em 8px;
  font-size: 12px;
  font-weight: $semibold;
  color: $neutralWhite;
  background-color: $defaultNoticeColor;
  border-radius: 3px;
}

// Browser UI
// --------------------------------------------------------
// Styled select
// based on: https://github.com/mdo/wtf-forms/blob/master/wtf-forms.css
@mixin unstyledSelect {
  cursor: pointer;
  // Styled select prototype,
  // Ready for restyling

  // Must be applied to a <select>
  background: transparent;
  border-radius: 0;
  outline: 0;
  -webkit-appearance: none; // stylelint-disable-line
  appearance: none; // stylelint-disable-line
  &:focus-visible:-moz-focusring {
    color: transparent;
    // Add color back to text
    text-shadow: 0 0 0 var(--default-medium-color);
  }

  &::-ms-expand {
    display: none;
  }
}

@mixin selectPrimary {
  position: relative;
  display: inline-block;
  color: var(--default-medium-color);

  select {
    @include utilityPrimary;
    @include unstyledSelect;
    display: inline-block;
    width: 100%;
    padding: 9px 13px 11px;
    margin: 0;
    font-size: $type40;
    line-height: $baseLineHeight;
    border: 2px solid $neutral40;

    &:focus-visible {
      border-color: $accentPrimary;
    }
  }
}

// Styled Checkbox (also from wtf forms)
// Should be applied to a label with an input type="checkbox" inside
@mixin checkboxStyled {
  position: relative;
  display: inline-block;
  cursor: pointer;

  // Hide actual input
  input {
    position: absolute;
    // Relative negative z-index
    z-index: -1;
    opacity: 0;
  }
}

// Inputs/Textareas
@mixin inputSecondary {
  @include templateCopy;
  padding: 7px 10px;
  font-size: $type70;
  color: $accentPrimary;
  background: transparent;
  border: 2px solid $accentPrimary;
  outline: none;

  &:focus-visible {
    border-color: $neutralWhite;
  }
}

@mixin inputLabelPrimary {
  @include templateHead;
  display: block;
  margin-bottom: 12px;
  font-size: $type30;
  color: $neutral50;
  text-transform: uppercase;
}

@mixin inputPrimary {
  @include templateHead;
  padding: 8px 13px 12px;
  font-size: $type70;
  color: $neutralOffBlack;
  background-color: $neutralWhite;
  border: 3px solid $neutralWhite;
  outline: none;

  &:focus-visible {
    border-color: $accentPrimary;
  }
}

@mixin inputSecondary {
  @include templateCopy;
  padding: 7px 10px;
  font-size: $type70;
  color: $accentPrimary;
  background: transparent;
  border: 3px solid $accentPrimary;
  outline: none;

  &:focus-visible {
    border-color: $neutralWhite;
  }
}

// Dark input with border
@mixin inputQuaternary {
  @include templateHead;
  padding: 0.438em 1.125em 0.563em;
  background: transparent;
  border: 1px solid $neutralUILight;
  border-radius: 0;
  appearance: none;
  outline: none;

  &:focus-visible {
    outline: none;

    &::placeholder {
      color: $accentPrimary;
    }
  }
}

@mixin panelRounded {
  background-color: var(--box-bg-color);
  border-radius: var(--box-border-radius);
}

@mixin panelRoundedDark {
  @include panelRounded;
  color: $neutralUILight;
}

@mixin roundedHeader {
  @include panelRoundedDark;
  display: table;
  width: 100%;
  padding: 0.75em 1.5em 0.875em;
  margin-bottom: 20px;
  font-size: 16px;
  background-color: $neutral95;

  // if using a rounded label, pad any of its siblings
  ~ :not(.full-width) {
    padding-right: min(3.158vw, 24px);
    padding-left: min(3.158vw, 24px);
  }
}

@mixin roundedFormHeader {
  --label-color: #{$accentPrimary};

  @include roundedHeader;

  .browse &,
  .reader & {
    --label-color: #{$neutralTextDark};
  }

  > * {
    @include utilityPrimary;
    display: table-cell;
    width: 100%;
    font-size: 14px;
    font-weight: $semibold;
    color: var(--label-color);
    letter-spacing: 0.1em;
  }
}

// Shared Component Styles
// --------------------------------------------------------
// Project List Item styles, used in global .project-list class,
// plus draggable Project Collection items, which aren't nested
@mixin projectListItem {
  display: flex;
  padding: 15px 0;
  color: inherit;
  text-decoration: none;

  .cover {
    position: relative;
    min-width: 50px;
    max-width: 50px;
    height: auto;
    padding-top: 0;
    margin-bottom: 0;
    line-height: 1;

    + .meta {
      padding-left: 15px;
    }

    > img,
    > svg {
      width: 50px;
      height: auto;
    }

    > img {
      border: 1px solid transparent;
      transition: border $duration $timing;
    }

    > svg {
      max-height: 50px;
      overflow: visible;
      transition: fill $duration $timing;
    }
  }

  .meta {
    display: flex;
    flex-flow: column;
    flex-grow: 1;
    width: 100%;
    padding-right: 20px;
    vertical-align: top;
  }

  .name {
    margin: 0;
    font-size: 16px;
    font-weight: $semibold;
    hyphens: none;
    line-height: 1.188;
    white-space: normal;
    transition: color $duration $timing;

    .title-text {
      @include templateHead;
      display: inline-block;
    }

    .subtitle {
      @include subtitlePrimary;
      display: block;
      padding-top: 0.143em;
      font-size: 14px;
      color: $neutral40;
      transition: color $duration $timing;

      &:empty {
        display: none;
      }
    }
  }

  .block-label {
    @include blockLabelRound;
    padding-right: 5px;
    padding-left: 5px;
    margin: 2px 0 5px 9px;
    font-size: 9px;
    vertical-align: middle;
  }

  .relations-list {
    @include templateCopy;
    hyphens: none;
    line-height: 1.25;
    transition: color $duration $timing;
  }

  .date {
    @include templateCopy;
    font-size: 14px;
    font-style: italic;

    @include respond($break75) {
      font-size: 16px;
    }
  }
}

@mixin projectGridItem {
  @include projectListItem;

  @include respond($break75) {
    flex-direction: column;
    height: 100%;
    padding: 2.105vw;

    .cover {
      width: 100%;
      min-width: 100%;
      margin-bottom: 16px;

      + .meta {
        padding-left: 0;
      }

      > img,
      > svg {
        width: auto;
        height: 100%;
      }
    }

    .meta {
      padding-right: 0;
    }

    .name {
      .title-text {
        display: block;
      }

      .subtitle {
        padding-top: 0.389em;
      }
    }

    .block-label {
      padding-right: 8px;
      padding-left: 8px;
      margin: 10px 0 0;
      font-size: 12px;
    }
  }

  @include respond($break120) {
    padding: 25px;
  }
}

// Drag and Drop styles
@mixin dropzone($_margin: 9px, $_active-selector: '--show-dropzone') {
  @include panelRounded;
  display: block;
  padding: 0 $_margin;
  margin-right: -$_margin;
  margin-left: -$_margin;
  background-color: transparent;
  transition: background-color 0.4s ease;

  &#{$_active-selector} {
    background-color: var(--dropzone-bg-color, #{$neutral30});
  }
}

@mixin draggable {
  @include panelRoundedDark;
  cursor: move; // fallback for older browsers
  cursor: grab;
  transition: color $duration $timing, background-color $duration $timing,
    border-color $duration $timing;
}

@mixin dragging {
  @include boxShadow(0, 31px, 26px, -13px, $neutralBlack, 0.33);
}
