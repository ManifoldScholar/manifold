// Component Typography
// --------------------

// Template typography mixins/prototypes that can be extended into template/content classes.
// Typographic classes can contain some structural (not textural) design where it does not require abstraction,
// and textural classes dealing with typography (color, text-decoration, pseudo elements that modify text, etc).

// They may contain:
// Nested classes or elements with typographic/basic structural modifications only, for instance a header
// with <span> classes inside.

// These should not contain classes/prototypes to handle icon fonts or icon appearance.

// Contents
// --------------------------
// - Utilities
// - Variables
// - Copy
// - Headings
// - Subheadings
// - Signage/Utility/Special
// - Labels
// - Lists
// - Forms


// Headings
// --------------------------------------------------------
@mixin headingPrimaryFontSizing {
  font-size: 22px;

  @include respond($break60) {
    font-size: 26px;
  }
}

@mixin headingPrimary {
  @include templateHead;
  @include headingPrimaryFontSizing;
  margin-top: 0;
  // Default margin
  margin-bottom: 1.2em;
  font-weight: $medium;
  hyphens: none;
  line-height: 1.32;
}

.heading-primary {
  @include headingPrimary;
}

@mixin headingSecondary {

  @include headingPrimary;
  font-size: 20px;

  @include respond($break60) {
    font-size: 22px;
  }
}

.heading-secondary {
  @include headingSecondary;
}

@mixin headingTertiary {
  @include templateHead;
  margin-top: 0;
  font-size: 16px;
  font-weight: $semibold;
}

@mixin headingQuaternary {
  @include templateHead;
  margin: 0;
  font-size: 25px;

  @include respond($break70) {
    font-size: 28px;
  }

  @include respond($break90) {
    font-size: 30px;
  }
}

.heading-quaternary {
  @include headingQuaternary;
}


// Utility (Browser UI, buttons, etc.)
// --------------------------------------------------------
@mixin utilityPrimary {
  @include templateHead;
  // This is the base size, there may be variation from
  // component to component
  font-size: 16px;
  font-weight: $semibold;
  text-transform: uppercase;
  letter-spacing: 0.075em;
}

.utility-primary {
  @include utilityPrimary;
}

@mixin resetWordWrap {
  hyphens: none;
  word-wrap: normal;
  overflow-wrap: normal;
}

@mixin textTruncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}


// Labels
// --------------------------------------------------------
@mixin subtitlePrimary {
  @include templateCopy;
  font-style: italic;
  font-weight: $regular; // OD
  letter-spacing: 0.031em;
}

@mixin formLabelPrimary {
  @include templateHead;
  font-size: 12px;
  font-weight: $semibold;
  text-transform: uppercase;
  letter-spacing: 0.125em;
}


// Forms
// --------------------------------------------------------
@mixin formInputPrimary {
  @include templateHead;
  font-size: 17px;
  font-weight: $regular;
  letter-spacing: 0.015em;
  border-radius: 0;
  appearance: none;

  @include respond($break60) {
    font-size: 20px;
  }
}

@mixin formInputSecondary {
  @include templateHead;
  font-size: $type40;
  text-transform: uppercase;
  letter-spacing: 0.075em;
  border-radius: 0;
  appearance: none;
}

@mixin formInputMessage {
  @include templateHead;
  font-size: $type50;
  font-weight: $semibold;
  letter-spacing: 0.075em;
}

@mixin formInstructions {
  @include templateCopy;
  font-size: $type50;
  font-style: italic;
}

// Overlay
// --------------------------------------------------------
@mixin overlayCopy {
  @include templateCopy;
  font-size: $type60;
  color: $neutral30;

  a {
    color: $neutral30;
  }
}

// Reader Font Size classes
// These classes apply responsive font-sizes to reader
// --------------------------------------------------------
// These are generated from this nested list (of lists)
// To add another, simply ensure that react can increment by another value
// and then add another nested list here.
$readerFontSizes: (
  (12px, 13px),
  (14px, 16px),
  (16px, 20px),
  (18px, 22px),
  (20px, 26px),
  (24px, 32px),
  (28px, 38px)
);

@for $i from 1 through length($readerFontSizes) {
  .font-size-#{$i - 1} {
    font-size: nth(nth($readerFontSizes, $i), 1);

    @include respond($break40) {
      font-size: nth(nth($readerFontSizes, $i), 2);
    }
  }
}
