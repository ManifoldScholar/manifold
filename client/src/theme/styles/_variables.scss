// Variables
//----------

// Colors
// --------------------------------------------------------
// Neutral Colors
$neutralWhite: #ffffff;
$neutralBlack: #000000;

// Off Whites
$neutral05: #f7f7f7;
$neutral10: #ececec;
$neutral20: #e6e6e6;
$neutral30: #d6d6d6;
$neutral40: #c3c3c3;
$neutral45: #b3b3b3;
$neutral50: #9a9a9a;
$neutral70: #828282;
$neutral75: #696969;
$neutral80: #555555;
$neutral85: #424242;
$neutral90: #363636;
$neutral95: #2e2e2e;
$neutral100: #262626;
$neutral110: #222222;

// ---> For SVG interpolation
$neutral40hex: str-slice(#{$neutral40}, 2);

// Separated as this is often used for base template elements (like plain text)
$neutralOffWhite: $neutral05;
$neutralOffBlack: $neutral90;

$_accentPrimary: #52e3ac !default;
$_accentPrimaryDark: darken(desaturate($_accentPrimary, 20.97), 18.82) !default; // #34a178
$_accentPrimaryMedium: darken(desaturate($_accentPrimary, 20.94), 11.57) !default; // #3dbd8c
$_accentPrimaryLight: lighten(saturate($_accentPrimary, 0.36), 8.04) !default; // #75e9bd
$_accentPrimaryDull: lighten(desaturate(adjust-hue($_accentPrimary, -3), 14.56), 20) !default; // #b1ead2
$_accentPrimaryPale: lighten(desaturate($_accentPrimary, 1.55), 19.41) !default; // #a8f0d5
$_accentPrimaryExtraPale: lighten(saturate($_accentPrimary, 1.19), 27.65); // #cbf7e6
$_accentPrimaryOffWhite: lighten(desaturate(adjust-hue($_accentPrimary, 5), 22.14), 35.49) !default; // #f0faf7

// User Interactions
$_accentInteractionLight: $_accentPrimary !default;
$_accentInteractionDark: darken(saturate(adjust-hue($_accentPrimary, 4), 17.01), 35.29) !default; // #077A57

$focusSecondary: $neutral20;
$focusTertiary: $neutral30;

// ---> For SVG interpolation
$_accentPrimaryHex: str-slice(#{$_accentPrimary}, 2);

// Spectra
// Additional global accent colors
$spBlue20: #D4EDFA;
$spBlue45: #61CAFF;
$spBlue75: #19678F;

$spGreen20: #C7F2A7;
$spGreen45: #87C930;
$spGreen75: #3C6E1A;

$spOrange20: #FFEBCE;
$spOrange45: #FAB048;
$spOrange75: #875F27;

$spPink20: #FFD6E4;
$spPink45: #FF8AB1;
$spPink75: #99536A;

$spRed20: #FFD1D1;
$spRed45: #FF9191;
$spRed75: #C42929;

$spTeal20: #C0FAF5;
$spTeal45: #38D6C9;
$spTeal75: #1D756E;

$spViolet20: #F7DCF6;
$spViolet45: #F58CEE;
$spViolet75: #9C4A96;

$spYellow20: #FFF799;
$spYellow45: #F5E425;
$spYellow75: #706B2C;

// Default colors that meet WCAG AA color contrast guidelines
// Namespaced functionally by usage and context (light/dark modes)
// --------------------------------------------------------
// Neutral text and UI elements
$neutralUIDullLight: $neutral70; // decorative or inactive elements against dark bgs
$neutralTextExtraLight: $neutral10; // for $neutral75 bg
$neutralUIExtraLight: $neutral40; // ""
$neutralTextLight: $neutral45; // for $neutral80 ↑ bg
$neutralUILight: $neutral50; // ""

$neutralUIDullDark: $neutral45; // decorative or inactive elements against dark bgs
$neutralTextDark: $neutral75; // for $neutral10 ↓ bg
$neutralUIDark: $neutral70; // ""
$neutralTextExtraDark: $neutral90; // for informational hierarchy with $neutralTextDark
$neutralUIExtraDark: $neutral85; // ""

// Errors (plus delete icons/messages)
$spErrorExtraLight: $spRed20;
$spErrorLight: $spRed45;
$spErrorDark: $spRed75;

// Warnings
$spWarningExtraLight: $spYellow20;
$spWarningLight: $spYellow45;
$spWarningDark: $spYellow75;

// Notices
$spNoticeExtraLight: $spBlue20;
$spNoticeLight: $spBlue45;
$spNoticeDark: $spBlue75;

// Reader Annotations, Highlighting, Labels
// additional variables defined locally in components/reader/annotations/_marker.scss
$spHighlightPrimary: #2bd1fa !default; // #2bd1fa;
$spHighlightPrimaryPale: lighten(desaturate(adjust-hue($spHighlightPrimary, -1), 14.44), 34.31); // #d9f5fb;

// Typographic Hierarchy
// Commonly used font-sizes for template typography
// TODO: Swap variables for hard-coded values, to refactor towards
// larger abstractions, like broader typography settings
// --------------------------------------------------------
$type180: 59px;
// $type130: ;
$type120: 35px;
$type110: 30px;
$type100: 26px;
$type90: 25px;
$type80: 22px;
$type70: 20px;
$type60: 18px;
$type50: 16px;
$type40: 14px;
$type30: 13px;
$type20: 12px;
// $type10: ;


// Measurements
// Structural measurements used site wide that are kept in one place
// --------------------------------------------------------
$baseLineHeight: 1.2;

$containerWidthFull: 1235px; // Maximum container width of 1135 plus maximum gutter padding
$containerPaddingFull: 50px;
$containerPaddingResp: 4.5%;
$containerPaddingNarrow: 20px;
$containerPaddingRespGlobal: 4.5vw;
$containerWidthMin: 320px; // Minimum container width

// Precalculated container width for convenience
$containerWidthInner: $containerWidthFull - ($containerPaddingFull * 2);

$containerWidthFocus: 680px; // Narrow container width for reading
$containerPaddingMin: 15px; // Minimum gutter padding

$readerHeaderHeight: 46px;

// Font Weights
// These are convenience variables to keep font weight declarations consistent
// --------------------------------------------------------
$light: 200;
$book: 300;
$medium: 500;
$regular: 400;
$semibold: 600;
$bold: 700;


// Animation
// --------------------------------------------------------
// Commonly used animation variables, mainly used with transition CSS
$durationFast: 0.1s;
$duration: 0.2s;
$durationSlow: 0.4s;

$timing: ease;


// Responsive Breakpoints
// Maintained in one place to keep major breakpoints consistent
// --------------------------------------------------------
$break125: 1250px;
$break120: $containerWidthFull;
$break110: 1130px;
$break95: 1024px;
$break90: 960px;
$break85: 880px;
$break80: 800px;
$break75: 760px;
$break70: 700px;
$break65: 690px;
$break60: 620px;
$break50: 560px;
$break40: 480px;
$break35: 450px;
$break30: 400px;
$break20: 350px;
// Minimum site width
$break10: $containerWidthMin;

// Height Breakpoints
// --------------------------
// Rarely used, but helpful for things like modals and height dependent interfaces
$hbreak90: 900px;

// Appearance variables
// --------------------------
$panelRoundedRadius: 8px;

// Component variables
// --------------------------
$event-entity: (
  list-margin-top: 17px,
  list-layout-breakpoint: $break65,
  row-gap: 28px,
  flex-max-width: 460.5px,
  min-width: 332px,
  icon-size-small: 40px,
  icon-size-med: 44px,
  icon-size-large: 48px,
  panel-breakpoint: $break60
);

// get value from $event-entity map
@function event-entity($property) {
  @return map-get($event-entity, $property);
}

$header-layout: (
  padding-vertical-mobile: 9px,
  padding-vertical-desktop: 20px,
  menu-slide-distance: 30px
);

@function header-layout($property) {
  @return map-get($header-layout, $property);
}

// shared between StandaloneHeader & Project.Hero components
$standalone-header-layout: (
  max-width: 1178px,
  padding-top-mobile: 24px,
  padding-top-desktop: 45px
);

@function standalone-header-layout($property) {
  @return map-get($standalone-header-layout, $property);
}
