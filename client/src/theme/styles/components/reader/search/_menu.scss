// Search Menu button and panel global styles (see header styles for context specific styles)
.button-search {
  height: 100%;
  color: var(--color-neutral-text-dark);
  color: var(--header-foreground-color, var(--color-neutral-text-dark));
  vertical-align: middle;
  background: transparent;
  border: 0;
  border-radius: 0;
  outline: none;
  appearance: none;

  .header-app & {
    $tailHeight: 17px;
    transition: color ${defaultTransitionProps};

    &.button-active,
    &:focus-visible {
      ${defaultHoverStyle}
      outline: 0;
    }

    &::after {
      @include tailUp(var(--color-base-neutral10), $tailHeight);
      position: absolute;
      top: calc(100% - #{$tailHeight});
      bottom: 14px;
      left: 50%;
      display: block;
      margin-left: -15px;
      content: '';
      opacity: 0;
      transition: transform ${defaultTransitionProps}, opacity ${defaultTransitionProps};
      transform: translateY(-1 * header-layout(menu-slide-distance));
    }

    &.button-active::after {
      z-index: 1;
      opacity: 1;
      transform: translateY(0);
    }
  }
}

.search-menu {
  --focus-color: #{$neutralUIDark};

  // browse styles
  position: absolute;
  right: -$containerPaddingRespGlobal;
  width: 100vw;
  max-width: 100vw;
  white-space: nowrap;
  background-color: var(--color-base-neutral10);

  .header-app & {
    z-index: 1; // ensure menu is on top of .header-app
    padding: 28px 22px 22px;
    border-radius: $panelRoundedRadius;
    box-shadow: 5px 15px 35px 8px rgba("neutralBlack", 0.13);

    @include respond($break40) {
      padding: 20px 24px 22px;
    }
  }

  .reader-header & {
    width: auto;
    padding: 20px 18px 12px;

    @include respond($break40) {
      padding: 20px 22px 16px;
    }

    @include respond($break60) {
      padding: 20px 30px 19px;
    }
  }


  @include respond($break70) {
    width: auto;
  }

  @include respond($break120) {
    right: -$containerPaddingFull;
  }
}
