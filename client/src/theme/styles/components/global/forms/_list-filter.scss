.form-list-filter {
  $_input-gap: entity-filter-form(gap);
  $_select-min-width: entity-filter-form(select-min-width);
  $_search-min-width: entity-filter-form(search-min-width);

  display: flex;
  flex-wrap: wrap;
  margin-top: -1 * $_input-gap;
  margin-left: -1 * $_input-gap;

  > * {
    flex-grow: 1;
    margin-top: $_input-gap;
    margin-left: $_input-gap;
  }

  @supports (gap: 10px) {
    gap: $_input-gap;
    margin-top: 0;
    margin-left: 0;

    > * {
      margin-top: 0;
      margin-left: 0;
    }
  }

  .resource-totals + & {
    padding-top: 40px;
  }

  &__label {
    @include utilityPrimary;
    display: block;
    margin-bottom: $_input-gap;
    font-size: 13px;
  }

  &__text-input {
    @include templateHead;
    width: 100%;
    padding: 6px 40px 8px 15px;
    font-size: 17px;
    background-color: transparent;
    border: 1px solid;

    &:focus-visible::placeholder {
      color: $defaultFocusColor;
    }

    &--search {
      padding-left: 44px;
      border-radius: 20px;

      &:focus-visible {
        outline: none;
      }
    }
  }

  &__search-field {
    position: relative;
    display: inline-block;
    flex-basis: 0;
    flex-grow: 999;
    width: 100%;
    min-width: $_search-min-width;
  }

  &__search-button {
    @include buttonUnstyled;
    @include outlineOnFocusVisible;
    position: absolute;
    top: 50%;
    left: 14px;
    transform: translateY(-50%);

    &:hover {
      @include defaultHoverStyle;
    }
  }

  &__select-group {
    position: relative;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax($_select-min-width, 1fr));
    grid-gap: $_input-gap;
    gap: $_input-gap;
    margin-bottom: 0;

    &--count-2 {
      flex-basis: $_select-min-width * 2 + $_input-gap;
    }

    &--count-3 {
      flex-basis: $_select-min-width * 3 + $_input-gap * 2;
    }
  }

  &__select-field {
    position: relative;
  }

  &__select-input {
    @include filterSelectBase;
    width: 100%;
    padding-top: 11px;
    padding-bottom: 12px;
    font-size: 13px;
    border: 1px solid var(--select-border-color);
    border-radius: 6px;
    transition: border-color $duration $timing;

    &:focus-visible {
      border-color: var(--default-hover-color);
    }

    option {
      color: $neutralBlack;
    }
  }

  &__select-icon {
    position: absolute;
    top: 50%;
    right: 12px;
    width: 24px;
    height: 24px;
    color: var(--select-border-color);
    pointer-events: none;
    transform: translateY(-50%);
  }

  &__reset-button {
    @include buttonUnstyled;
    @include utilityPrimary;
    margin-top: 8px;
    font-size: 14px;

    &:focus-visible {
      color: var(--default-focus-color);
    }
  }
}
