.utility-button {
  @include buttonUnstyled;
  @include templateHead;
  display: inline-flex;
  align-items: center;
  font-size: 12px;
  font-weight: $semibold;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.125em;

  &__icon:not(.utility-button__icon--light),
  &__text:not(.utility-button__text--light) {
    .backend .utility-button:not(:disabled):hover & {
      color: $neutralTextExtraLight;
    }

    .utility-button:disabled & {
      color: $neutralUILight;
      opacity: 0.5;
    }
  }

  &__icon {
    margin-left: -3px;
    transition: color $duration $timing;

    &--highlight {
      color: $accentPrimary;
    }

    &--notice {
      color: $defaultErrorColor;
    }

    &--download {
      color: $neutral30;
    }
  }

  &__text {
    display: none;
    transition: color $duration $timing;

    @include respond($break40) {
      display: block;
    }

    &--light {
      color: $neutralWhite;
    }

    &--highlight {
      color: $accentPrimary;
    }

    &--dark-green {
      color: $accentInteractionDark;
    }

    &--large {
      font-size: 14px;
    }

    &--underlined {
      text-decoration: underline;
    }

    .utility-button:hover & {
      @include defaultHoverStyle;
    }

    .utility-button__icon + & {
      margin-left: 0.417em;
    }
  }
}

.utility-button-group {
  &--inline {
    > *:not(:last-child) {
      margin-right: 1em;

      @include respond($break40) {
        margin-right: 2em;
      }
    }
  }

  &--stack {
    display: flex;

    @include respond($break65) {
      flex-direction: column;
    }

    > * + * {
      @include respond($break65 - 1, max) {
        margin-left: 1em;
      }

      @include respond($break65) {
        margin-top: 1em;
      }
    }
  }
}

// Can be a <button> or an <a>
.button-primary {
  @include buttonUnstyled;
  @include utilityPrimary;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 14px 23px 16px;
  font-size: 14px;
  text-decoration: none;
  letter-spacing: 0.089em;
  border: 1px solid $defaultHoverColor;
  transition: color $duration $timing, background-color $duration $timing,
    border-color $duration $timing;

  &:hover,
  &:active {
    color: $neutralTextExtraDark;
    background-color: $accentInteractionLight;
    border-color: $accentInteractionLight;
  }

  &:focus-visible {
    background-color: $accentPrimaryDull;
    outline: 0;

    .browse & {
      outline: 0;
    }
  }

  &--gray {
    color: $neutral75;
    background-color: $neutral10;
    border-color: $neutral10;

    &:hover {
      color: $neutral95;
      background-color: $neutral20;
      border-color: $neutral20;
    }

    &:focus-visible {
      color: $neutral95;
      background-color: $neutral30;
      border-color: $neutral30;
    }
  }

  &--dull {
    border-color: $neutralUIDark;

    &:hover,
    &:active {
      background-color: $neutral10;
      border-color: $neutralUIDark;
    }

    &:focus-visible {
      background-color: $focusSecondary;
    }

    .bg-neutral05 & {
      &:hover {
        color: $neutralWhite;
        background-color: $neutral50;
      }
    }
  }

  &--rounded {
    border-radius: 6px;
  }

  &__icon {
    position: relative;
    top: 1px;
    margin-left: 10px;
  }

  &__text {
  }
}

// Large transparent button with icon on the left
.button-icon-primary {
  @include buttonUnstyled;
  @include utilityPrimary;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 52px;
  padding-right: 28px;
  padding-left: 28px;
  font-size: 12px;
  font-weight: $bold;
  text-align: center;
  text-decoration: none;
  border: 1px solid $defaultHoverColor;
  transition: color $duration $timing, background-color $duration $timing,
    border-color $duration $timing;

  @include respond($break60) {
    min-height: 58px;
    font-size: 14px;
  }

  &:hover,
  &:active {
    color: $neutralTextExtraDark;
    background-color: $accentInteractionLight;
  }

  .browse & {
    @include fillOnFocus($accentPrimaryExtraPale);
  }

  &__icon {
    margin-right: 7px;
    color: $neutral50;
    transition: color $duration $timing;

    .button-icon-primary:hover & {
      color: $neutralUIExtraDark;
    }

    @include respond($break60) {
      width: 54px;
      height: 54px;
    }
  }

  &__text {
  }
}

// Used in backend for "add" buttons
// Can be an <a> or a <button>
.button-icon-secondary {
  @include templateHead;
  @include buttonUnstyled;
  display: inline-flex;
  align-items: center;
  padding: 0.667em 17px 0.778em;
  font-size: 16px;
  color: var(--highlight-color);
  text-align: left;
  text-decoration: none;
  letter-spacing: 0.015em;
  border: 1px solid var(--highlight-color);
  transition: color $duration $timing, background-color $duration $timing,
    border-color $duration $timing;

  @include respond($break60) {
    font-size: 18px;
  }

  &__icon {
    position: relative;
    top: 0.125em;
    margin-right: 0.833em;

    &--large {
      top: 0.08em;
    }

    &--short {
      top: 0;
    }

    &--right {
      margin-right: 0;
      margin-left: 0.833em;
    }
  }

  &:disabled {
    color: var(--color-neutral-ui-dull-light);
    cursor: not-allowed;
    border: 1px solid;
  }

  &:focus-visible:not([disabled]) {
    color: $neutral90;
    background-color: var(--color-accent-primary-pale);
    outline: 0;
  }

  &:hover:not([disabled]),
  &:active:not([disabled]) {
    color: $neutralTextExtraDark;
    background-color: $accentPrimary;
    border-color: $accentPrimary;
  }

  &:focus-visible:disabled {
    outline-offset: 2px;
  }

  &--dull {
    color: var(--default-color);
    border-color: var(--default-color);

    &:hover:not([disabled]),
    &:active:not([disabled]) {
      color: var(--default-hover-color);
      background-color: transparent;
      border-color: var(--default-hover-color);
    }

    &:focus-visible:not([disabled]) {
      color: var(--default-strong-color);
      background-color: rgba($neutralUIDark, 0.3);
      outline: 0;
    }
  }

  &--full {
    width: 100%;
  }

  &--centered {
    justify-content: center;
  }

  &--smallcaps {
    padding-top: 1.125em;
    padding-bottom: 1.375em;
    font-size: 12px;
    font-weight: $semibold;
    text-transform: uppercase;
    letter-spacing: 0.115em;
  }

  &--in-drawer {
    width: 100%;

    @include respond($break90) {
      width: calc(50% - 17px);
    }
  }

  &--wide {
    width: 100%;
    margin-bottom: 15px;

    @include respond($break85) {
      width: calc(50% - 17px);
    }
  }
}

// Button group, starts horizontal and drops
// to vertical by default, can maintain horizontal
// progress with class "maintain"
.buttons-icon-horizontal {
  $_gap: 20px;

  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-top: -1 * $_gap;
  margin-bottom: 35px;
  margin-left: -1 * $_gap;

  &.right {
    justify-content: flex-end;
  }

  &.maintain {
    flex-wrap: nowrap;

    .buttons-icon-horizontal__button {
      flex-basis: 100%;
      max-width: 360px;
      margin-bottom: 0;
    }
  }

  @include respond($break85) {
    font-size: 0;
  }

  &__button {
    margin-bottom: 15px;

    &:not(.button-icon-secondary--in-drawer) {
      flex-basis: calc(50% - #{$_gap});
      margin-top: $_gap;
      margin-left: $_gap;

      &:not(:only-child) {
        flex-grow: 1;
      }
    }

    &--in-dialog {
      margin-bottom: 0;
    }
  }

  // Swap full/abbreviated text if there is any
  .full {
    display: none;

    @include respond($break85) {
      display: inline;
    }
  }

  .abbreviated {
    @include respond($break85) {
      display: none;
    }
  }
}

// Can be an <input>, <button>, or an <a>
.button-secondary {
  @include buttonUnstyled;
  @include templateHead;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.857em 30px 0.929em;
  font-size: 12px;
  font-weight: $semibold;
  color: var(--default-strong-color);
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.089em;
  background-color: var(--accent-primary);
  transition: color $duration $timing, background-color $duration $timing;

  @include respond($break60) {
    font-size: 14px;
  }

  &:hover,
  &:focus-visible {
    color: var(--default-strong-color);
    background-color: var(--accent-primary-dull);
    outline: 0;
  }

  &:active {
    background-color: var(--accent-primary-medium);
  }

  &--with-room {
    margin-top: 40px;
  }

  &--dull {
    background-color: var(--button-dull-bg-color);

    &:hover,
    &:focus-visible {
      background-color: $neutral20;
    }

    &:active {
      color: $neutralWhite;
      background-color: $neutral50;
    }
  }

  &--outlined {
    color: var(--highlight-color);
    background: none;
    border: 1px solid var(--default-hover-color);

    &:hover,
    &:focus-visible {
      color: $neutralTextExtraDark;
      background-color: var(--default-hover-color);
      outline: 0;
    }

    .bg-neutral90 &,
    .bg-neutral100 &,
    .drawer-backend & {
      --highlight-color: #{$neutralWhite};

      &:not(.button-secondary--dull):hover,
      &:not(.button-secondary--dull):focus-visible {
        color: $neutralTextExtraDark;
        background-color: var(--default-hover-color);
      }
    }

    &.button-secondary--dull {
      --highlight-color: #{$neutral45};
      --default-hover-color: #{$neutral45};

      @include fillOnFocus(rgba($neutral70, 0.2));

      &:hover {
        color: $neutralTextExtraDark;
        background-color: var(--highlight-color);
        outline: 0;
      }
    }
  }

  &--accent-pale {
    background-color: var(--accent-primary-pale);

    &:hover,
    &:focus-visible {
      background-color: var(--accent-primary);
    }

    &.button-secondary--dull {
      background-color: $neutral10;

      &:hover,
      &:focus-visible {
        background-color: $neutral20;
      }
    }
  }

  &--dark {
    justify-content: flex-start;
    color: $neutralUIExtraLight;
    text-align: left;
    background-color: $neutral80;

    .bg-neutral90 & {
      &:hover,
      &:active {
        color: $neutralTextExtraDark;
      }

      &:focus-visible {
        background-color: $neutralTextExtraDark;
      }
    }
  }

  &--color-white {
    color: $neutralWhite;
  }

  &__icon {
    position: relative;
    top: 1px;

    + .button-secondary__text {
      margin-left: 10px;
    }
  }

  &__text {
    &--white {
      color: $neutralWhite;
    }

    &--hover-dark {
      transition: color $duration $timing;

      .button-secondary:hover &,
      .button-secondary:focus-visible & {
        color: $neutral90;
      }
    }

    + .button-secondary__icon {
      margin-left: 10px;
    }
  }
}

.button-tertiary {
  @include utilityPrimary;
  display: inline-block;
  padding: 5px 14px 7px;
  font-size: 12px;
  color: $neutralTextExtraDark;
  text-align: center;
  text-decoration: none;
  letter-spacing: 0.134em;
  white-space: nowrap;
  background-color: var(--button-tertiary-bg-color);
  border: 1px solid var(--button-tertiary-bg-color);
  border-radius: 4px;
  transition: color $duration $timing, background-color $duration $timing,
    border-color $duration $timing;

  &:hover,
  &:focus-visible,
  &--active {
    color: $neutralTextExtraDark;
    background-color: var(--button-tertiary-bg-hover-color);
    border-color: var(--button-tertiary-bg-hover-color);
    outline: 0;
  }

  &--neutral {
    background-color: var(--default-bg-color);
    border-color: currentColor;
  }

  &--outlined {
    background-color: transparent;
    border-color: currentColor;
  }
}

// Text only button with full width bottom border
@mixin buttonTrimPrimary {
  @include buttonUnstyled;
  @include utilityPrimary;
  display: block;
  width: 100%;
  padding-bottom: 13px;
  font-size: 14px;
  text-align: left;

  &:hover {
    color: $accentPrimaryMedium;
  }

  &:focus-visible {
    color: $neutral95;
    outline: 0;
  }

  &:active {
    color: $defaultHoverColor;
  }
}

.button-trim-primary {
  @include buttonTrimPrimary;
}

// TODO: Refactor login into form (default) with overlay (modified) and remove this
.login-external {
  .button-secondary--dark + .button-secondary--dark {
    margin-top: 21px;
  }
}

@mixin listButtonSimple {
  @include buttonUnstyled;
  @include utilityPrimary;
  font-size: 14px;
  color: $neutral40;
  border: 0;
  transition: color $duration $timing;

  &:hover,
  &.active,
  &:focus-visible {
    color: $accentPrimaryDark;
  }
}

/* stylelint-disable declaration-no-important */
.back-link-primary {
  @include utilityPrimary;
  display: inline-flex;
  align-items: center;
  padding: 16px 0 15px;
  font-size: 13px;
  line-height: 1.4;
  color: var(--default-weak-color);
  text-decoration: none !important;
  letter-spacing: 0.1em;
  background-color: var(--box-bg-color);
  transition: color $duration $timing, background-color $duration $timing;

  @include respond($break40) {
    padding: 21px 0 20px;
    font-size: 14px;
  }

  &--full {
    display: flex;
  }

  .bg-neutral95 & {
    &:hover,
    &:active,
    &:focus-visible {
      color: var(--default-hover-color);
      background-color: inherit;
      outline: 0;
    }
  }

  &:hover,
  &:active,
  &:focus-visible {
    color: inherit;
    background-color: var(--box-strong-bg-color);
    outline: none;
  }

  &__container {
    position: relative;
    width: 100%;
    padding-left: calc(#{$containerPaddingResp} + 40px);

    @include respond($break120) {
      padding-left: calc(#{$containerPaddingFull} + 40px);
    }
  }

  &__icon {
    position: absolute;
    top: -2px;
    left: $containerPaddingResp;

    @include respond($break120) {
      left: $containerPaddingFull;
    }
  }

  &__back-text {
    margin-right: 8px;
  }

  &__title {
    display: inline;
  }
}

.back-link-secondary {
  @include utilityPrimary;
  display: block;
  font-size: 14px;
  text-decoration: none !important;
  background-color: var(--box-medium-bg-color);
  transition: color $duration $timing, background-color $duration $timing;

  &:hover,
  &:active,
  &:focus-visible {
    color: inherit;
    background-color: var(--box-strong-bg-color);
    outline: 0;
  }

  &__container {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
    padding-top: 31px;
    padding-bottom: 28px;
  }

  &__icon {
    margin-right: 16px;
  }

  &__text {
    width: 100%;
    transform: translateY(-1px);
  }
}
/* stylelint-enable  declaration-no-important */

.close-button-primary {
  font-size: 15px;
  color: $neutral50;
  text-decoration: none;
  cursor: pointer;
}

.button-lozenge-primary {
  @include utilityPrimary;
  padding: 6px 13px;
  font-size: 12px;
  text-decoration: none;
  background-color: var(--box-bg-color);
  border: none;
  border-radius: 1em;
  transition: color $duration $timing, background-color $duration $timing;

  &:hover,
  &:focus-visible {
    color: inherit;
    background-color: var(--accent-primary);
  }

  &--warn {
    &:hover,
    &:focus-visible {
      color: $neutralWhite;
      background-color: var(--default-error-color);
    }
  }
}

.button-lozenge-secondary {
  @include utilityPrimary;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding-right: 15px;
  padding-left: 15px;
  font-size: 14px;
  font-weight: $medium;
  text-decoration: none;
  text-transform: none;
  letter-spacing: 0;
  border: 1px solid;
  border-radius: 16px;
  transition: color $duration $timing, background-color $duration $timing,
    border-color $duration $timing;

  &:hover {
    color: $neutralTextExtraDark;
    background-color: $defaultHoverColor;
    border-color: $defaultHoverColor;
  }

  &:focus-visible {
    color: $neutralTextExtraDark;
    border-color: $defaultHoverColor;
  }

  span {
    padding-top: 7px;
    padding-bottom: 9px;
  }

  svg {
    width: 24px;
    height: 24px;
    margin-right: 6px;
    margin-left: -5px;
  }
}
