.utility-button {
  @include buttonUnstyled;
  @include templateHead;
  display: inline-flex;
  align-items: center;
  font-size: 12px;
  font-weight: $semibold;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.125em;

  &__icon:not(.utility-button__icon--light),
  &__text:not(.utility-button__text--light) {
    .backend .utility-button:not(:disabled):hover & {
      color: $neutralTextExtraLight;
    }

    .utility-button:disabled & {
      color: $neutralUILight;
      opacity: 0.5;
    }
  }

  &__icon {
    margin-left: -3px;
    transition: color $duration $timing;

    &--highlight {
      color: $accentPrimary;
    }

    &--notice {
      color: $defaultErrorColor;
    }

    &--download {
      color: $neutral30;
    }
  }

  &__text {
    display: none;
    transition: color $duration $timing;

    @include respond($break40) {
      display: block;
    }

    &--light {
      color: $neutralWhite;
    }

    &--highlight {
      color: $accentPrimary;
    }

    &--dark-green {
      color: $accentInteractionDark;
    }

    &--large {
      font-size: 14px;
    }

    &--underlined {
      text-decoration: underline;
    }

    .utility-button:hover & {
      @include defaultHoverStyle;
    }

    .utility-button__icon + & {
      margin-left: 0.417em;
    }
  }
}

.utility-button-group {
  &--inline {
    > *:not(:last-child) {
      margin-right: 1em;

      @include respond($break40) {
        margin-right: 2em;
      }
    }
  }

  &--stack {
    display: flex;

    @include respond($break65) {
      flex-direction: column;
    }

    > * + * {
      @include respond($break65 - 1, max) {
        margin-left: 1em;
      }

      @include respond($break65) {
        margin-top: 1em;
      }
    }
  }
}

// Can be a <button> or an <a>
.button-primary {
  @include buttonUnstyled;
  @include utilityPrimary;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 14px 23px 16px;
  font-size: 14px;
  text-decoration: none;
  letter-spacing: 0.089em;
  border: 1px solid $defaultHoverColor;
  transition:
    color $duration $timing,
    background-color $duration $timing,
    border-color $duration $timing;

  &:hover,
  &:active {
    color: $neutralTextExtraDark;
    background-color: $accentInteractionLight;
    border-color: $accentInteractionLight;
  }

  &:focus-visible {
    background-color: $defaultFocusColor;
    outline: 0;

    .browse & {
      outline: 0;
    }
  }

  &--gray {
    color: $neutral75;
    background-color: $neutral10;
    border-color: $neutral10;

    &:hover {
      color: $neutral95;
      background-color: $neutral20;
      border-color: $neutral20;
    }

    &:focus-visible {
      color: $neutral95;
      background-color: $neutral30;
      border-color: $neutral30;
    }
  }

  &--dull {
    border-color: $neutralUIDark;

    &:hover {
      background-color: $neutral10;
      border-color: $neutralUIDark;
    }

    &:focus-visible {
      background-color: $focusSecondary;
    }

    &:active {
      color: $neutralWhite;
      background-color: $neutral50;
    }

    .bg-neutral05 & {
      &:hover {
        color: $neutralWhite;
        background-color: $neutral50;
      }
    }
  }

  &__icon {
    position: relative;
    top: 1px;
    margin-left: 10px;
  }

  &__text {}
}

// Large transparent button with icon on the left
.button-icon-primary {
  @include buttonUnstyled;
  @include utilityPrimary;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 52px;
  padding-right: 28px;
  padding-left: 28px;
  font-size: 12px;
  font-weight: $bold;
  text-align: center;
  text-decoration: none;
  border: 1px solid $defaultHoverColor;
  transition:
    color $duration $timing,
    background-color $duration $timing,
    border-color $duration $timing;

  @include respond($break60) {
    min-height: 58px;
    font-size: 14px;
  }

  &:hover,
  &:active {
    color: $neutralTextExtraDark;
    background-color: $accentInteractionLight;
    border-color: $accentInteractionLight;
  }

  .browse & {
    @include fillOnFocusVisible($accentPrimaryDull);
  }

  &__icon {
    margin-right: 7px;
    color: $neutral50;
    transition: color $duration $timing;

    .button-icon-primary:hover & {
      color: $neutralUIExtraDark;
    }

    @include respond($break60) {
      width: 54px;
      height: 54px;
    }
  }

  &__text {}
}

// Used in backend for "add" buttons
// Can be an <a> or a <button>
.button-icon-secondary {
  @include templateHead;
  @include buttonUnstyled;
  display: inline-flex;
  align-items: center;
  padding: 0.667em 17px 0.778em;
  font-size: 16px;
  color: $accentPrimary;
  text-align: left;
  text-decoration: none;
  letter-spacing: 0.015em;
  border: 1px solid $accentPrimary;
  transition:
    color $duration $timing,
    background-color $duration $timing,
    border-color $duration $timing;

  @include respond($break60) {
    font-size: 18px;
  }

  &__icon {
    position: relative;
    top: 0.125em;
    margin-right: 0.833em;

    &--large {
      top: 0.08em;
    }

    &--short {
      top: 0;
    }

    &--right {
      margin-right: 0;
      margin-left: 0.833em;
    }
  }

  &:disabled {
    color: $neutralUIDullLight;
    cursor: not-allowed;
    border: 1px solid;
  }

  &:focus-visible:not([disabled]) {
    background-color: rgba($accentPrimary, 0.2);
    outline: 0;
  }

  &:hover:not([disabled]),
  &:active:not([disabled]) {
    color: $neutral90;
    background-color: $defaultHoverColor;
  }

  &:focus-visible:disabled {
    outline-offset: 2px;
  }

  &--dull {
    color: $neutralTextLight;
    border-color: $neutralTextLight;

    &:hover:not([disabled]),
    &:active:not([disabled]) {
      color: $defaultHoverColor;
      background-color: transparent;
      border-color: $defaultHoverColor;
    }

    &:focus-visible:not([disabled]) {
      background-color: rgba($neutral50, 0.2);
      outline: 0;
    }
  }

  &--full {
    width: 100%;
  }

  &--centered {
    justify-content: center;
  }

  &--smallcaps {
    padding-top: 1.125em;
    padding-bottom: 1.375em;
    font-size: 12px;
    font-weight: $semibold;
    text-transform: uppercase;
    letter-spacing: 0.075em;
  }

  &--in-drawer {
    width: 100%;

    @include respond($break90) {
      width: calc(50% - 17px);
    }
  }

  &--wide {
    width: 100%;
    margin-bottom: 15px;

    @include respond($break85) {
      width: calc(50% - 17px);
    }
  }
}

// Button group, starts horizontal and drops
// to vertical by default, can maintain horizontal
// progress with class "maintain"
.buttons-icon-horizontal {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-bottom: 35px;

  &.right {
    justify-content: flex-end;
  }

  &.maintain {
    flex-wrap: nowrap;

    .buttons-icon-horizontal__button {
      width: calc(50% - 8px);
      margin-bottom: 0;
    }
  }

  @include respond($break85) {
    font-size: 0;
  }

  &__button {
    margin-bottom: 15px;

    &:not(.button-icon-secondary--in-drawer) {
      width: 100%;

      @include respond($break85) {
        width: calc(50% - 17px);
      }
    }
  }

  // Swap full/abbreviated text if there is any
  .full {
    display: none;

    @include respond($break85) {
      display: inline;
    }
  }

  .abbreviated {
    @include respond($break85) {
      display: none;
    }
  }
}

// Can be an <input>, <button>, or an <a>
.button-secondary {
  @include buttonUnstyled;
  @include templateHead;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 1.214em 16px 1.286em;
  font-size: 12px;
  font-weight: $semibold;
  color: $neutralTextExtraDark;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.089em;
  background-color: $accentPrimary;
  transition:
    color $duration $timing,
    background-color $duration $timing;

  @include respond($break60) {
    font-size: 14px;
  }

  &:hover {
    color: $neutral80;
    background-color: $accentPrimaryDull;
  }

  &:focus-visible {
    background-color: $defaultFocusColor;
    outline: 0;
  }

  &:active {
    color: $neutralWhite;
    background-color: $accentPrimaryDark;
  }

  &--with-room {
    margin-top: 40px;
  }

  &--dull {
    color: $neutral70;
    background-color: $neutral10;
    border-color: $neutral70;

    &:hover {
      background-color: $neutral10;
    }

    &:focus-visible {
      background-color: $neutral30;
      outline: 0;
    }

    &:active {
      color: $neutralWhite;
      background-color: $neutral50;
    }
  }

  .bg-neutral90 & {
    &:hover {
      color: $neutral90;
      background-color: $accentPrimaryDull;
    }

    &:focus-visible {
      color: $neutralWhite;
      background-color: $neutral95;
      outline: 0;
    }

    &:active {
      color: $neutral90;
      background-color: $accentPrimaryDark;
    }
  }

  &--outlined {
    padding: 1em 30px 1.2em;
    color: $accentPrimary;
    background: none;
    border: 1px solid $accentPrimary;

    &:hover, &:focus-visible {
      color: $neutral90;
      background-color: $accentPrimary;
      outline: 0;
    }

    .bg-neutral90 &,
    .bg-neutral100 &,
    .drawer-backend & {
      @include fillOnFocusVisible(rgba($accentPrimary, 0.2));
      color: $neutralWhite;

      &:hover {
        color: $neutral90;
        background-color: $accentPrimary;
      }
    }

    &.button-secondary--dull {
      @include fillOnFocusVisible(rgba($neutral70, 0.2));
      color: $neutral45;
      border-color: $neutral45;

      &:hover {
        color: $neutral90;
        background-color: $neutral45;
        outline: 0;
      }
    }
  }

  &--accent-pale {
    @include fillOnFocusVisible($accentPrimary);
    padding: 1em 30px 1.2em;
    color: $neutral90;
    background-color: $accentPrimaryPale;

    &:hover {
      background-color: $defaultHoverColor;
    }

    &.button-secondary--dull {
      @include fillOnFocusVisible($neutral30);
      background-color: $neutral10;

      &:hover {
        background-color: $neutral20;
      }
    }
  }

  &--dark {
    justify-content: flex-start;
    color: $neutral40;
    text-align: left;
    background-color: $neutral80;

    .bg-neutral90 & {
      &:hover {
        color: $neutral95;
      }

      &:focus-visible {
        background-color: $neutral95;
      }

      &:active {
        color: $neutral95;
      }
    }

    .overlay-full-primary & {
      &:hover, &:focus-visible {
        color: $neutral80;
      }
    }
  }

  &--color-white {
    color: $neutralWhite;
  }

  &__icon {
    position: relative;
    top: 1px;

    + .button-secondary__text {
      margin-left: 10px;
    }
  }

  &__text {
    &--white {
      color: $neutralWhite;
    }

    &--hover-dark {
      transition: color $duration $timing;

      .button-secondary:hover &,
      .button-secondary:focus-visible & {
        color: $neutral90;
      }
    }

    + .button-secondary__icon {
      margin-left: 10px;
    }
  }
}

@mixin buttonTertiary {
  @include utilityPrimary;
  display: inline-block;
  padding: 0.76em 1.7em;
  font-size: 11.18px;
  color: $neutral90;
  text-align: center;
  text-decoration: none;
  letter-spacing: 0.134em;
  white-space: nowrap;
  background-color: $accentPrimaryPale;
  border-radius: 4px;
  transition:
    color $duration $timing,
    background-color $duration $timing;

  &:hover, &:focus-visible {
    color: $neutralTextExtraDark;
    background-color: $accentInteractionLight;
    outline: 0;
  }
}

// Text only button with full width bottom border
@mixin buttonTrimPrimary {
  @include buttonUnstyled;
  @include utilityPrimary;
  display: block;
  width: 100%;
  padding-bottom: 13px;
  font-size: 14px;
  text-align: left;

  &:hover {
    color: $accentPrimaryMedium;
  }

  &:focus-visible {
    color: $neutral95;
    outline: 0;
  }

  &:active {
    color: $defaultHoverColor;
  }
}

.button-trim-primary {
  @include buttonTrimPrimary;
}

// TODO: Refactor login into form (default) with overlay (modified) and remove this
.login-external {
  .button-secondary--dark + .button-secondary--dark {
    margin-top: 21px;
  }
}

@mixin listButtonSimple {
  @include buttonUnstyled;
  @include utilityPrimary;
  font-size: 14px;
  color: $neutral40;
  border: 0;
  transition: color $duration $timing;

  &:hover, &.active, &:focus-visible {
    color: $accentPrimaryDark;
  }
}

.project-cover-button-wrapper {
  @include buttonUnstyled;
  position: absolute;
  top: 10px;
  left: -15px;
  width: 28px;
  height: 28px;

  @include respond($break75) {
    top: 15px;
    width: 30px;
    height: 30px;
  }

  .project-list__item--pos-rel & {
    // aligned to <li> to separate button from anchor
    top: 25px;
    left: 0;

    @include respond($break75) {
      top: calc(2.105vw + 15px);
      left: calc(2.105vw - 15px);
    }

    @include respond($break120) {
      top: 40px;
      left: 10px;
    }
  }

  &.active {
    width: 100%;
  }
}

.project-cover-button {
  @include templateHead;
  @include boxShadow(2px, 4px, 10px, 0, $neutral90, 0.36);
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  max-width: 100%;
  height: 100%;
  overflow: hidden;
  font-size: 16px;
  color: $neutral90;
  text-align: left;
  white-space: nowrap;
  cursor: pointer;
  background-color: $accentPrimary;
  border-radius: 22.5px;
  transition: max-width $duration $timing,
    background-color $duration $timing;

  @include respond($break75) {
    font-size: 18px;
  }

  &--sr-only {
    &:focus-visible ~ .project-cover-button-wrapper {
      @include defaultFocusStyle;
      outline-color: $defaultFocusColor;
    }
  }

  .remove & {
    background-color: $spBlue45;
  }

  .action-text {
    display: block;
    padding-right: 14px;
    padding-left: 30px;
    line-height: 1.65;

    @include respond($break75) {
      padding-left: 32px;
      line-height: 1.5;
    }
  }

  .button-enter, .button-exit.action-text-hide-immediately {
    display: none;
  }

  .button-enter.action-text-show-immediately {
    display: inline;
  }

  .add-active &, .remove-active &, .remove-confirm-active & {
    max-width: 200px;
    transition: max-width $durationSlow ease-out;
  }

  .add-active & {
    background-color: $spBlue45;
  }

  .remove-active &, .remove-confirm-active & {
    background-color: $neutral40;
  }

  .icons {
    position: absolute;
    width: 100%;
    height: 100%;
    transition: transform $duration $timing;

    .add & {
      transform: translateY(-100%);
    }

    .add-active & {
      transform: translateY(-100%);
    }

    .remove-active & {
      transform: translateY(100%);
    }

    .manicon-svg {
      position: absolute;
      top: 0;
      left: 0;
      width: 28px;
      height: 28px;
      transition: transform $duration $timing;

      @include respond($break75) {
        width: 30px;
        height: 30px;
      }

      &.minus {
        top: -100%;
      }

      &.plus {
        top: 100%;

        .follow-active & {
          transform: rotate(-90deg);
        }
      }
    }
  }
}

/* stylelint-disable declaration-no-important */
.back-link-primary {
  @include utilityPrimary;
  display: inline-flex;
  align-items: center;
  padding: 16px 0 15px;
  font-size: 13px;
  line-height: 1.4;
  text-decoration: none !important;
  background-color: $neutral05;
  transition: color $duration $timing,
    background-color $duration $timing;

  @include respond($break40) {
    padding: 26px 0 25px;
    font-size: 14px;
  }

  &--full {
    display: flex;
  }

  .bg-neutral95 & {
    background-color: $neutral95;

    &:hover, &:focus-visible {
      background-color: $neutral95;
      outline: 0;
    }
  }

  &:hover, &:active {
    background-color: $neutral20;
  }

  &:focus-visible {
    background-color: $focusTertiary;
    outline: 0;
  }

  &__container {
    position: relative;
    width: 100%;
    padding-left: calc(#{$containerPaddingResp} + 26px);

    @include respond($break120) {
      padding-left: calc(#{$containerPaddingFull} + 26px);
    }
  }

  &__icon {
    position: absolute;
    top: 3px;
    left: $containerPaddingResp;

    @include respond($break120) {
      left: $containerPaddingFull;
    }
  }

  &__back-text {
    margin-right: 10px;
  }

  &__title {
    display: inline-block;
    font-size: 14px;
    font-weight: $regular;
    text-transform: uppercase;
    letter-spacing: 0.01em;
  }
}

.back-link-secondary {
  display: block;
  text-decoration: none !important;
  background-color: $neutral10;
  transition: background-color $duration $timing;

  &:hover, &:active {
    background-color: $neutral20;
  }

  &:focus-visible {
    background-color: $focusTertiary;
    outline: 0;
  }

  &__container {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
    padding-top: 31px;
    padding-bottom: 28px;
  }

  &__icon, &__project-title {
    .back-link-secondary:hover & {
      color: $neutral70;
    }

    .back-link-secondary:focus-visible & {
      color: $neutral80;
    }

    .back-link-secondary:active & {
      color: $accentPrimary;
    }
  }

  &__icon {
    margin-right: 16px;
    color: $neutral50;
    transition: color $duration $timing;
  }

  &__text {
    width: 100%;
  }

  &__back-text {
    @include utilityPrimary;
    font-size: 14px;
    color: $neutral75;
  }

  &__project-title {
    @include templateHead;
    display: block;
    font-size: 17px;
    line-height: 1.556;
    color: $neutral50;
    transition: color $duration $timing;
  }
}
/* stylelint-enable  declaration-no-important */

.close-button-primary {
  font-size: 15px;
  color: $neutral50;
  text-decoration: none;
  cursor: pointer;
}
