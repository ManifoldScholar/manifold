.drawer-frontend, .drawer-reader {
  position: fixed;
  top: 60px;
  right: 0;
  bottom: 0;
  width: 100%;
  overflow: scroll;
  // Required to overrwrite reader-mode color
  color: $neutralOffBlack;
  background-color: $neutral05;

  &.left {
    right: auto;
    left: 0;

    .drawer-enter & {
      left: -100%;
    }

    .drawer-leave.drawer-leave-active & {
      left: -100%;
    }

    @include respond($break120) {
      width: 850px;

      .drawer-enter & {
        left: -850px;
      }

      .drawer-leave.drawer-leave-active & {
        left: -850px;
      }
    }

    .drawer-enter.drawer-enter-active & {
      left: 0;
    }

    .drawer-leave & {
      left: 0;
    }
  }

  // Scoped adjustments need to come first in order to be
  // overridden by media queries
  // scss-lint:disable DeclarationOrder
  .drawer-enter & {
    right: -100%;
  }

  .drawer-leave.drawer-leave-active & {
    right: -100%;
    transition: right $duration $timing,
      left $duration $timing;
  }

  @include respond($break40) {
    top: 80px;
  }

  @include respond($break75) {
    width: 70vw;

    .drawer-enter & {
      right: -70vw;
    }

    .drawer-leave.drawer-leave-active & {
      right: -70vw;
      transition: right $duration $timing,
        left $duration $timing;
    }
  }

  @include respond($break120) {
    width: 850px;

    .drawer-enter & {
      right: -850px;
    }

    .drawer-leave.drawer-leave-active & {
      right: -850px;
      transition: right $duration $timing,
        left $duration $timing;
    }
  }

  .drawer-enter.drawer-enter-active & {
    right: 0;
    transition: right $duration $timing,
      left $duration $timing;
  }

  .drawer-leave & {
    right: 0;
  }

  .reader & {
    top: 0;
  }
}

.drawer-bar {
  &__close-button {
    @include buttonUnstyled;
    display: inline-flex;
    align-items: center;
    justify-content: flex-end;
    transition: color $duration $timing;
  }

  &__close-icon {
    &--large {
      margin-right: -9px;

      @include respond($break50) {
        width: 56.889px;
        height: 56.889px;
        margin-right: -12px;
      }
    }
  }

  .drawer-backend & {
    padding-bottom: 18px;
    text-align: right;

    @include respond($break50) {
      padding-bottom: 26px;
    }

    &__close-button {
      color: $neutral70;
      cursor: pointer;

      &:hover {
        color: $accentPrimary;
        outline: 0;
      }

      &:focus-visible {
        color: $focusPrimary;
      }
    }

    &__close-text {
      @include utilityPrimary;
      margin-right: 12px;
      font-size: 12px;
      font-weight: $semibold;
      letter-spacing: 0.125em;
    }

    &__close-icon {
      &--large {
        display: none;
      }
    }
  }

  .drawer-frontend &,
  .drawer-reader & {
    @include drawerPadding(padding-right, 'heavy');
    @include drawerPadding(padding-left);
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding-top: 3px;
    padding-bottom: 10px;

    @include respond($break60) {
      padding-top: 16px;
      padding-bottom: 18px;
    }

    &__title {
      @include utilityPrimary;
      display: flex;
      flex-grow: 1;
      align-items: center;
      font-size: 14px;
      color: $neutral50;

      &--large {
        font-size: 22px;
        text-transform: none;
      }
    }

    &__title-button {
      color: $neutral90;
      cursor: pointer;
      border: 0;
      transition: color $duration $timing;

      &:hover,
      &:focus-visible {
        color: $neutral70;
        outline: 0;
      }
    }

    &__title-icon {
      position: relative;
      top: 2px;
      margin-right: 10px;
    }

    &__close-button {
      font-size: 17px;
      color: $neutral50;
      cursor: pointer;
      transition: color $duration $timing;

      &:hover {
        color: $neutral75;
      }
    }

    &__close-text {
      @include templateHead;
      display: none;
      font-size: 17px;
      letter-spacing: 0.015em;

      @include respond($break50) {
        display: inline;
      }
    }

    &__close-icon {
      margin-left: 16px;

      &--small {
        display: none;
      }
    }
  }
}

.drawer-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: transparentize($neutralBlack, 0.35);

  .drawer-enter & {
    opacity: 0.01;
  }

  .drawer-enter.drawer-enter-active & {
    opacity: 1;
    transition: opacity $duration $timing;
  }

  .drawer-leave & {
    opacity: 1;
  }

  .drawer-leave.drawer-leave-active & {
    opacity: 0.01;
    transition: opacity $duration $timing;
  }
}
