.drawer {
  position: fixed;
  bottom: 0;
  width: 100%;
  overflow: auto;
  will-change: transform;
  transition: transform $duration $timing;

  // context
  &--backend,
  &--frontend {
    &.drawer--pos-default {
      top: 82px;
      top: var(--header-height, 82px);
    }
  }

  &--backend {
    background-color: $neutral100;

    .button-switch-primary {
      margin-bottom: 28px;
    }
  }

  &--frontend {
    background-color: $neutralWhite;
  }

  &--reader {
    color: $neutralOffBlack;
    background-color: $neutral05;

    &.drawer--pos-default {
      top: 47px;
    }
  }

  // position
  &--pos-overlay {
    top: 0;
  }

  &--right,
  &--left {
    .drawer-enter.drawer-enter-active &,
    .drawer-leave & {
      transform: translateX(0);
    }
  }

  &--right {
    right: 0;
    left: auto;

    .drawer-enter &,
    .drawer-leave.drawer-leave-active & {
      transform: translateX(100%);
    }
  }

  &--left {
    right: auto;
    left: 0;

    .drawer-enter &,
    .drawer-leave.drawer-leave-active & {
      transform: translateX(-100%);
    }
  }

  // size
  &--default {
    @include respond($break65) {
      width: 400px;
    }

    @include respond($break90) {
      width: 555px;
    }
  }

  &--wide {
    @include respond($break75) {
      width: 70vw;
    }

    @include respond($break120) {
      width: 850px;
    }
  }

  &--flexible {
    @include respond($break75) {
      width: auto;
      max-width: 75%;
    }

    @include respond($break95 * (4 / 3)) {
      max-width: 1024px;
    }

    @include respond($break120 + (500 * 2)) {
      width: calc((100vw - #{$containerWidthInner}) / 2);
    }
  }

  // padding
  &--pad-default,
  &--pad-large {
    padding: 20px $containerPaddingResp 33px;
  }

  &--pad-default {
    @include respond($break90) {
      padding: 33px 48px;
    }
  }

  &--pad-large {
    @include respond($break65) {
      padding: 33px 48px;
    }

    @include respond($break90) {
      padding: 33px 156px 66px 98px;
    }

    @include respond($break120 + (500 * 2)) {
      padding: 33px 70px;
    }
  }

  // scoped selectors (TODO: un-nest)
  .utility-primary {
    color: $neutralWhite;
  }

  .list-pagination-primary {
    @include constrainedPaginationResponsive;
  }

  // full width selects
  .form-secondary .form-select {
    width: 100%;
  }

  .actions {
    margin-top: 40px;

    @include respond($break95) {
      margin-top: 60px;
    }
  }
}
