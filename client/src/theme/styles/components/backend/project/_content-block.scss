.content-block {
  $inactiveBlockColor: #424242;
  padding-top: 9px;
  padding-bottom: 9px;

  &--inactive {
    color: $inactiveBlockColor;
  }

  &--active {
    color: $neutral30;
  }

  &__inner {
    @include panelRounded;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 15px 10px 15px 12px;
    cursor: move; // fallback for older browsers
    cursor: grab;

    .content-block--current & {
      padding-right: 12px;
      cursor: default;

      @include respond($break90) {
        padding: 10px 19px 10px 23px;
      }
    }

    .content-block--is-dragging & {
      box-shadow: 0 31px 26px -13px rgba($neutralBlack, 0.33);
    }

    &:focus {
      outline: none;

      .content-block--available.content-block--active & {
        .content-block__heading {
          color: $accentPrimary;
        }
      }
    }
  }

  &__heading {
    display: flex; // use flexbox as fallback
    flex-grow: 1;
    align-items: center;
    transition: color $duration $timing;

    // enhance with grid if browser supports
    @supports (grid-auto-columns: min-content) {
      display: grid;
      grid-template-columns: max-content auto;
    }

    &:hover {
      .content-block--available.content-block--active & {
        color: $accentPrimary;
      }
    }
  }

  &__icon {
    transition: color $duration $timing;
    // if block is inactive, or icon needs to inherit color via hover of parent,
    // inherit fill color from element.
    // otherwise use a modifier to set a different color.
    .content-block--inactive &,
    .content-block--available .content-block__heading:hover &,
    .content-block--available .content-block__inner:focus &
     {
      color: inherit;
      transition: none;
    }

    &--light {
      color: $neutral50;
    }

    &--dark {
      color: $neutral75;
    }

    &--large {
      width: 36px;
      height: 36px;

      @include respond($break90) {
        width: 46px;
        height: 46px;
      }
    }

    &--incomplete {
      color: $sp40Secondary;
    }

    &:hover {
      .content-block__icon--add {
        color: $accentPrimary;
      }
    }
  }

  &__title {
    @include templateHead;
    margin-left: 15px;
    font-size: 17px;
    font-weight: $regular;

    &--small {
      margin-bottom: 3px;
    }

    &--large {
      margin-right: 8%;
      margin-bottom: 5px;
      font-weight: $medium;

      @include respond($break90) {
        margin-left: 23px;
        font-size: 20px;
      }
    }
  }

  &__button-list {
    display: flex;

    > * + * {
      margin-left: 2vw;

      @include respond($break60) {
        margin-left: 14px;
      }
    }
  }

  &__button {
    @include buttonUnstyled;
    --hover-color: #{$accentPrimary};

    &--delete {
      --hover-color: #{$sp40Tertiary};
    }

    &--draggable {
      cursor: move; // fallback for older browsers
      cursor: grab;
      user-select: none;
      -webkit-touch-callout: none;
    }

    &:not(:disabled):hover,
    &:not(:disabled):focus {
      outline: none;

      > .content-block__icon {
        color: $accentPrimary; // fallback
        color: var(--hover-color, $accentPrimary);
      }
    }
  }
}
