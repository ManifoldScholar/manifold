// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frontend/containers/Subscriptions matches the snapshot 1`] = `
<Connect(withRouter(AuthorizeComponent))
  failureNotification={
    Object {
      "body": "errors.unauthorized.body",
      "heading": "errors.unauthorized.heading",
      "level": 2,
    }
  }
  failureRedirect="/login"
  kind="any"
>
  <section
    className="bg-neutral05"
  >
    <div
      className="container"
    >
      <form
        autoComplete="off"
        className="subscriptions"
        method="post"
        onSubmit={[Function]}
      >
        <h1
          className="form-heading"
        >
          forms.notifications.title
          <span
            className="instructions"
          >
            forms.notifications.instructions
          </span>
        </h1>
        <withI18nextTranslation(NotificationsForm)
          authentication={
            Object {
              "authenticated": true,
              "currentUser": Object {
                "attributes": Object {
                  "abilities": Object {
                    "create": true,
                    "createEntitlements": true,
                    "createPermissions": true,
                    "createResourceCollections": true,
                    "createResources": true,
                    "createTexts": true,
                    "createTwitterQueries": true,
                    "delete": true,
                    "manageEntitlements": true,
                    "manageEvents": true,
                    "managePermissions": true,
                    "manageResourceCollections": true,
                    "manageResources": true,
                    "manageSocials": true,
                    "manageTexts": true,
                    "manageTwitterQueries": true,
                    "read": true,
                    "readDeleted": true,
                    "readDrafts": true,
                    "readLog": true,
                    "readSecrets": true,
                    "update": true,
                    "updateMakers": true,
                  },
                  "avatarStyles": Object {},
                  "classAbilities": Object {
                    "annotation": Object {
                      "create": true,
                      "read": true,
                    },
                    "comment": Object {
                      "create": true,
                      "read": true,
                    },
                    "permission": Object {
                      "create": true,
                      "read": true,
                    },
                    "project": Object {
                      "create": true,
                      "read": true,
                    },
                    "projectCollection": Object {
                      "create": true,
                      "read": true,
                      "update": true,
                    },
                    "resource": Object {
                      "create": true,
                      "read": true,
                    },
                    "settings": Object {
                      "create": true,
                      "read": true,
                      "update": true,
                    },
                    "statistics": Object {
                      "create": true,
                      "read": true,
                    },
                    "subject": Object {
                      "create": true,
                      "read": true,
                    },
                    "text": Object {
                      "create": true,
                      "read": true,
                      "update": true,
                    },
                    "user": Object {
                      "create": true,
                      "read": true,
                      "update": true,
                    },
                    "version": Object {
                      "create": true,
                      "read": true,
                    },
                  },
                  "email": "test@cic-fake.gotcha",
                  "firstName": "Rowan",
                  "fullName": "Rowan Ida",
                  "isCurrentUser": true,
                  "kind": "admin",
                  "lastName": "Ida",
                  "role": "admin",
                },
                "id": "AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE",
                "relationships": Object {},
                "type": "users",
              },
            }
          }
          changeHandler={[Function]}
          digestProjectsChangeHandler={[Function]}
          unsubscribeAllHandler={[Function]}
        />
        <div
          className="row-1-p"
        >
          <div
            className="form-input form-error"
          >
            <input
              className="button-secondary button-secondary--with-room"
              type="submit"
              value="forms.notifications.submit_label"
            />
          </div>
        </div>
      </form>
    </div>
  </section>
</Connect(withRouter(AuthorizeComponent))>
`;
