// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Backend.Form.Upload component when the upload input does not have a value renders correctly 1`] = `
<div
  className="form-input"
>
  <div
    className="form-input"
    style={Object {}}
  >
    <label
      className=""
      htmlFor="upload-1"
    >
      Cover
    </label>
    <react-dropzone
      accepts={
        Object {
          "accepts": "image/*",
          "extensions": "gif, jpeg, jpg, png, svg",
        }
      }
      className="form-dropzone style-portrait"
      inputProps={
        Object {
          "aria-describedby": "upload-error-1",
          "id": "upload-1",
        }
      }
      multiple={false}
      onDrop={[Function]}
      style={undefined}
    >
      <div
        className="contents-empty"
      >
        <i
          aria-hidden="true"
          className="manicon manicon-cloud-up"
        />
        <div
          className="message"
        >
          <p
            className="primary"
          >
            <span
              className="fake-link"
              role="button"
              tabIndex="0"
            >
              Upload a file
            </span>
             or 
            <br />
            drag and drop here
            <br />
          </p>
          <p
            className="secondary"
          >
            gif, jpeg, jpg, png, svg
          </p>
        </div>
      </div>
    </react-dropzone>
  </div>
</div>
`;

exports[`Backend.Form.Upload component when the upload input doesn't have a remove prop renders correctly 1`] = `
<div
  className="form-input"
>
  <div
    className="form-input"
    style={Object {}}
  >
    <label
      className=""
      htmlFor="upload-1"
    >
      Cover
    </label>
    <react-dropzone
      accepts={
        Object {
          "accepts": "image/*",
          "extensions": "gif, jpeg, jpg, png, svg",
        }
      }
      className="form-dropzone style-portrait"
      inputProps={
        Object {
          "aria-describedby": "upload-error-1",
          "id": "upload-1",
        }
      }
      multiple={false}
      onDrop={[Function]}
      style={undefined}
    >
      <div
        className="contents-image-preview"
      >
        <div
          className="preview"
          data-id="preview"
          style={
            Object {
              "backgroundImage": "url(/some/image.jpg)",
            }
          }
        >
          <span
            className="screen-reader-text"
          >
            Upload Preview
          </span>
        </div>
        <div
          className="message"
        >
          <p
            className="secondary"
          >
            <span
              className="fake-link"
              data-id="remove"
              onClick={[Function]}
              role="button"
              tabIndex="0"
            >
              Remove this image
            </span>
            <br />
            or
             
            <span
              className="fake-link"
              role="button"
              tabIndex="0"
            >
              Upload an image
            </span>
          </p>
        </div>
      </div>
    </react-dropzone>
  </div>
</div>
`;

exports[`Backend.Form.Upload component when the upload input doesn't have set and setOther methods renders correctly 1`] = `
<div
  className="form-input"
>
  <div
    className="form-input"
    style={Object {}}
  >
    <label
      className=""
      htmlFor="upload-1"
    >
      Cover
    </label>
    <react-dropzone
      accepts={
        Object {
          "accepts": "image/*",
          "extensions": "gif, jpeg, jpg, png, svg",
        }
      }
      className="form-dropzone style-portrait"
      inputProps={
        Object {
          "aria-describedby": "upload-error-1",
          "id": "upload-1",
        }
      }
      multiple={false}
      onDrop={[Function]}
      style={undefined}
    >
      <div
        className="contents-image-preview"
      >
        <div
          className="preview"
          data-id="preview"
          style={
            Object {
              "backgroundImage": "url(/some/image.jpg)",
            }
          }
        >
          <span
            className="screen-reader-text"
          >
            Upload Preview
          </span>
        </div>
        <div
          className="message"
        >
          <p
            className="secondary"
          >
            <span
              className="fake-link"
              data-id="remove"
              onClick={[Function]}
              role="button"
              tabIndex="0"
            >
              Remove this image
            </span>
            <br />
            or
             
            <span
              className="fake-link"
              role="button"
              tabIndex="0"
            >
              Upload an image
            </span>
          </p>
        </div>
      </div>
    </react-dropzone>
  </div>
</div>
`;

exports[`Backend.Form.Upload component when the upload input has a value renders correctly 1`] = `
<div
  className="form-input"
>
  <div
    className="form-input"
    style={Object {}}
  >
    <label
      className=""
      htmlFor="upload-1"
    >
      Cover
    </label>
    <react-dropzone
      accepts={
        Object {
          "accepts": "image/*",
          "extensions": "gif, jpeg, jpg, png, svg",
        }
      }
      className="form-dropzone style-portrait"
      inputProps={
        Object {
          "aria-describedby": "upload-error-1",
          "id": "upload-1",
        }
      }
      multiple={false}
      onDrop={[Function]}
      style={undefined}
    >
      <div
        className="contents-image-preview"
      >
        <div
          className="preview"
          data-id="preview"
          style={
            Object {
              "backgroundImage": "url(/some/image.jpg)",
            }
          }
        >
          <span
            className="screen-reader-text"
          >
            Upload Preview
          </span>
        </div>
        <div
          className="message"
        >
          <p
            className="secondary"
          >
            <span
              className="fake-link"
              data-id="remove"
              onClick={[Function]}
              role="button"
              tabIndex="0"
            >
              Remove this image
            </span>
            <br />
            or
             
            <span
              className="fake-link"
              role="button"
              tabIndex="0"
            >
              Upload an image
            </span>
          </p>
        </div>
      </div>
    </react-dropzone>
  </div>
</div>
`;
