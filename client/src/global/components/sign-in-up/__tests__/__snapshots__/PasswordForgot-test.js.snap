// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`global/components/sign-in-up/PasswordForgot matches the snapshot 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      Object {
        "key": "test-key",
        "pathname": "/",
      },
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "test-key",
            "pathname": "/",
            "search": "",
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "test-key",
          "pathname": "/",
          "search": "",
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <HelmetProvider
      context={
        Object {
          "helmet": Object {
            "base": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "bodyAttributes": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "htmlAttributes": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "link": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "meta": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "noscript": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "priority": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "script": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "style": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
            "title": Object {
              "toComponent": [Function],
              "toString": [Function],
            },
          },
        }
      }
    >
      <Provider
        store={
          Object {
            "@@observable": [Function],
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
      >
        <I18nextProvider>
          <PasswordForgotContainer
            dispatch={[Function]}
            handleViewChange={[MockFunction]}
            hideSignInUpOverlay={[Function]}
          >
            <div>
              <mockConstructor>
                <form
                  aria-labelledby={1}
                  className="focusable-form"
                  method=""
                  onSubmit={[Function]}
                  tabIndex={-1}
                >
                  <h2
                    className="form-heading"
                    id={1}
                  >
                    Reset Password
                  </h2>
                  <div
                    className="row-1-p"
                  >
                    <div
                      className="form-input form-error"
                    >
                      <label
                        htmlFor="password-forgot-email"
                      >
                        Email
                      </label>
                      <Errorable
                        containerStyle={Object {}}
                        errors={Array []}
                        name="email"
                      >
                        <div
                          className=""
                          style={Object {}}
                        >
                          <input
                            aria-describedby="password-forgot-email-error"
                            id="password-forgot-email"
                            name="email"
                            onChange={[Function]}
                            placeholder="Email"
                            type="text"
                            value=""
                          />
                        </div>
                      </Errorable>
                    </div>
                  </div>
                  <div
                    className="row-1-p"
                  >
                    <div
                      className="form-input"
                    >
                      <input
                        className="button-secondary button-secondary--with-room"
                        type="submit"
                        value="Send Password Reset Email"
                      />
                    </div>
                  </div>
                </form>
              </mockConstructor>
              <p
                className="login-links"
              >
                <button
                  data-id="show-login"
                  onClick={[Function]}
                >
                  Remember your password?
                </button>
                <button
                  data-id="show-create"
                  onClick={[Function]}
                >
                  Need to sign up?
                </button>
              </p>
            </div>
          </PasswordForgotContainer>
        </I18nextProvider>
      </Provider>
    </HelmetProvider>
  </Router>
</MemoryRouter>
`;
