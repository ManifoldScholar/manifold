replicaCount: 1

imagePullSecrets:
  - name: github

volumes:
  - name: shared-storage
    persistentVolumeClaim:
      claimName: princeton-manifold-production-shared-pvc

resources:
  limits:
    memory: "4Gi"
    cpu: "600m"
  requests:
    memory: "2Gi"
    cpu: "300m"

livenessProbe:
  enabled: false
readinessProbe:
  enabled: false

ingress:
  enabled: true
  hosts:
    - host: princeton-manifold-production.softserv.cloud
      paths:
        - path: /
          pathType: ImplementationSpecific
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    cert-manager.io/cluster-issuer: "letsencrypt-production-dns"
  tls:
    - hosts:
        - princeton-manifold-production.softserv.cloud
      secretName: production-princeton-manifold-tls

redis:
  enabled: true
  architecture: standalone
  auth:
    password: $REDIS_PASSWORD # FIXME need to set

env:
  rails_secret_key: $SECRET_KEY_BASE

postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    tag: 14.5.0-debian-11-r35
  auth:
    database: princeton_manifold_production
    password: $DB_PASSWORD
    username: princeton_manifold
  containerPorts:
    postgresql: 5432
  primary:
    service:
      ports:
        postgresql: 5432
  readReplicas:
    service:
      ports:
        postgresql: 5432

nginx:
  enabled: true
  service:
    type: ClusterIP
  serverBlock: |-
    upstream manifold_api {
      server unix:/manifold_sockets/manifold-api;
     }

     upstream manifold_cable {
      server unix:/manifold_sockets/manifold-cable;
     }

     upstream manifold_client {
      server unix:/manifold_sockets/manifold-client;
     }

    server {
      listen 80;
      root /opt/manifold/client/dist/build/client/build;

      add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload";
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;

      include includes/manifold-server-local;

      client_max_body_size 100M;
      client_body_timeout 600s;
      proxy_send_timeout 600s;
      proxy_read_timeout 600s;

      error_page 500 502 503 504 /50x.html;

      location = /50x.html {
          root  /opt/manifold/client/dist/build/client/build/static;
        }

      location /api {

        location ~ ^/(api/static|api/sidekiq/images|api/sidekiq/stylesheets|api/sidekiq/javascripts)/ {
          root /opt/manifold/api/public;
        }

        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Sendfile-Type X-Accel-Redirect;
        proxy_set_header X-Accel-Mapping /opt/manifold/api/public=/__send_file_accel/;
        proxy_pass http://manifold_api;
      }

      location /__send_file_accel {
        internal;
        alias /opt/manifold/api/public;
      }

      location /system {
        root /opt/manifold/api/public;
      }

      location /auth {
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_pass http://manifold_api;
      }

      location /cable {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_pass http://manifold_cable;
      }

      location / {

        include includes/manifold-client-local;

        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;

        if (-f $request_filename/index.html) {
          rewrite (.*) $1/index.html break;
        }

        if (-f $request_filename.html) {
          rewrite (.*) $1.html break;
        }

        if (!-f $request_filename) {
          proxy_pass http://manifold_client;
          break;
        }
      }
    }
