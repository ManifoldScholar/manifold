# Copied from github.com/ManifoldScholar/manifold-docker-compose (v8.1.1)
version: "3"

x-api: &api
  image: ghcr.io/notch8/princeton-manifold/api:${TAG:-latest}
  build:
    context: .
    target: manifold-api
    args:
      - EXTRA_APK_PACKAGES=less vim bash rsync
  volumes:
    - ./data/api/public:/opt/manifold/api/public
  env_file:
    - .env.development
  networks:
    - internal

services:
  postgres:
    image: postgres:13.12-alpine
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'manifold_production'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    networks:
      - internal

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.7
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      xpack.security.enabled: 'false'
    networks:
      - internal

  redis:
    image: redis:alpine
    volumes:
      - ./data/redis:/data
    networks:
      - internal

  api_cable:
    <<: *api
    command: ["./start-and-run", "bin/cable"]

  api_clockwork:
    <<: *api
    env_file:
      - .env.development
    environment:
      - SERVER_PORT=4000
    command: ["./start-and-run", "bin/zhong zhong.rb"]

  api_rails:
    <<: *api
    command: ["./start-and-run", "bin/puma -C config/puma.rb"]

  api_sidekiq:
    <<: *api
    command: ["./start-and-run", "bin/sidekiq"]

  client:
    image: ghcr.io/notch8/princeton-manifold/client:${TAG:-latest}
    build:
      context: .
      target: manifold-client
      args:
        - EXTRA_APK_PACKAGES=less vim bash rsync
    env_file:
      - .env.development
    volumes:
      - ./data/api/public:/opt/manifold/api/public
    command: yarn run start-docker
    networks:
      - internal

  nginx:
    image: ghcr.io/notch8/princeton-manifold/nginx:${TAG:-latest}
    build:
      context: .
      target: manifold-nginx
      args:
        - EXTRA_APK_PACKAGES=less vim bash rsync
    env_file:
      - .env.development
    volumes:
      - ./data/nginx/ssl:/etc/nginx/ssl
      - ./data/api/public:/opt/manifold/api/public
    ports:
     - "4000:80"
     - "4001:443"
    networks:
      - internal

networks:
  internal:
