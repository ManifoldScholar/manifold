require "rails_helper"

RSpec.describe Ingestor::Strategy::GoogleDoc::Strategy, :integration do

  shared_examples "output text assertions" do
    describe "the text generated by the ingestion" do

      it "has a language that matches the manifest meta title" do
        expect(@text.metadata["language"]).to eq "language"
      end

      it "has a title that matches the manifest meta title" do
        expect(@text.title).to eq "A Collection of Google Docs"
      end

      it "has a rights that matches the manifest meta title" do
        expect(@text.metadata["rights"]).to eq "rights"
      end

      it "has a description that matches the manifest meta title" do
        expect(@text.description).to eq "description"
      end

      it "has four text section" do
        expect(@text.text_sections.length).to be 4
      end

      it "has a TOC" do
        expect(@text.toc).to_not be_empty
      end

      it "has an empty landmarks property" do``
        expect(@text.landmarks).to eq []
      end

      it "has an empty page list" do
        expect(@text.page_list).to eq []
      end

      it "has one stylesheet" do
        expect(@text.stylesheets.length).to eq 2
      end

      it "has four entries in the spine" do
        expect(@text.spine.length).to eq 4
      end

      it "has four ingestion sources" do
        expect(@text.ingestion_sources.length).to eq 4
      end

      it "has the correct number of creators" do
        expect(@text.collaborators.count).to eq 2
      end

    end
  end

  after(:all) do
    Ingestor.reset_logger
  end

  context "when pulling multiple sources specified in manifest.yml" do

    before(:all) do
      logger = NullLogger.new
      Ingestor.logger = logger
      Settings.potentially_update_from_environment!
      @creator = FactoryBot.create(:user)
      WebMock.allow_net_connect!
      @manifest = Rails.root.join("spec", "data", "ingestion", "google-doc", "manifest.yml").to_s
      @text = Ingestor.ingest(@manifest, @creator, Ingestor::Strategy::GoogleDocMulti::Strategy)
      WebMock.disable_net_connect!
    end

    include_examples "output text assertions"

    context "the text sections generated by the ingestion" do
      it "has the right titles" do
        test = ["Introduction", "Section 1.1", "Section 1.1a", "Title Set From TOC"]
        expect(@text.text_sections.pluck(:name)).to match_array test
      end
    end
  end
end
