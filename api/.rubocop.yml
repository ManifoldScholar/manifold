AllCops:
  TargetRubyVersion: 2.4
  DisplayCopNames: true
  Exclude:
      - 'vendor/**/*'
      - 'db/**/*'
      - 'bin/**/*'
      - 'spec/**/*'
      - 'tmp/**/*'
      - 'lib/patches/**/*'
      - 'lib/templates/**/*'
      - 'api/vendor/**/*'
      - 'api/tmp/**/*'
      - 'api/db/**/*'
      - 'api/bin/**/*'
      - 'api/spec/**/*'
      - 'api/lib/patches/**/*'
      - 'api/lib/templates/**/*'

Metrics/BlockLength:
  Exclude:
    - 'Rakefile'
    - '**/*.rake'
    - 'spec/**/*.rb'
    - 'zhong.rb'

Metrics/MethodLength:
  Max: 15

Metrics/ModuleLength:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Layout/HashAlignment:
  EnforcedLastArgumentHashStyle: ignore_implicit

Layout/DotPosition:
  EnforcedStyle: leading

Layout/HeredocIndentation:
  Enabled: false

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true

Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Layout/EmptyLinesAroundClassBody:
  Enabled: false

Layout/LineLength:
  Max: 140

Layout/BeginEndAlignment: # (new in 0.91)
  Enabled: true

Lint/AmbiguousBlockAssociation:
  Enabled: false

# This complains about perfectly valid delegation syntax
Lint/AmbiguousOperator:
  Enabled: false

Lint/RedundantCopDisableDirective:
  Enabled: true

Lint/DeprecatedOpenSSLConstant:
  Enabled: true

Lint/MixedRegexpCaptureTypes:
  Enabled: false

Lint/RaiseException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: true

Lint/ScriptPermission:
  Enabled: false

Lint/BinaryOperatorWithIdenticalOperands:
  Enabled: true

Lint/DuplicateElsifCondition:
  Enabled: true

Lint/EmptyConditionalBody:
  Enabled: true

Lint/FloatComparison:
  Enabled: true

Lint/MissingSuper:
  Enabled: false

Lint/OutOfRangeRegexpRef:
  Enabled: true

Lint/SelfAssignment:
  Enabled: true

Lint/TopLevelReturnWithArgument:
  Enabled: true

Lint/UnreachableLoop:
  Enabled: true

Lint/DuplicateRescueException:
  Enabled: true

Lint/ConstantDefinitionInBlock:
  Enabled: true

Lint/DuplicateRequire:
  Enabled: true

Lint/EmptyFile:
  Enabled: true

Lint/HashCompareByIdentity:
  Enabled: true

Lint/IdentityComparison:
  Enabled: true

Lint/RedundantSafeNavigation:
  Enabled: true

Lint/TrailingCommaInAttributeDeclaration:
  Enabled: true

Lint/UselessMethodDefinition:
  Enabled: true

Lint/UselessTimes:
  Enabled: true

Style/AccessorGrouping:
  Enabled: true

Style/ArrayCoercion:
  Enabled: true

Style/BisectedAttrAccessor:
  Enabled: true

Style/CaseLikeIf:
  Enabled: true

Style/ExplicitBlockArgument:
  Enabled: false

Style/GlobalStdStream:
  Enabled: false

Style/HashAsLastArrayItem:
  Enabled: true

Style/HashLikeCase:
  Enabled: true

Style/OptionalBooleanParameter:
  Enabled: true

Style/RedundantAssignment:
  Enabled: true

Style/RedundantFileExtensionInRequire:
  Enabled: true

Style/SingleArgumentDig:
  Enabled: false

Style/StringConcatenation:
  Enabled: false


Style/StringLiterals:
  EnforcedStyle: double_quotes

Style/CollectionMethods:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false

Style/FormatStringToken:
  Enabled: false

Style/ClassCheck:
  Enabled: true

Style/Documentation:
  Enabled: false

Style/FormatString:
  Enabled: false

Style/Lambda:
  Enabled: false

# This is acceptable Ruby syntax for callables
Style/LambdaCall:
  Enabled: false

Style/Not:
  Enabled: false

Style/SymbolProc:
  Enabled: false

Style/PercentLiteralDelimiters:
  Enabled: false

Style/RedundantReturn:
  Exclude:
    # Interactions often benefit from being able to explicitly return
    # to distinguish typos
    - app/services/**/*.rb
    - api/app/services/**/*.rb

Style/SymbolArray:
  Enabled: false

Style/AccessModifierDeclarations:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: true
  Exclude:
    # classy_enum generates them this way for clarity,
    # since they need to be loaded in one file to work.
    - app/enums/**/*.rb
    - api/app/enums/**/*.rb

Style/ExponentialNotation:
  Enabled: true

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/RedundantFetchBlock:
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Enabled: true

Style/RedundantRegexpEscape:
  Enabled: true

Style/SlicingWithRange:
  Enabled: true

Style/ClassEqualityComparison:
  Enabled: true

# We do this so rarely, that when we do it's generally for a good reason
Style/CombinableLoops:
  Enabled: false

Style/KeywordParametersOrder:
  Enabled: true

Style/RedundantSelfAssignment:
  Enabled: true

# It's often the case that breaking a complex condition into nested conditions can make
# the code more readable. All the changes suggested by this rule, IMO, made our code
# more complex and less legible.
Style/SoleNestedConditional:
  Enabled: false

Naming/HeredocDelimiterNaming:
  Enabled: false

Naming/PredicateName:
  ForbiddenPrefixes: ["is_"]

Naming/AccessorMethodName:
  Enabled: false

Naming/MethodParameterName:
  AllowedNames:
    - 'as'
    - 'at'
    - 'ok'
    - 'id'
    - 'io'
    - 'e'
    - 'on'
    - 'to'
